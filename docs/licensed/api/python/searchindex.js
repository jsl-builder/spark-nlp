Search.setIndex({"docnames": ["_templates/_autoapi/base/base", "_templates/_autoapi/index", "_templates/_autoapi/python/attribute", "_templates/_autoapi/python/class", "_templates/_autoapi/python/data", "_templates/_autoapi/python/exception", "_templates/_autoapi/python/function", "_templates/_autoapi/python/method", "_templates/_autoapi/python/module", "_templates/_autoapi/python/package", "getting_started/index", "index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/assertion_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/basetfmodel/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/build_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/generic_classifier_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/progresstracker/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/settings/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/create_graph/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/dataset_encoder/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model_saver/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/sentence_grouper/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/core_rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/fused_rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/gru_ops/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/lstm_ops/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/assertion_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/basetfmodel/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/build_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/generic_classifier_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/progresstracker/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/settings/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/create_graph/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/dataset_encoder/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model_saver/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/sentence_grouper/index", "reference/autosummary/sparknlp_jsl/alab/index", "reference/autosummary/sparknlp_jsl/annotator/annotation_merger/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertionDL/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertion_dl_reg/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/assertion_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_converter/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_key_phrase_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_sentence_splitter/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunker_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/index", "reference/autosummary/sparknlp_jsl/annotator/classification/document_log_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/classification/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_sequence_classification/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_token_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_distilbert_for_sequence_classification/index", "reference/autosummary/sparknlp_jsl/annotator/context/contextual_parser/index", "reference/autosummary/sparknlp_jsl/annotator/context/index", "reference/autosummary/sparknlp_jsl/annotator/deid/deIdentification/index", "reference/autosummary/sparknlp_jsl/annotator/deid/index", "reference/autosummary/sparknlp_jsl/annotator/deid/reIdentification/index", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/index", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/ner_disambiguator/index", "reference/autosummary/sparknlp_jsl/annotator/doc2_chunk_internal/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/average_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/bert_sentence_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/entity_chunk_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/generic_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/index", "reference/autosummary/sparknlp_jsl/annotator/merge/chunker_merge/index", "reference/autosummary/sparknlp_jsl/annotator/merge/index", "reference/autosummary/sparknlp_jsl/annotator/ner/index", "reference/autosummary/sparknlp_jsl/annotator/ner/iob_tagger/index", "reference/autosummary/sparknlp_jsl/annotator/ner/medical_ner/index", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_chunker/index", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_converter_internal/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/date_normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/drug_normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/re/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction_dl/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_ner_chunk_filter/index", "reference/autosummary/sparknlp_jsl/annotator/re/zero_shot_relation_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/resolver_merger/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/sentence_entity_resolver/index", "reference/autosummary/sparknlp_jsl/annotator/router/index", "reference/autosummary/sparknlp_jsl/annotator/tf_graph_builder/index", "reference/autosummary/sparknlp_jsl/base/index", "reference/autosummary/sparknlp_jsl/compatibility/index", "reference/autosummary/sparknlp_jsl/custom_transformer/index", "reference/autosummary/sparknlp_jsl/eval/index", "reference/autosummary/sparknlp_jsl/freeze/index", "reference/autosummary/sparknlp_jsl/functions/index", "reference/autosummary/sparknlp_jsl/index", "reference/autosummary/sparknlp_jsl/internal/index", "reference/autosummary/sparknlp_jsl/pretrained/index", "reference/autosummary/sparknlp_jsl/structured_deidentification/index", "reference/autosummary/sparknlp_jsl/text_to_documents_columns/index", "reference/autosummary/sparknlp_jsl/training/index", "reference/autosummary/sparknlp_jsl/updateModels/index", "reference/autosummary/sparknlp_jsl/util/index", "reference/autosummary/sparknlp_jsl/utils/alab_utils/index", "reference/autosummary/sparknlp_jsl/utils/index", "reference/index"], "filenames": ["_templates/_autoapi/base/base.rst", "_templates/_autoapi/index.rst", "_templates/_autoapi/python/attribute.rst", "_templates/_autoapi/python/class.rst", "_templates/_autoapi/python/data.rst", "_templates/_autoapi/python/exception.rst", "_templates/_autoapi/python/function.rst", "_templates/_autoapi/python/method.rst", "_templates/_autoapi/python/module.rst", "_templates/_autoapi/python/package.rst", "getting_started/index.rst", "index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/assertion_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/basetfmodel/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/build_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/generic_classifier_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/progresstracker/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/settings/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/create_graph/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/dataset_encoder/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model_saver/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/sentence_grouper/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/core_rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/fused_rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/gru_ops/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/lstm_ops/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/assertion_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/basetfmodel/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/build_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/generic_classifier_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/progresstracker/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/settings/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/create_graph/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/dataset_encoder/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model_saver/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/sentence_grouper/index.rst", "reference/autosummary/sparknlp_jsl/alab/index.rst", "reference/autosummary/sparknlp_jsl/annotator/annotation_merger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertionDL/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertion_dl_reg/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/assertion_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_converter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_key_phrase_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_sentence_splitter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunker_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/document_log_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_sequence_classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_token_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_distilbert_for_sequence_classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/context/contextual_parser/index.rst", "reference/autosummary/sparknlp_jsl/annotator/context/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/deIdentification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/reIdentification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/index.rst", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/ner_disambiguator/index.rst", "reference/autosummary/sparknlp_jsl/annotator/doc2_chunk_internal/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/average_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/bert_sentence_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/entity_chunk_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/index.rst", "reference/autosummary/sparknlp_jsl/annotator/merge/chunker_merge/index.rst", "reference/autosummary/sparknlp_jsl/annotator/merge/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/iob_tagger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/medical_ner/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_chunker/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_converter_internal/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/date_normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/drug_normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction_dl/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_ner_chunk_filter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/zero_shot_relation_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/resolver_merger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/sentence_entity_resolver/index.rst", "reference/autosummary/sparknlp_jsl/annotator/router/index.rst", "reference/autosummary/sparknlp_jsl/annotator/tf_graph_builder/index.rst", "reference/autosummary/sparknlp_jsl/base/index.rst", "reference/autosummary/sparknlp_jsl/compatibility/index.rst", "reference/autosummary/sparknlp_jsl/custom_transformer/index.rst", "reference/autosummary/sparknlp_jsl/eval/index.rst", "reference/autosummary/sparknlp_jsl/freeze/index.rst", "reference/autosummary/sparknlp_jsl/functions/index.rst", "reference/autosummary/sparknlp_jsl/index.rst", "reference/autosummary/sparknlp_jsl/internal/index.rst", "reference/autosummary/sparknlp_jsl/pretrained/index.rst", "reference/autosummary/sparknlp_jsl/structured_deidentification/index.rst", "reference/autosummary/sparknlp_jsl/text_to_documents_columns/index.rst", "reference/autosummary/sparknlp_jsl/training/index.rst", "reference/autosummary/sparknlp_jsl/updateModels/index.rst", "reference/autosummary/sparknlp_jsl/util/index.rst", "reference/autosummary/sparknlp_jsl/utils/alab_utils/index.rst", "reference/autosummary/sparknlp_jsl/utils/index.rst", "reference/index.rst"], "titles": ["&lt;no title&gt;", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Getting Started", "Spark NLP Documentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.assertion_dl.assertion_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.assertion_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.basetfmodel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.build_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.generic_classifier_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.progresstracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.settings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.create_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.dataset_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.ner_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.ner_model_saver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.sentence_grouper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.fused_rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.rnn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.assertion_dl.assertion_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.assertion_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.basetfmodel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.build_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.generic_classifier_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.progresstracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.create_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.dataset_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model_saver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.sentence_grouper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.alab</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.annotation_merger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion.assertionDL</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion.assertion_dl_reg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.assertion_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_sentence_splitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunker_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunkmapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunkmapper_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.document_log_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.context.contextual_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid.deIdentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid.reIdentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.disambiguation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.disambiguation.ner_disambiguator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.doc2_chunk_internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.average_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.generic_classifier.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.merge.chunker_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.iob_tagger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.medical_ner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.ner_chunker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.ner_converter_internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer.date_normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer.drug_normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_extraction_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_ner_chunk_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.zero_shot_relation_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution.resolver_merger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution.sentence_entity_resolver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.router</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.tf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.compatibility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.custom_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.freeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.pretrained</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.structured_deidentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.text_to_documents_columns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.updateModels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.utils.alab_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.utils</span></code>", "API Reference"], "terms": {"4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "thi": [1, 10, 11, 19, 20, 28, 29, 30, 31, 32, 33, 34, 42, 43, 53, 54, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 73, 77, 78, 88, 95, 96, 97, 113, 115, 120], "page": [1, 11, 92, 120], "list": [1, 3, 8, 28, 30, 32, 33, 34, 51, 53, 54, 56, 60, 64, 66, 67, 68, 71, 79, 84, 88, 89, 90, 95, 97, 98, 101, 102, 103, 113, 118, 120], "an": [1, 28, 29, 30, 32, 33, 34, 51, 53, 56, 64, 69, 71, 75, 76, 78, 79, 88, 91, 101, 104, 113, 115, 118, 120], "overview": [1, 120], "all": [1, 8, 20, 31, 34, 43, 51, 58, 59, 64, 66, 68, 71, 79, 88, 92, 101, 118, 120], "spark": [1, 20, 43, 51, 52, 53, 57, 58, 60, 61, 66, 67, 68, 69, 71, 75, 76, 78, 79, 84, 87, 88, 90, 91, 92, 95, 96, 97, 98, 102, 104, 107, 113, 115, 118, 120], "nlp": [1, 20, 43, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 118, 120], "modul": [1, 8, 9, 10, 11, 31], "class": [1, 3, 5, 8, 105, 116, 120], "function": [1, 6, 8, 31, 101, 103, 120], "method": [1, 3, 7, 20, 30, 32, 34, 43, 71, 81, 101, 120], "extend": [2, 5, 9, 53, 76, 88], "python": [2, 5, 9, 11, 29, 30, 31, 34], "data": [2, 8, 10, 28, 32, 33, 34, 53, 56, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 90, 91, 92, 95, 96, 97, 101, 103, 104, 113], "rst": [2, 5, 8, 9], "obj": [3, 4, 6, 7, 8], "displai": [3, 4, 6, 7, 8, 88], "py": [3, 4, 6, 7, 73, 77, 104], "type": [3, 4, 8, 28, 32, 33, 34, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 118], "short_nam": [3, 6, 7, 8], "arg": [3, 6, 7, 28, 32, 33, 34], "endif": [3, 4, 6, 7, 8], "return_annot": [3, 6, 7], "overload": [3, 6, 7], "length": [3, 7, 8, 32, 33, 53, 54, 66, 67, 68, 71, 75, 84, 103], "endfor": [3, 6, 7, 8], "base": [3, 20, 30, 32, 34, 43, 53, 54, 56, 58, 60, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 81, 84, 87, 88, 89, 90, 91, 95, 96, 101, 110], "show": [3, 4, 8, 53, 56, 58, 59, 60, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 92, 95, 96, 97, 115], "inherit": [3, 73, 77], "autoapi_opt": [3, 8], "link_obj": 3, "loop": [3, 29], "last": [3, 58, 78, 101], "diagram": 3, "object": [3, 29, 66, 67, 68, 88, 104, 107, 115], "autoapi": [3, 8], "full_nam": 3, "part": [3, 10, 34, 76], "privat": 3, "member": 3, "docstr": [3, 4, 6, 7, 8], "indent": [3, 4, 6, 7, 8], "set": [3, 8, 34, 51, 52, 53, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 106, 115, 118], "visible_class": [3, 8], "selectattr": [3, 8], "els": [3, 4, 6, 7, 8, 91], "rejectattr": [3, 8], "klass": [3, 8], "render": [3, 8], "visible_attribut": [3, 8], "attribut": [3, 8], "visible_method": 3, "name": [4, 8, 10, 20, 30, 32, 34, 43, 51, 53, 56, 57, 58, 60, 61, 66, 67, 68, 71, 75, 76, 78, 79, 81, 88, 95, 96, 97, 98, 101, 102, 103, 104, 113], "valu": [4, 28, 32, 33, 34, 52, 53, 56, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 88, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 106, 113], "i": [4, 6, 7, 8, 10, 28, 29, 30, 31, 32, 33, 34, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 88, 89, 91, 95, 96, 97, 98, 101, 102, 103, 104, 113], "none": [4, 6, 7, 8, 28, 30, 32, 33, 34, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 113, 115, 117, 118], "annot": [4, 10, 20, 43, 51, 104, 115, 118], "string": [4, 34, 75, 76, 89, 92, 103], "splitlin": 4, "count": [4, 51], "multilin": 4, "width": 4, "8": [4, 10, 34, 66, 67, 68, 88], "truncat": [4, 53, 56, 58, 60, 66, 67, 68, 69, 71, 76, 78, 92, 95, 96, 97], "100": [4, 20, 43, 81], "sphinx_vers": [6, 7], "properti": [6, 7, 28, 30, 32, 33, 34, 71], "method_typ": 7, "orphan": 8, "nest": [8, 28, 33, 34], "pars": [8, 71], "block": [8, 30, 32], "subpackag": 8, "visible_subpackag": 8, "toctre": 8, "titlesonli": 8, "maxdepth": 8, "index": [8, 10, 53, 118], "endblock": 8, "submodul": 8, "visible_submodul": 8, "content": 8, "visible_children": 8, "children": 8, "elif": 8, "equalto": 8, "packag": [8, 10], "import": [8, 10, 20, 43, 53, 54, 56, 60, 64, 66, 67, 68, 69, 71, 76, 78, 81, 84, 87, 88, 89, 90, 91, 95, 96, 101, 104, 115], "titl": [8, 51, 118], "visible_funct": 8, "summari": 8, "scope": [8, 32, 33, 34, 53], "id": [8, 34, 51, 57, 76, 113, 118], "obj_item": 8, "healthcar": [10, 11, 20, 43], "commerci": 10, "extens": [10, 78], "clinic": [10, 53, 54, 58, 61, 66, 67, 68, 71, 78, 79, 84, 87, 89, 90, 92, 95, 96, 97, 98], "biomed": 10, "text": [10, 52, 53, 54, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102], "mine": 10, "If": [10, 20, 28, 32, 33, 34, 43, 53, 56, 58, 59, 60, 62, 66, 68, 69, 71, 79, 81, 84, 88, 90, 91, 103, 113], "you": [10, 20, 43, 52, 53, 59, 61, 69, 71, 91, 102, 113], "don": [10, 60], "t": [10, 33, 34, 60, 69, 71], "have": [10, 33, 34, 51, 53, 59, 60, 61, 79, 84, 88, 101, 104], "subscript": 10, "yet": [10, 34], "can": [10, 28, 30, 32, 33, 34, 53, 54, 56, 58, 60, 66, 67, 68, 69, 71, 75, 79, 84, 88, 92, 98, 104], "ask": 10, "free": [10, 34], "trial": 10, "click": 10, "button": 10, "below": 10, "try": [10, 64, 81, 91, 101], "http": [10, 30, 31, 32, 33, 34, 75], "www": [10, 117], "johnsnowlab": [10, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102], "com": [10, 31, 34, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 117], "provid": [10, 32, 33, 34, 53, 59, 67, 69, 71, 88, 89, 113], "specif": [10, 20, 43, 79, 88, 92, 103], "pipelin": [10, 20, 43, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 104], "model": [10, 11, 20, 30, 32, 33, 34, 43, 51, 53, 54, 57, 58, 60, 61, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 95, 96, 97, 98, 101, 103, 105, 116], "embed": [10, 20, 28, 43, 53, 54, 56, 58, 60, 61, 66, 67, 68, 71, 75, 87, 88, 89, 90, 91, 95, 96, 97, 101, 102, 104], "entiti": [10, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 67, 69, 71, 75, 79, 84, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 113, 118], "recognit": [10, 34, 67, 88], "link": [10, 75], "normal": [10, 34, 64, 69, 101, 103], "assert": [10, 20, 43, 51, 56, 60, 115, 118], "statu": [10, 53, 54], "detect": 10, "de": [10, 71], "identif": [10, 113], "relat": [10, 20, 43, 51, 61, 79, 90, 95, 96, 97, 98, 118], "extract": [10, 51, 53, 54, 56, 58, 69, 75, 78, 88, 89, 95, 96, 97, 98, 101], "spell": 10, "check": [10, 105], "correct": 10, "The": [10, 20, 30, 31, 32, 33, 34, 43, 52, 53, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 75, 78, 79, 84, 88, 90, 91, 95, 98, 101, 102, 104, 113], "librari": [10, 11, 66, 67, 68, 76], "offer": 10, "access": 10, "sever": [10, 33, 53, 56, 71], "transform": [10, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 71, 75, 76, 78, 84, 88, 89, 91, 92, 95, 96, 97, 98, 101, 104, 106], "jsl": [10, 51, 118], "bert": [10, 58, 66, 67, 68, 78, 88, 96, 98, 102], "biobert": 10, "clinicalbert": 10, "glove": [10, 54], "med": 10, "icd": [10, 101], "o": [10, 34, 62, 67, 87, 90, 113], "It": [10, 28, 30, 32, 34, 69, 71, 81, 88, 104], "also": [10, 34, 66, 67, 68, 75], "includ": [10, 31, 51, 53, 88, 90, 97, 118], "over": [10, 29, 71], "50": [10, 20, 34, 43, 61, 69, 81, 88], "pre": [10, 76], "train": [10, 20, 32, 33, 34, 43, 51, 53, 54, 56, 60, 64, 66, 67, 68, 69, 71, 76, 78, 81, 84, 87, 88, 89, 90, 91, 95, 96, 98, 101, 104], "recogn": [10, 88, 90], "follow": [10, 29, 30, 69, 71, 88, 92, 117], "mani": [10, 28, 59, 75], "more": [10, 28, 29, 32, 33, 66, 67, 68, 71, 76, 92], "support": [10, 88], "sign": 10, "symptom": [10, 79], "treatment": [10, 98, 115], "procedur": 10, "test": [10, 53, 57, 59, 88, 102, 115], "lab": [10, 51, 115, 118], "section": [10, 95], "drug": [10, 79, 98], "dosag": 10, "strength": 10, "rout": 10, "durat": 10, "frequenc": [10, 34], "risk": 10, "factor": [10, 34], "smoke": 10, "obes": 10, "diabet": [10, 58, 78], "hypertens": 10, "substanc": 10, "abus": 10, "anatomi": 10, "organ": [10, 67, 113], "subdivis": 10, "cell": [10, 28, 29, 30, 32, 33, 34, 67, 88, 113], "structur": [10, 28, 34, 98, 113], "tissu": 10, "gene": 10, "chemic": 10, "demograph": 10, "ag": [10, 71, 84, 87, 113], "gender": [10, 84, 87], "height": 10, "weight": [10, 30, 32, 34, 51, 78, 79, 103], "race": 10, "ethnic": 10, "marit": 10, "vital": 10, "sensit": [10, 69, 78, 95, 97], "patient": [10, 53, 60, 69, 113], "address": [10, 58, 61, 66, 67, 68, 78, 79, 89, 98], "phone": [10, 113], "email": [10, 113], "date": [10, 52, 59, 71, 91, 102, 113], "identifi": [10, 57, 59, 84, 102, 113], "For": [10, 29, 34, 56, 66, 67, 71, 76, 78, 87, 88, 96, 98], "inform": [10, 11, 33, 34, 69, 71, 84], "visit": 10, "our": [10, 105], "site": [10, 69], "built": [10, 34], "top": [10, 58, 66, 67, 68], "apach": 10, "x": [10, 30, 31, 34, 91], "us": [10, 11, 28, 29, 30, 32, 33, 34, 51, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 113], "need": [10, 28, 30, 32, 33, 34, 54, 69, 71, 78, 89, 95], "java": [10, 73, 77, 104, 107, 115], "ar": [10, 29, 30, 31, 33, 34, 51, 56, 58, 59, 62, 64, 66, 67, 68, 71, 75, 78, 79, 81, 84, 88, 90, 95, 97, 98, 101, 102, 103, 105, 113, 118], "pyspark": [10, 51, 53, 54, 56, 60, 64, 66, 67, 68, 69, 71, 76, 78, 81, 84, 87, 88, 89, 90, 91, 95, 96, 98, 101, 113], "6": [10, 20, 34, 43, 97], "7": [10, 91], "recommend": [10, 75], "basic": [10, 32, 34], "knowledg": [10, 75], "framework": 10, "work": [10, 88], "environ": 10, "befor": [10, 34, 54, 58, 73, 77, 88], "pleas": [10, 66, 67, 88, 96], "refer": [10, 11, 58, 71, 76, 95], "document": [10, 20, 43, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 118], "first": [10, 33, 34, 57, 59, 69, 78, 88], "let": [10, 58], "": [10, 28, 30, 32, 34, 53, 56, 60, 71, 73, 75, 77, 78, 88, 101, 104], "make": [10, 58, 71], "sure": [10, 71], "version": [10, 20, 103, 106], "oracl": 10, "openjdk": 10, "0_292": 10, "pip": 10, "extra": [10, 56], "url": [10, 113], "pypi": 10, "secret": 10, "code": [10, 31, 34, 69, 101, 113, 115], "upgrad": 10, "split": [10, 28, 34, 59, 81, 118], "e": [10, 34, 53, 54, 58, 66, 67, 68, 71, 79, 88, 92, 95, 101], "onli": [10, 30, 31, 34, 51, 58, 61, 88], "avail": [10, 20, 31, 43, 66, 67, 88, 104], "user": [10, 69, 90], "valid": [10, 53, 81, 88, 97], "licens": 10, "did": 10, "receiv": [10, 34], "contact": [10, 113], "u": [10, 30, 34, 88, 116], "href": 10, "mailto": 10, "info": 10, "simpl": [10, 34], "piec": [10, 59], "sparknlp_jsl": 10, "Or": 10, "sparksess": [10, 51, 66, 67, 68, 98, 113, 118], "flexibl": [10, 29], "sql": [10, 51, 66, 67, 68, 98, 113], "builder": [10, 103], "appnam": 10, "enterpris": 10, "master": 10, "local": [10, 66, 67, 68, 98], "config": [10, 69], "driver": 10, "memori": [10, 32, 33, 34, 66, 67, 68], "16": 10, "maxresults": 10, "2g": 10, "jar": [10, 51, 118], "nlp_2": 10, "11": [10, 54, 60, 71, 91], "version_publ": 10, "getorcr": 10, "main": [11, 54], "workshop": [11, 34, 76, 88], "hub": [11, 66, 67, 88], "welcom": 11, "contain": [11, 32, 33, 34, 53, 54, 61, 66, 67, 68, 71, 76, 88, 101, 103, 113], "how": [11, 56, 58, 66, 67, 68, 75, 81, 84, 88, 90], "exampl": [11, 20, 29, 34, 43, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 104, 113, 115, 117], "get": [11, 53, 103, 118], "start": [11, 20, 28, 32, 43, 53, 54, 76, 84, 88, 95, 101, 118], "requir": [11, 32, 33, 34, 53, 54, 64, 66, 67, 68, 76, 88], "instal": 11, "session": [11, 51, 118], "from": [11, 19, 20, 28, 30, 32, 33, 34, 42, 43, 51, 52, 53, 54, 56, 57, 58, 60, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 104, 115, 117, 118], "api": 11, "model_op": [19, 42], "sourc": [19, 20, 28, 29, 30, 31, 32, 33, 34, 42, 43, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 113, 115, 117, 118], "gener": [19, 20, 42, 43, 51, 58, 81, 88, 113, 115, 118], "enumer": [19, 42, 118], "deriv": [19, 42], "defin": [19, 32, 42, 51, 54, 56, 60, 64, 69, 84, 90, 97], "new": [19, 34, 42, 53, 88, 90, 95, 96, 101, 103, 106], "model_tensor": [19, 42], "run_typ": [19, 42], "except": [20, 43, 88], "wrongtfvers": [20, 43], "common": [20, 43, 53, 56, 60, 64, 69, 71, 76, 78, 81, 84, 87, 88, 90, 91, 95, 96, 101, 104], "non": [20, 34, 43, 53, 79, 92], "exit": [20, 43], "tensorflowaddonsneed": 20, "tfgraphbuild": [20, 43, 103], "build_param": [20, 43], "creat": [20, 30, 32, 33, 34, 43, 53, 69, 97], "tensorflow": [20, 31, 33, 43, 53, 66, 67, 68, 81, 88, 95], "graph": [20, 43, 53, 88, 95, 103], "ner_dl": [20, 43, 88], "generic_classifi": [20, 43], "assertion_dl": [20, 43, 53], "relation_extract": [20, 43], "In": [20, 29, 34, 58, 69, 96], "tf_graph": [20, 43], "get_model": [20, 43], "genericclassifiertfgraphbuild": [20, 43], "tf": [20, 29, 31, 32, 33, 43, 66, 67, 68], "genericclassifierapproach": [20, 43, 81], "sparknlp": [20, 43, 53, 54, 56, 58, 60, 64, 66, 67, 68, 69, 71, 76, 78, 81, 84, 87, 88, 89, 90, 91, 95, 96, 101, 104], "datafram": [20, 43, 51, 97, 113, 118], "pd": [20, 43, 51, 118], "read_csv": [20, 43], "petfind": [20, 43], "mini": [20, 43], "csv": [20, 43, 60, 69, 71, 104], "dl_param": [20, 43], "input_dim": [20, 43], "302": [20, 43], "output_dim": [20, 34, 43], "hidden_lay": [20, 43], "300": [20, 43, 95], "200": [20, 34, 43, 95], "hidden_act": [20, 43], "tanh": [20, 30, 34, 43, 103], "hidden_act_l2": [20, 43], "batch_norm": [20, 43], "build": [20, 30, 32, 34, 43], "model_loc": [20, 43], "gc_graph": [20, 43], "model_filenam": [20, 43], "auto": [20, 43, 103], "gen_clf": [20, 43, 64, 81], "setlabelcolumn": [20, 43, 64, 81, 88, 95, 103], "target": [20, 43, 53, 54, 75, 76, 79, 81, 95, 96], "setinputcol": [20, 43, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 103, 104, 106], "featur": [20, 34, 43, 54, 81, 104], "setoutputcol": [20, 43, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 104, 106], "predict": [20, 34, 43, 53, 64, 75, 81, 88], "setmodelfil": [20, 43, 81, 95], "gcl": [20, 43], "pb": [20, 43, 81, 95], "setepochsnumb": [20, 43, 81, 95], "setbatchs": [20, 43, 53, 81, 88, 95, 96], "setfeaturesc": [20, 43, 81], "zscore": [20, 43, 81], "setfiximbal": [20, 43, 81, 95], "true": [20, 29, 32, 33, 34, 43, 51, 58, 59, 64, 66, 67, 68, 69, 71, 75, 76, 81, 88, 91, 95, 101, 103, 104, 113, 115, 118], "setlearningr": [20, 43, 53, 81, 95], "001": [20, 34, 43, 81, 88, 95], "setoutputlogspath": [20, 43, 53, 81, 88], "log": [20, 43, 53, 54, 81, 88], "setvalidationsplit": [20, 43, 53, 81, 88, 95], "clf_pipelin": [20, 43], "stage": [20, 43, 53, 54, 56, 57, 60, 69, 71, 75, 84, 87, 89, 90, 92, 95, 96, 97, 101], "features_asm": [20, 43, 81], "assertiontfgraphbuild": [20, 43], "assertiondlapproach": [20, 43, 53, 103], "feat_siz": [20, 43], "n_class": [20, 43], "blstm_34_32_30_": [20, 43], "_": [20, 43], "format": [20, 33, 43, 51, 69, 71, 84, 87, 88, 90, 91, 95, 113], "setlabelcol": [20, 43, 53, 54, 81, 101], "label": [20, 43, 51, 53, 54, 62, 64, 66, 67, 68, 71, 81, 84, 87, 88, 90, 95, 96, 98, 100, 101, 103, 118], "chunk": [20, 43, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 69, 71, 75, 76, 78, 79, 84, 87, 89, 90, 91, 95, 96, 97, 98, 101, 102], "128": [20, 34, 43, 53, 66, 67, 68], "setdropout": [20, 43, 53, 81, 88], "setepoch": [20, 43, 53], "setstartcol": [20, 43, 53, 54, 76], "setendcol": [20, 43, 53, 54], "end": [20, 33, 43, 53, 54, 84, 87, 88, 91, 95, 118], "setmaxsentlen": [20, 43, 53], "250": [20, 43, 53, 79], "setenableoutputlog": [20, 43, 53, 88], "training_log": [20, 43], "setgraphfold": [20, 43, 53, 88, 103], "nertfgraphbuild": [20, 43], "medicalnerapproach": [20, 43, 88, 103], "embeddings_dim": [20, 43], "nchar": [20, 43], "83": [20, 43], "ntag": [20, 43], "12": [20, 43], "is_med": [20, 43], "medical_ner_graph": [20, 43], "nertagg": [20, 43, 78, 88, 95, 96], "sentenc": [20, 43, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 75, 78, 84, 87, 88, 89, 90, 92, 96, 97, 98, 100, 101, 102, 118], "token": [20, 43, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 89, 90, 95, 96, 97, 101, 102, 118], "ner": [20, 43, 51, 53, 54, 58, 67, 71, 75, 78, 84, 98, 115, 118], "setmaxepoch": [20, 43, 88], "64": [20, 43, 60, 84, 87, 88], "setrandomse": [20, 43, 88], "setverbos": [20, 43, 53, 88], "setevaluationlogextend": [20, 43, 53, 88], "setincludeconfid": [20, 43, 53, 88], "ner_log": [20, 43], "setenablememoryoptim": [20, 43, 88], "relationextractiontfgraphbuild": [20, 43], "relationextractionapproach": [20, 43, 95, 103], "6000": [20, 43], "relu": [20, 34, 43, 103], "re_with_bn": [20, 43], "re_approach": [20, 43], "rel": [20, 43, 61, 78, 79, 91], "pos_tag": [20, 43, 95, 97], "train_ner_chunk": [20, 43, 95], "depend": [20, 33, 34, 43, 52, 59, 62, 79, 88, 95, 96, 97, 100, 102], "70": [20, 43, 60], "setfroment": [20, 43, 95], "begin1i": [20, 43], "end1i": [20, 43], "label1": [20, 43], "settoent": [20, 43, 95], "begin2i": [20, 43], "end2i": [20, 43], "label2": [20, 43], "tfgraphbuilderfactori": [20, 43], "factori": [20, 43], "differ": [20, 30, 34, 43, 58, 84, 97, 104], "static": [20, 34, 43, 58, 61, 66, 67, 68, 78, 79, 98], "return": [20, 28, 32, 33, 34, 43, 51, 53, 56, 58, 61, 62, 66, 67, 68, 71, 76, 78, 79, 88, 95, 96, 98, 100, 101, 118], "model_nam": [20, 43], "paramet": [20, 33, 43, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 113, 117, 118], "str": [20, 43, 51, 53, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 113, 117, 118], "want": [20, 43, 52, 53, 59, 61, 69, 71, 75, 92, 102, 113], "dict": [20, 43, 51, 69, 71, 79, 84, 88, 90, 95, 96, 98, 113, 118], "configur": [20, 43], "param": [20, 43, 51, 71, 73, 77, 118], "path": [20, 43, 51, 53, 54, 57, 60, 61, 64, 69, 71, 78, 81, 84, 88, 90, 95, 101, 103, 115, 117, 118], "where": [20, 33, 34, 43, 51, 56, 61, 71, 76, 81, 87, 95, 96, 103], "save": [20, 43, 51, 53, 61, 66, 67, 68, 71, 81, 88, 98, 117], "rb": [20, 43], "file": [20, 31, 43, 51, 53, 69, 71, 81, 84, 88, 103, 113], "put": [20, 29, 43, 59, 75], "filenam": [20, 43], "10": [20, 29, 43, 92, 101], "tmp": [20, 43], "print_model_param": [20, 43], "allow": [20, 33, 34, 43, 51, 59, 66, 67, 68, 88, 102, 113, 116], "descript": [20, 43, 58, 101, 115], "everi": [20, 29, 43, 88], "tf2contrib": 21, "core_rnn_cel": [21, 31], "fused_rnn_cel": [21, 31], "gru_op": [21, 31], "lstm_op": [21, 31], "rnn": [21, 28, 29, 31, 32, 34], "rnn_cell": [21, 29, 31], "implement": [28, 29, 30, 32, 34, 73, 77, 98, 104], "core": 28, "embeddingwrapp": 28, "inputprojectionwrapp": 28, "outputprojectionwrapp": 28, "embedding_class": 28, "embedding_s": 28, "initi": [28, 30, 32, 33, 34, 75, 88], "reus": [28, 30, 32, 34], "oper": [28, 29, 33, 34, 58], "ad": 28, "input": [28, 29, 30, 32, 33, 34, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104], "given": [28, 32, 34, 78, 98], "note": [28, 88], "case": [28, 32, 34, 51, 58, 61, 66, 67, 68, 69, 76, 78, 79, 88, 92, 95, 97], "mai": [28, 32, 34, 69, 76], "effici": [28, 29, 32, 33], "wrapper": [28, 30, 34, 107, 115], "instead": [28, 30, 66, 68], "concaten": [28, 33, 58], "whole": [28, 58], "sequenc": [28, 29, 32, 33, 66, 68, 71, 103], "your": [28, 59, 88, 113], "time": [28, 29, 30, 33, 34, 71, 88], "do": [28, 33, 90], "batch": [28, 33, 34, 53, 66, 67, 68, 81, 88, 103], "feed": [28, 66, 68], "state_s": [28, 30, 32, 33, 34], "size": [28, 30, 32, 33, 34, 53, 66, 67, 68, 81, 88, 103], "state": [28, 30, 32, 33, 34, 67, 88, 113], "repres": [28, 29, 30, 32, 34, 51, 56, 58, 60, 71], "integ": [28, 30, 32, 34, 58, 71, 113], "tensorshap": [28, 30, 32, 34], "tupl": [28, 30, 32, 33, 34], "output_s": [28, 30, 32, 34], "output": [28, 30, 32, 33, 34, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 118], "produc": [28, 30, 32, 33, 34, 84], "zero_st": [28, 34], "batch_siz": [28, 32, 33, 34], "dtype": [28, 32, 33, 34], "zero": [28, 32, 33, 34, 98], "fill": [28, 34], "tensor": [28, 32, 33, 34], "int": [28, 34, 51, 52, 53, 64, 66, 67, 68, 71, 75, 79, 81, 88, 91, 95, 96, 97, 101, 102, 103, 113, 117], "float": [28, 34, 53, 58, 64, 71, 75, 78, 79, 81, 88, 90, 95, 96, 101, 104], "unit": [28, 32, 34, 92, 95, 96, 103], "n": [28, 34, 58, 75, 88, 117], "d": [28, 32, 34, 71, 113], "shape": [28, 32, 33, 34], "same": [28, 33, 34, 51, 58, 71, 84, 90], "each": [28, 32, 33, 34, 51, 53, 54, 58, 64, 71, 78, 81, 84, 88, 98, 118], "call": [28, 30, 32, 34, 75], "run": [28, 32, 33, 34], "num_proj": [28, 34], "activ": [28, 34, 95, 96, 103], "input_s": [28, 32, 33, 34], "project": [28, 34], "directli": 28, "softmax": [28, 101], "construct": [29, 34, 67], "fuse": 29, "fusedrnncel": [29, 32], "abstract": [29, 32, 103, 106], "A": [29, 32, 33, 34, 69, 79, 81, 84, 87, 88, 89, 90, 98, 101, 103, 113], "entir": [29, 32, 66, 68], "expand": 29, "dimens": [29, 32, 34], "effect": 29, "recurr": [29, 32, 33, 34, 84, 87], "network": [29, 32, 33, 34, 88], "unlik": [29, 32], "which": [29, 33, 34, 53, 54, 58, 60, 66, 67, 68, 69, 71, 78, 79, 84, 88, 90, 91, 92, 95, 96, 98, 101, 104], "subclass": [29, 30, 32, 34, 73, 77, 104], "rnncell": [29, 33, 34], "onc": [29, 96], "insid": 29, "usual": [29, 98], "lead": 29, "much": [29, 32, 81], "complex": 29, "less": [29, 33, 71], "must": [29, 32, 33, 34, 53, 54, 62, 76], "__call__": 29, "signatur": 29, "fusedrnncelladaptor": 29, "use_dynamic_rnn": 29, "fals": [29, 32, 33, 34, 51, 53, 54, 56, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 89, 91, 92, 95, 96, 97, 98, 101, 102, 107, 113, 118], "adaptor": 29, "timereversedfusedrnn": 29, "revers": 29, "compat": [29, 32, 66, 67, 68, 88, 110], "v1": 29, "nn": [29, 60, 89], "basicrnncel": 29, "fw_lstm": 29, "contrib": [29, 31, 88], "bw_lstm": 29, "fw_out": 29, "fw_state": 29, "bw_out": 29, "bw_state": 29, "gru": [30, 34], "op": [30, 31, 32], "grublockcel": 30, "num_unit": [30, 32, 34], "cell_siz": 30, "gru_cel": 30, "deprec": 30, "grublockcellv2": 30, "arxiv": [30, 32, 33, 34], "org": [30, 32, 33, 34, 75], "ab": [30, 32, 33, 34], "1406": [30, 34], "1078": [30, 34], "comput": [30, 33, 34, 58, 78], "forward": [30, 33], "propag": [30, 34], "step": [30, 32, 34, 56], "kernel": 30, "mathemat": 30, "equat": [30, 34], "bias": [30, 32, 34], "b_ru": 30, "constant_initi": 30, "b_c": 30, "x_h_prev": 30, "h_prev": 30, "r_bar": 30, "u_bar": 30, "w_ru": 30, "r": [30, 34], "sigmoid": [30, 103], "h_prevr": 30, "circ": [30, 34], "x_h_prevr": 30, "c_bar": 30, "w_c": [30, 34], "c": [30, 34, 71], "h": [30, 34], "input_shap": [30, 32, 34], "variabl": [30, 32, 34], "layer": [30, 32, 33, 34, 53, 66, 67, 68, 81, 103], "option": [30, 32, 33, 34, 51, 53, 58, 61, 66, 67, 68, 69, 71, 78, 79, 84, 88, 90, 98, 104, 113], "overrid": [30, 32, 34, 88, 101], "thei": [30, 32, 34, 58, 88, 104, 113], "creation": [30, 32, 34], "between": [30, 32, 33, 34, 51, 53, 71, 78, 79, 88, 89, 96, 97, 98, 113], "instanti": [30, 32, 34, 75, 88], "typic": [30, 32, 33, 34], "argument": [30, 32, 34], "instanc": [30, 32, 33, 34, 78, 95, 96], "expect": [30, 32, 34, 91], "one": [30, 32, 33, 34, 51, 52, 53, 66, 68, 78, 79, 81, 84, 90, 92, 106, 113], "per": [30, 32, 33, 34, 53, 54, 59, 66, 68, 75, 81, 88], "temporari": 30, "impl": 30, "scheme": [30, 87, 115], "distribut": [31, 105], "github": [31, 34], "blob": 31, "r1": 31, "15": [31, 84, 87, 91], "origin": [31, 34, 64, 71, 90, 101], "modifi": [31, 84, 87, 90], "chang": [31, 34, 84], "just": [31, 88], "therefor": [31, 34], "enabl": [31, 34, 53, 56, 60, 88], "lstm": [32, 34, 88], "lstmblockcel": 32, "forget_bia": [32, 34], "cell_clip": [32, 34], "use_peephol": [32, 34], "lstm_cell": 32, "1409": 32, "2329": 32, "we": [32, 34, 59, 60, 61, 62, 64, 71, 75, 81, 101], "add": [32, 34, 91, 113], "default": [32, 33, 34, 51, 52, 53, 56, 58, 59, 60, 61, 64, 66, 67, 68, 71, 75, 76, 78, 79, 84, 88, 90, 92, 95, 97, 98, 101, 102, 103, 113, 118], "forget": [32, 34], "gate": [32, 34], "order": [32, 34, 58], "reduc": [32, 34], "scale": [32, 34, 81], "begin": [32, 33, 34, 76, 84, 87, 91, 95, 97, 101], "rnn_cell_impl": [32, 34], "lstmcell": [32, 34], "monolith": 32, "should": [32, 34, 51, 53, 58, 69, 73, 75, 77, 78, 88, 104], "faster": [32, 66, 67, 68], "bia": [32, 34], "matric": [32, 34], "long": [32, 34], "match": [32, 33, 53, 54, 66, 67, 68, 69, 71, 75, 76, 84, 89], "inputs_shap": [32, 34], "short": [32, 34], "term": [32, 34, 53, 60, 64, 71, 113], "lstmblockwrapp": 32, "trainabl": [32, 34], "kwarg": [32, 34], "helper": [32, 33, 113, 116], "housekeep": 32, "altern": 32, "similar": [32, 34, 71], "_call_cel": 32, "number": [32, 33, 34, 51, 53, 54, 58, 64, 71, 81, 88, 96, 101, 103, 113, 117], "initial_st": 32, "sequence_length": [32, 33], "time_len": 32, "initial_cell_st": 32, "initial_output": 32, "self": [32, 34, 104], "_num_unit": 32, "ha": [32, 33, 34, 53, 56, 58, 60, 64, 69, 76, 78, 88, 95], "heterogen": 32, "specifi": [32, 34, 53, 64, 79, 81, 87, 88, 95, 98], "int32": [32, 33], "int64": [32, 33], "vector": [32, 33, 34, 58, 64, 81, 104], "element": [32, 33], "pair": [32, 34, 51, 56, 60, 84, 87, 90, 95, 96, 97, 98], "final": [32, 33], "cell_stat": 32, "rais": [32, 33, 34, 88], "valueerror": [32, 33, 34], "mismatch": 32, "lstmblockfusedcel": 32, "lstm_fused_cel": 32, "extrem": 32, "singl": [32, 33, 34, 58, 61, 88, 104, 118], "both": [32, 33, 34, 67, 69, 71, 78, 113], "than": [32, 60, 71], "abov": 32, "consist": [32, 34, 58, 71, 98], "stack_bidirectional_rnn": 33, "cells_fw": 33, "cells_bw": 33, "initial_states_fw": 33, "initial_states_bw": 33, "bidirect": [33, 34], "neural": [33, 34, 88], "stack": [33, 34], "combin": [33, 34, 78, 97], "backward": 33, "next": [33, 91], "bidirectional_rnn": 33, "doe": [33, 34], "share": [33, 34], "direct": [33, 34, 51, 95, 96, 97], "intermedi": 33, "As": [33, 34], "describ": [33, 34, 58], "1303": 33, "5778": 33, "appropri": [33, 51], "cell_fw": 33, "correspond": [33, 58, 71, 75, 78], "either": [33, 54, 58, 76, 87], "actual": 33, "variablescop": 33, "subgraph": 33, "output_state_fw": 33, "output_state_bw": 33, "depth": [33, 34], "output_states_fw": 33, "output_states_bw": 33, "typeerror": 33, "cell_bw": 33, "empti": [33, 76, 79, 81, 101], "stack_bidirectional_dynamic_rnn": 33, "parallel_iter": 33, "time_major": 33, "swap_memori": 33, "dynam": [33, 34], "max_tim": 33, "32": [33, 34, 69, 102], "iter": [33, 54, 64], "parallel": 33, "those": 33, "ani": [33, 52, 84, 88, 102], "tempor": 33, "trade": 33, "off": [33, 53, 88], "space": [33, 34], "take": [33, 66, 68, 71, 78, 81, 104], "while": [33, 101], "smaller": 33, "longer": [33, 84], "bit": [33, 66, 68], "becaus": [33, 73, 77], "avoid": [33, 34], "transpos": 33, "calcul": [33, 34, 53, 88, 101], "howev": [33, 60], "most": [33, 58, 88], "major": 33, "so": [33, 34], "accept": 33, "emit": 33, "form": [33, 64, 75], "transpar": 33, "swap": 33, "infer": [33, 34, 88, 98], "back": 33, "prop": 33, "gpu": 33, "cpu": 33, "would": 33, "fit": [33, 52, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 81, 84, 88, 89, 91, 92, 95, 96, 97, 101, 103, 104], "veri": [33, 71], "minim": [33, 95, 96, 98], "perform": [33, 34, 88], "penalti": 33, "layers_output": 33, "coupledinputforgetgatelstmcel": 34, "proj_clip": 34, "num_unit_shard": 34, "num_proj_shard": 34, "state_is_tupl": 34, "math_op": 34, "layer_norm": 34, "norm_gain": 34, "norm_shift": 34, "peephol": 34, "pdf": 34, "semanticscholar": 34, "1154": 34, "0131eae85b2e11d53df7f1360eeb6476e7f4": 34, "felix": 34, "ger": 34, "jurgen": 34, "schmidhub": 34, "fred": 34, "cummin": 34, "learn": [34, 53, 81, 88], "continu": [34, 101], "iet": 34, "850": 34, "855": 34, "1999": 34, "research": 34, "googl": 34, "pub": 34, "archiv": 34, "43905": 34, "hasim": 34, "sak": 34, "andrew": 34, "senior": 34, "francois": 34, "beaufai": 34, "architectur": [34, 88], "larg": [34, 66, 67, 68, 88], "acoust": 34, "interspeech": 34, "2014": 34, "coupl": 34, "1503": 34, "04069": 34, "greff": 34, "et": 34, "al": 34, "search": [34, 53, 75, 88, 101], "odyssei": 34, "peep": 34, "hole": 34, "connect": 34, "1607": 34, "06450": 34, "jimmi": 34, "lei": 34, "ba": 34, "jami": 34, "ryan": 34, "kiro": 34, "geoffrei": 34, "hinton": 34, "appli": [34, 71, 92], "intern": 34, "nonlinear": 34, "2d": 34, "column": [34, 52, 53, 54, 59, 61, 64, 69, 71, 76, 81, 84, 87, 88, 92, 95, 101, 103, 104, 113], "c_state": 34, "m_state": 34, "after": [34, 54, 64, 66, 67, 68, 91], "read": [34, 69, 71, 78, 84, 88, 90, 104], "when": [34, 53, 59, 69, 71, 84, 88, 89, 101], "previou": 34, "wa": [34, 51, 53, 59, 60], "here": 34, "otherwis": [34, 58, 61, 66, 67, 68, 71, 76, 78, 79, 98, 104], "cannot": 34, "via": [34, 56, 60], "timefreqlstmcel": 34, "feature_s": 34, "frequency_skip": 34, "tara": 34, "sainath": 34, "bo": 34, "li": 34, "pattern": [34, 51, 71, 89, 92, 118], "v": [34, 53, 84, 88], "convolut": 34, "lvcsr": 34, "task": [34, 51, 66, 67, 68, 98, 118], "submit": 34, "2016": 34, "clip": 34, "gridlstmcel": 34, "share_time_frequency_weight": 34, "num_frequency_block": 34, "start_freqindex_list": 34, "end_freqindex_list": 34, "couple_input_forget_g": 34, "grid": 34, "nal": 34, "kalchbrenn": 34, "ivo": 34, "danihelka": 34, "alex": 34, "grave": 34, "proc": 34, "iclr": 34, "1507": 34, "01526": 34, "shared_weight": 34, "flag": [34, 81], "_state_is_tupl": 34, "bidirectionalgridlstmcel": 34, "backward_slice_offset": 34, "gridlstm": 34, "henc": 34, "doesn": 34, "affect": [34, 58], "real": [34, 88], "process": [34, 53, 56, 60, 66, 67, 68, 76, 81, 84, 88, 90, 95, 96, 97, 101], "onlin": 34, "system": [34, 113], "current": [34, 66, 67, 68, 91, 98, 103], "two": [34, 58, 71, 84], "attentioncellwrapp": 34, "attn_length": 34, "attn_siz": 34, "attn_vec_s": 34, "attent": 34, "1601": 34, "06733": 34, "lstma": 34, "highwaywrapp": 34, "couple_carry_transform_g": 34, "carry_bias_init": 34, "highwai": 34, "k": [34, 64, 101], "srivastava": 34, "j": 34, "preprint": 34, "1505": 34, "00387": 34, "2015": 34, "layernormbasiclstmcel": 34, "dropout_keep_prob": 34, "dropout_prob_se": 34, "dropout": [34, 53, 81, 88], "1603": 34, "05118": 34, "without": [34, 71], "loss": 34, "stanislau": 34, "semeniuta": 34, "aliaksei": 34, "severyn": 34, "erhardt": 34, "barth": 34, "nascel": 34, "use_bia": 34, "na": 34, "paper": 34, "1611": 34, "01578": 34, "barret": 34, "zoph": 34, "quoc": 34, "le": 34, "reinforc": 34, "2017": 34, "ugrnncel": 34, "updat": [34, 116], "ugrnn": 34, "compromis": 34, "vanilla": 34, "There": 34, "determin": [34, 58, 95, 97, 98], "whether": [34, 53, 58, 59, 61, 62, 64, 66, 67, 68, 69, 71, 75, 76, 84, 88, 90, 92, 95, 97, 98, 101], "integr": 34, "instantan": 34, "idea": 34, "feedforward": 34, "09913": 34, "jasmin": 34, "collin": 34, "jascha": 34, "sohl": 34, "dickstein": 34, "david": 34, "sussillo": 34, "capac": 34, "num": 34, "new_output": 34, "ident": 34, "new_stat": 34, "intersectionrnncel": 34, "num_in_proj": 34, "y_activ": 34, "nn_op": 34, "intersect": 34, "well": 34, "design": 34, "improv": [34, 88, 98], "flow": 34, "through": [34, 69], "dimension": 34, "y": 34, "To": [34, 56, 60, 66, 67, 68, 95], "achiev": [34, 58, 88], "subsequ": 34, "deepli": 34, "best": [34, 88], "new_i": 34, "equal": [34, 78, 79], "compiledwrapp": 34, "compile_st": 34, "wrap": [34, 73, 77, 104], "execut": [34, 71], "xla": 34, "jit": 34, "phasedlstmcel": 34, "leak": 34, "ratio_on": 34, "trainable_ratio_on": 34, "period_init_min": 34, "period_init_max": 34, "1000": [34, 101], "phase": 34, "1610": 34, "09513v1": 34, "float32": 34, "float64": 34, "store": 34, "second": [34, 57], "features_s": 34, "lstmstatetupl": 34, "timestep": 34, "convlstmcel": 34, "conv_ndim": 34, "output_channel": 34, "kernel_shap": 34, "skip_connect": 34, "conv_lstm_cel": 34, "1506": 34, "04214v1": 34, "logic": 34, "live": [34, 113], "addit": [34, 54, 71, 88, 101], "keyword": [34, 52, 59, 102], "conv1dlstmcel": 34, "conv_1d_lstm_cel": 34, "1d": 34, "conv2dlstmcel": 34, "conv_2d_lstm_cel": 34, "conv3dlstmcel": 34, "conv_3d_lstm_cel": 34, "3d": 34, "glstmcell": 34, "number_of_group": 34, "group": [34, 59, 89], "g": [34, 53, 54, 58, 66, 67, 68, 79, 88, 92, 95, 101], "1703": 34, "10722": 34, "kuchaiev": 34, "b": [34, 53, 66, 67, 68, 84, 87, 88, 89, 90, 95], "ginsburg": 34, "trick": 34, "brief": 34, "sub": 34, "evenli": 34, "fed": 34, "dim": 34, "num_input": 34, "known": [34, 89], "divis": 34, "innermost": 34, "incompat": 34, "layernormlstmcel": 34, "srucel": 34, "sru": 34, "fast": 34, "cnn": [34, 88], "cf": 34, "1709": 34, "02755": 34, "variat": 34, "character": 34, "simplifi": 34, "hidden": [34, 67, 103], "consecut": 34, "tradition": 34, "multipli": 34, "matrix": 34, "w_hh": 34, "being": [34, 71, 88, 102], "ensu": 34, "flavor": 34, "replac": [34, 69, 71, 84, 90], "multipl": [34, 52, 79, 98], "h_": 34, "pointwis": 34, "result": [34, 53, 56, 58, 59, 60, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 84, 87, 88, 89, 91, 92, 95, 96, 97, 98, 104], "gain": 34, "boolean": [34, 58, 59, 71, 95, 97, 103], "exist": [34, 101], "alreadi": [34, 64, 88, 101], "error": 34, "mistak": 34, "weightnormlstmcel": 34, "norm": 34, "adapt": 34, "1602": 34, "07868": 34, "tim": 34, "saliman": 34, "diederik": 34, "p": [34, 53, 61, 88, 90, 92], "kingma": 34, "reparameter": 34, "acceler": 34, "deep": [34, 53], "indrnncel": 34, "independ": 34, "indrnn": 34, "1803": 34, "04831": 34, "mean": [34, 69, 78, 79, 88, 91], "act": 34, "w": 34, "indygrucel": 34, "kernel_initi": 34, "bias_initi": 34, "grucel": 34, "u_r": 34, "u_z": 34, "5": [34, 60, 69, 71, 75, 78, 84, 87, 88, 92, 96], "respect": 34, "diagon": 34, "hadamard": 34, "product": 34, "r_j": 34, "sigmaleft": 34, "mathbf": 34, "w_rmathbf": 34, "_j": 34, "u_rcirc": 34, "_jright": 34, "z_j": 34, "w_zmathbf": 34, "u_zcirc": 34, "tild": 34, "phileft": 34, "denot": 34, "indygru": 34, "node": 34, "see": [34, 56, 66, 67, 68, 76, 88, 91, 95, 96], "its": [34, 79], "own": [34, 88, 113], "oppos": 34, "nunit": 34, "indylstmcel": 34, "indylstm": 34, "basiclstmcel": 34, "u_f": 34, "u_i": 34, "u_o": 34, "u_c": 34, "regular": [34, 51, 54, 56, 60, 71, 103, 118], "f_t": 34, "sigma_gleft": 34, "w_f": 34, "x_t": 34, "b_fright": 34, "i_t": 34, "w_i": 34, "b_iright": 34, "o_t": 34, "w_o": 34, "b_oright": 34, "c_t": 34, "c_": 34, "sigma_cleft": 34, "b_cright": 34, "baselin": 34, "detail": 34, "analysi": 34, "1903": 34, "08023": 34, "ntmcell": 34, "control": [34, 51, 53, 56], "memory_s": 34, "memory_vector_dim": 34, "read_head_num": 34, "write_head_num": 34, "shift_rang": 34, "clip_valu": 34, "20": [34, 81], "ture": 34, "machin": 34, "1807": 34, "08518": 34, "mark": [34, 53, 54, 58], "collier": 34, "joeran": 34, "beel": 34, "turn": 34, "snowkylin": 34, "ntm": 34, "cours": 34, "1410": 34, "5401": 34, "wayn": 34, "prev_stat": 34, "minimalrnncel": 34, "glorot_uniform": 34, "ones": [34, 88], "minimalrnn": 34, "1806": 34, "05394v2": 34, "minmin": 34, "chen": 34, "jeffrei": 34, "pennington": 34, "samuel": 34, "schoenholz": 34, "isometri": 34, "field": [34, 57, 59, 69, 84, 91, 102, 104], "theori": 34, "signal": 34, "icml": 34, "2018": [34, 91], "sum": 34, "cfncell": 34, "chao": 34, "openreview": 34, "net": [34, 54], "s1dizvclg": 34, "thoma": 34, "laurent": 34, "jame": 34, "von": 34, "brecht": 34, "cfn": 34, "goe": 34, "contract": 34, "map": [34, 61, 69, 71, 79, 88, 90, 95, 96, 101, 113], "linear": [34, 66, 67, 68, 103], "decoupl": 34, "tf_graph_1x": 43, "manipul": 51, "json": [51, 61, 69, 115, 118], "export": [51, 115, 118], "layout": 51, "get_assertion_data": 51, "input_json_path": [51, 118], "assertion_label": [51, 115, 118], "relevant_ner_label": 51, "ground_truth": [51, 118], "bool": [51, 53, 61, 66, 68, 69, 71, 75, 76, 81, 84, 88, 90, 92, 97, 101, 113, 118], "unannotated_label": 51, "regex_pattern": [51, 118], "unannotated_label_strategi": 51, "unannotated_label_strategy_dict": 51, "excluded_task_id": [51, 118], "excluded_task_titl": [51, 118], "panda": 51, "relev": [51, 58], "assign": 51, "select": [51, 53, 56, 58, 59, 61, 62, 66, 67, 68, 71, 84, 91, 95, 96, 101, 113, 118], "ground": [51, 118], "truth": [51, 118], "complet": [51, 118], "latest": [51, 118], "regex": [51, 52, 56, 57, 59, 60, 69, 71, 89, 92, 102, 118], "strategi": 51, "occurr": 51, "unannot": 51, "sampl": [51, 117], "fraction": 51, "absolut": 51, "dictionari": [51, 54, 59, 61, 69, 71, 79, 84, 90, 95, 96, 98, 102], "entity_label": [51, 71], "sample_weight_or_count": 51, "max": [51, 53, 54, 66, 67, 68], "exclud": [51, 54, 88, 118], "rtype": [51, 118], "get_relation_extraction_data": 51, "negative_rel": 51, "relation_pair": 51, "negative_relation_strategi": 51, "negative_relation_strategy_dict": 51, "were": [51, 88, 118], "plausibl": 51, "separ": [51, 56, 58, 60, 71, 95, 97], "possibl": [51, 52, 53, 56, 59, 60, 69, 81, 84, 102, 103], "neg": [51, 53], "entity1": [51, 95, 96], "entity2": [51, 95, 96], "get_conll_data": 51, "output_nam": 51, "save_dir": 51, "exported_conl": 51, "excluded_label": [51, 115, 118], "io": 51, "conll": [51, 88, 118], "directori": 51, "irrelev": [51, 118], "annotationmerg": 52, "classnam": [52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102], "java_model": [52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102], "merg": [52, 64, 87, 90, 100], "inputtyp": [52, 59, 102], "wordpiec": [52, 59, 102], "word_embed": [52, 53, 54, 59, 75, 88, 95, 102], "sentence_embed": [52, 59, 75, 78, 79, 101, 102], "categori": [52, 59, 64, 66, 68, 81, 95, 96, 98, 102], "sentiment": [52, 59, 102], "po": [52, 59, 60, 88, 95, 102, 115, 118], "named_ent": [52, 59, 67, 87, 88, 89, 90, 102], "labeled_depend": [52, 59, 61, 102], "languag": [52, 58, 59, 61, 66, 67, 68, 71, 76, 78, 79, 98, 102], "doc": [52, 101], "test_data": [52, 57, 102], "createdatafram": [52, 53, 57, 58, 60, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 90, 91, 92, 95, 96, 102], "todf": [52, 53, 57, 58, 60, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 90, 91, 92, 95, 96, 97, 102], "document1": 52, "documentassembl": [52, 53, 54, 56, 57, 58, 59, 60, 66, 67, 68, 69, 71, 75, 76, 78, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102], "document2": 52, "setinputtyp": [52, 102], "all_doc": 52, "setstag": [52, 58, 59, 64, 66, 67, 68, 76, 78, 81, 88, 102, 104], "lp": 52, "lightpipelin": [52, 118], "fullannot": 52, "replic": 52, "23": [52, 57], "filter": [52, 56, 59, 60, 62, 90, 97, 102], "algorithm": [53, 54, 64], "assertionlogregmodel": [53, 54], "obtain": [53, 54, 98], "present": [53, 56, 84, 87, 90, 101], "absent": [53, 56, 115], "hypothet": [53, 56], "condit": 53, "associated_with_other_person": 53, "etc": [53, 101], "startcol": [53, 54, 76], "endcol": [53, 54], "olumn": 53, "batchsiz": [53, 66, 67, 68, 81, 88, 96], "optim": [53, 81, 88], "epoch": [53, 81, 88], "learningr": [53, 81], "rate": [53, 81, 88], "maxsentlen": 53, "graphfold": [53, 88], "folder": [53, 66, 67, 68, 81, 88, 98, 103, 116], "extern": [53, 84, 88, 90, 103], "graphfil": 53, "configprotobyt": [53, 66, 67, 68, 88], "configproto": [53, 66, 67, 68, 88], "serial": [53, 66, 67, 68, 88], "byte": [53, 66, 67, 68, 88], "arrai": [53, 64, 66, 67, 68, 71, 76, 88, 89, 104], "config_proto": 53, "serializetostr": 53, "validationsplit": [53, 81, 88], "choos": [53, 88], "proport": [53, 88], "dataset": [53, 54, 88, 89, 98, 101, 106], "against": [53, 58, 88], "evaluationlogextend": [53, 88], "mode": [53, 71, 81, 107, 113], "eval": 53, "testdataset": [53, 88], "statist": [53, 88], "dure": [53, 75, 88, 113], "includeconfid": [53, 88], "confid": [53, 56, 60, 61, 88, 90, 98, 101], "score": [53, 88, 98], "metadata": [53, 57, 58, 59, 69, 75, 84, 87, 88, 91, 95, 96, 97, 102], "enableoutputlog": [53, 88], "outputlogspath": [53, 81, 88], "verbos": [53, 88], "level": [53, 56, 58, 69, 88], "scopewindow": 53, "window": [53, 88], "express": [53, 56, 60, 71], "ml": [53, 54, 56, 60, 64, 66, 67, 68, 69, 71, 76, 78, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 101], "document_assembl": [53, 54, 57, 64, 89, 91], "sentence_detector": [53, 54, 57, 89], "sentencedetector": [53, 54, 56, 57, 58, 59, 60, 69, 71, 75, 78, 84, 87, 88, 89, 90, 97, 101, 102], "wordembeddingsmodel": [53, 54, 58, 71, 75, 78, 84, 87, 88, 89, 90, 95, 96, 97], "pretrain": [53, 54, 58, 60, 61, 66, 67, 68, 71, 75, 78, 79, 81, 84, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 116], "embeddings_clin": [53, 54, 58, 71, 84, 87, 89, 90, 95, 96, 97], "en": [53, 54, 58, 61, 66, 67, 68, 71, 75, 78, 79, 84, 87, 89, 90, 95, 96, 97, 98, 101], "setcasesensit": [53, 54, 64, 66, 67, 68, 69, 89, 101, 102], "chunker": [53, 54, 89], "setchunkcol": [53, 54, 76, 89], "012": 53, "015": 53, "setscopewindow": 53, "assertionpipelin": [53, 54, 56, 101], "assertionmodel": [53, 54, 56, 101], "srt": [53, 103], "setgraphfil": [53, 88, 103], "happen": [53, 88], "setconfigprotobyt": [53, 66, 67, 68, 88], "row": [53, 59], "lamda": [53, 81], "evalu": [53, 88], "settestdataset": [53, 88], "read_a": [53, 69, 71, 84, 88, 90], "reada": [53, 69, 71, 84, 88, 90], "waht": 53, "left": [53, 95, 96, 97], "right": [53, 58, 78, 95, 96, 97], "offset": 53, "assertiondlmodel": [53, 56], "dl": 53, "approach": [53, 61], "targetnerlabel": [53, 54], "tag": [53, 56, 60, 71, 87, 88, 89, 90], "fever": [53, 56], "sore": [53, 56], "throat": [53, 56], "stomach": [53, 56, 60], "pain": [53, 56, 60], "she": 53, "maintain": 53, "epidur": [53, 56], "pca": [53, 56], "nermodel": [53, 56, 87, 88, 90], "medicalnermodel": [53, 58, 71, 84, 87, 88, 89, 90, 95, 96, 97], "ner_clin": 53, "nerconvert": [53, 56, 58, 71, 75, 78, 84, 87, 90, 95, 96, 97], "ner_chunk": [53, 56, 58, 71, 75, 78, 87, 90, 91, 95, 96, 97, 115], "clinicalassert": [53, 56], "selectexpr": [53, 56, 58, 60, 69, 75, 76, 78, 84, 87, 91, 92, 95, 96, 97], "assertionlogregapproach": 54, "regress": [54, 64, 66, 68], "done": [54, 88], "maxit": [54, 64], "regparam": 54, "enetparam": 54, "elast": 54, "beforeparam": 54, "context": [54, 58, 78], "afterparam": 54, "externalfeatur": 54, "nercol": 54, "Then": [54, 75, 88], "setreg": 54, "01": [54, 71, 91], "setbefor": 54, "setaft": 54, "13": [54, 71, 92], "logreg": [54, 64], "assertionlogreg": 54, "famili": [54, 101], "logarithm": [54, 64], "assertionpretrain": 54, "assertionfilter": 56, "come": [56, 58, 60, 84, 101], "white": [56, 60], "criteria": [56, 60, 84], "isin": [56, 60], "whitelist": [56, 60, 90], "rest": [56, 60, 84, 90], "ignor": [56, 60, 66, 67, 68, 71, 84, 90], "what": [56, 60, 62, 84, 95, 101, 105], "entitiesconfid": [56, 60], "remov": [56, 58, 92], "setcriteria": [56, 60], "setwhitelist": [56, 60, 75, 90], "setregex": [56, 60], "llist": [56, 60], "dash": [56, 60, 95, 97], "chunkconvert": 57, "convert": [57, 76, 90, 92, 102], "regexmatch": [57, 59, 69, 102], "my": 57, "rule": [57, 69], "ceremoni": 57, "regex_match": 57, "setexternalrul": [57, 59, 102], "src": [57, 59, 88, 102, 115], "resourc": [57, 58, 59, 61, 66, 67, 68, 78, 79, 84, 88, 90, 98, 102, 104, 115], "matcher": [57, 102], "txt": [57, 59, 71, 102, 115], "delimit": [57, 84], "outdf": 57, "col": [57, 60, 69, 75, 101], "31": 57, "71": 57, "80": 57, "chunkkeyphraseextract": 58, "keyphras": 58, "kei": [58, 59, 61, 98, 102, 113], "phrase": [58, 89], "compar": 58, "broader": 58, "belong": 58, "candid": [58, 75], "variou": 58, "wai": 58, "ngramgener": 58, "textmatch": 58, "latter": 58, "topn": [58, 75], "selectmostdiffer": 58, "find": [58, 69, 78], "them": [58, 66, 67, 68, 78, 79, 81, 96, 97], "other": [58, 79, 84, 113], "diverg": 58, "maxim": [58, 79, 95], "margin": 58, "mmr": 58, "conjunct": 58, "aim": 58, "goal": 58, "documentlevelprocess": 58, "particular": [58, 98, 101], "concatenatesent": 58, "ner_tagg": 58, "ner_jsl_slim": 58, "ner_tag": [58, 95, 96, 97], "ner_convert": [58, 75], "key_phrase_extractor": 58, "settopn": 58, "setdocumentlevelprocess": 58, "setdiverg": 58, "ner_chunk_key_phras": 58, "her": [58, 78], "becom": [58, 78], "year": [58, 71, 78, 84, 87, 90, 91], "he": [58, 78], "complain": [58, 78], "swell": [58, 78], "hi": [58, 78], "forearm": [58, 78], "explod": [58, 60, 69, 75, 78, 84, 87, 92, 95, 96, 97], "AS": [58, 78], "key_phras": 58, "documentsimilar": 58, "mmrscore": 58, "gestat": 58, "mellitu": 58, "28": 58, "old": [58, 71, 84, 87, 88, 90, 95, 96], "7391447825527298": 58, "4366776288430703": 58, "7323921930094919": 58, "44348688715422274": 58, "13577881610104517": 58, "085800103824974": 58, "interv": 58, "setselectmostdiffer": 58, "constraint": 58, "paramt": 58, "sens": 58, "setconcatenatesent": 58, "averag": [58, 66, 68, 78, 79], "setdroppunctu": 58, "punctuat": 58, "sbert_jsl_medium_uncas": 58, "lang": [58, 61, 66, 67, 68, 78, 79, 98], "remote_loc": [58, 61, 66, 67, 68, 78, 79, 98], "download": [58, 61, 66, 67, 68, 78, 79, 98, 117], "load": [58, 61, 66, 67, 68, 69, 71, 78, 79, 81, 88, 98], "sent_small_bert_l2_768": [58, 78, 79], "remot": [58, 61, 66, 67, 68, 78, 79, 98], "Will": [58, 61, 66, 67, 68, 78, 79, 98], "repositori": [58, 61, 66, 67, 68, 78, 79, 98], "bertsentenceembed": [58, 78, 79, 101, 102], "restor": [58, 61, 66, 67, 68, 78, 79, 88, 98], "chunksentencesplitt": 59, "documento": 59, "header": [59, 104], "title_regex": 59, "paragraph": 59, "setgroupbysent": 59, "groupbysent": 59, "assum": [59, 79], "detector": [59, 118], "setinsertchunk": 59, "insert": 59, "setdefaultent": 59, "chunkfiltererapproach": 60, "confidencethreshold": 60, "lower": [60, 61, 76, 88, 92], "threshold": [60, 71, 75, 90, 95, 96, 101], "past": 60, "histori": 60, "gastroenter": 60, "docassembl": 60, "postagg": [60, 95, 96], "perceptronmodel": [60, 95, 96, 97], "setregexpars": [60, 89], "chunkerfilt": 60, "17": [60, 84, 87], "22": [60, 61], "36": 60, "42": 60, "53": 60, "81": [60, 97], "110": [60, 84, 87], "now": 60, "care": 60, "118": 60, "132": 60, "setblacklist": [60, 71, 84, 90], "setfilterent": 60, "chunkfilter": 60, "chunkmapperapproach": 61, "mapper": 61, "jsondictionari": 61, "chunkmappermodel": 61, "label_depend": [61, 62, 100], "mappinmg": 61, "go": 61, "lowercas": [61, 76, 92], "decid": 61, "35": [61, 97], "analges": 61, "action": 61, "56995": 61, "all_rel": 61, "antipyret": 61, "warfarina": 61, "lusa": 61, "41": [61, 97], "amlodipin": 61, "9989": 61, "55": 61, "56": 61, "mg": [61, 79], "9123": 61, "setdictionari": [61, 69], "bow": [61, 75], "word": [61, 71, 75, 87], "setlowercas": [61, 76, 92], "lc": 61, "setallowmultitokenchunk": 61, "mc": 61, "skyp": 61, "multitoken": 61, "send": 61, "multi": [61, 66, 67, 68], "setmultivaluesrel": 61, "chunkmapperfilter": 62, "kind": 62, "setreturncriteria": 62, "fail": [62, 76, 104], "success": 62, "documentlogregclassifierapproach": 64, "classifi": [64, 81, 96], "genericclassifiermodel": [64, 81], "labelcol": [64, 101], "maximum": [64, 88, 96, 97, 103], "tol": 64, "converg": 64, "toler": 64, "fitintercept": 64, "intercept": 64, "vectorizationmodelpath": 64, "been": 64, "classificationmodelpath": 64, "could": [64, 69, 75], "like": [64, 69, 71], "stopwords_clean": 64, "stopwordsclean": 64, "cleantoken": 64, "stemmer": 64, "stem": [64, 95, 96, 97], "clf_model": [64, 81], "setmaxit": 64, "settol": 64, "dist": [64, 101], "setfitintercept": 64, "setvectorizationmodelpath": 64, "setclassificationmodelpath": 64, "setlabel": 64, "documentlogregclassifiermodel": 64, "mergechunk": 64, "vectorizationmodel": 64, "classificationmodel": 64, "setmergechunk": 64, "setvectorizationmodel": 64, "pipelinemodel": [64, 88], "setclassificationmodel": 64, "medicalbertforsequenceclassif": [66, 68, 98], "medicalbertfortokenclassifi": [66, 67, 68], "head": [66, 67, 68, 88], "pool": [66, 68], "companion": [66, 67, 68, 88, 107, 115], "huggingfac": [66, 67, 68], "casesensit": [66, 67, 68, 69], "maxsentencelength": [66, 67, 68], "tokenclassifi": [66, 67], "felt": [66, 68], "drowsi": [66, 68], "had": [66, 68, 75], "blur": [66, 68], "vision": [66, 68], "aspirin": [66, 68, 92], "setmaxsentencelength": [66, 67, 68, 102], "getclass": [66, 67, 68, 95, 96], "setcoalescesent": [66, 68], "inputcol": [66, 68, 106], "probabl": [66, 68], "due": [66, 68], "limit": [66, 68, 75], "almost": [66, 68], "512": [66, 68], "help": [66, 68, 71, 113], "loadsavedmodel": [66, 67, 68, 98], "spark_sess": [66, 67, 68, 98], "loadsavedmodelopensourc": [66, 67, 68], "bertfortokenclassifierpath": [66, 67, 68], "tfmodelpath": [66, 67, 68], "bertfortokenclassifi": [66, 67, 68], "taht": [66, 67, 68], "bert_sequence_classifier_ad": 66, "bert_token_classifier_ner_bionlp": 67, "erba": 67, "ir": 67, "myb": 67, "viru": 67, "erythroid": 67, "infect": 67, "bone": 67, "marrow": 67, "blastoderm": 67, "cultur": 67, "tissue_structur": 67, "bert_base_token_classifier_conll03": 67, "medicaldistilbertforsequenceclassif": 68, "distilbert": 68, "sequenceclassifi": 68, "coalescesent": 68, "distilbertforsequenceclassif": 68, "destilbertfortokenclassifierpath": 68, "distilbert_sequence_classifier_ad": 68, "contextualparserapproach": 69, "setjsonpath": 69, "along": 69, "addition": [69, 88], "unifi": 69, "represent": [69, 78, 90], "jsonpath": 69, "prefixandsuffixmatch": 69, "prefix": [69, 75, 90], "suffix": 69, "hit": 69, "tsv": 69, "parser": 69, "liver": 69, "metastas": 69, "pt1bn0m0": 69, "t5": 69, "primari": 69, "colon": 69, "contextualpars": [69, 84], "regex_token": 69, "39": 69, "confidencevalu": 69, "00": 69, "49": 69, "148": 69, "156": 69, "ct4bcn2m1": 69, "189": 69, "194": 69, "n3m1": 69, "316": 69, "323": 69, "setprefixandsuffixmatch": 69, "locat": [69, 75, 113, 116], "setoptionalcontextrul": 69, "regardless": 69, "setshortestcontextmatch": 69, "stop": [69, 88], "found": [69, 76], "contextualparsermodel": 69, "mycontextualparsermodel": 69, "deidentificationmodel": 71, "obfusc": [71, 113], "mask": 71, "person": [71, 75, 113], "These": [71, 98], "setregexpatternsdictionari": 71, "line": [71, 118], "regexpatternsdictionari": 71, "ictionari": 71, "some": [71, 79, 88], "protect": 71, "anonim": 71, "obfuscated": 71, "dateformat": [71, 113], "visibl": 71, "obfuscatereffil": [71, 113], "reffileformat": 71, "refsep": 71, "sep": 71, "charact": [71, 75, 92], "reffil": 71, "datetag": 71, "dai": [71, 91, 113], "displac": [71, 113], "random": [71, 88, 113], "60": [71, 113], "datetoyear": 71, "minyear": 71, "minimum": [71, 88], "automat": [71, 98], "consistentobfusc": 71, "levenshtein": [71, 75], "distanc": [71, 75, 79, 95, 96, 97, 101], "sameentitythreshold": 71, "consid": [71, 75, 79, 96, 97, 101], "appear": [71, 78], "9": [71, 95], "obfuscaterefsourc": [71, 113], "doesnt": 71, "tha": 71, "obfuscatorreffil": 71, "faker": 71, "randomli": [71, 113], "regexoverrid": 71, "priorit": 71, "seed": [71, 88, 113], "With": 71, "repli": 71, "ouptut": 71, "ignoreregex": 71, "israndomdatedisplac": 71, "deidentificationparam": 71, "mappingscolumn": 71, "fake": 71, "returnentitymap": 71, "blacklist": [71, 84, 90], "ssn": 71, "passport": 71, "dln": 71, "npi": 71, "c_card": 71, "iban": 71, "dea": 71, "maskingpolici": 71, "polici": [71, 92], "same_length_char": 71, "compos": 71, "asterisk": 71, "surround": [71, 78], "squar": 71, "bracket": 71, "total": 71, "smith": 71, "char": [71, 88], "jo": 71, "fixed_length_char": 71, "fix": 71, "setuseabbrevi": 71, "clinical_sensitive_ent": 71, "ner_deid_enrich": 71, "ner_con": 71, "dei": 71, "custom": [71, 90, 95, 96, 118], "dic_regex_patterns_main_categori": 71, "setobfuscatereffil": 71, "obfuscate_fixed_ent": 71, "setreffileformat": 71, "setrefsep": 71, "setmod": 71, "setdateformat": 71, "mm": [71, 91, 104, 113], "dd": [71, 91, 104, 113], "yy": 71, "yyyi": [71, 91, 104, 113], "setobfuscated": 71, "setdatetag": 71, "setdai": 71, "setobfuscaterefsourc": 71, "7194334": 71, "93": 71, "pcp": 71, "oliveira": 71, "25": [71, 101], "record": [71, 113], "2079": 71, "09": 71, "01010101": 71, "18": 71, "dr": 71, "gregori": 71, "hous": 71, "14": 71, "setlanguag": 71, "l": 71, "english": 71, "spanish": 71, "wher": 71, "m": [71, 113], "setmaskingpolici": 71, "setfixedmasklength": 71, "f": [71, 87, 104, 106], "auxiliari": [71, 101], "resolv": [71, 100, 101], "setdatetoyear": 71, "setminyear": 71, "setconsistentobfusc": 71, "setsameentitythreshold": 71, "setregexoverrid": 71, "setignoreregex": 71, "setse": 71, "setisrandomdatedisplac": 71, "setmappingscolumn": 71, "setreturnentitymap": 71, "regexent": 71, "keep": [71, 81, 101], "regexpatterndictionari": 71, "fixedmasklength": 71, "deidentify_larg": 71, "scala": [73, 77, 104], "mix": [73, 77], "ins": [73, 77], "uid": [73, 77], "nerdisambigu": 75, "interest": 75, "compani": [75, 113], "uniqu": 75, "kb": 75, "ne": 75, "mention": 75, "surfac": 75, "embeddingtypeparam": 75, "numfirstchar": 75, "tokensearch": 75, "narrowwithapproximatematch": 75, "narrow": 75, "levenstein": 75, "levenshteindistancethresholdparam": 75, "nearmatchinggapparam": 75, "trim": 75, "len": 75, "nearmatchinggap": 75, "predictionslimit": 75, "amount": 75, "s3knowledgebasenam": 75, "s3": 75, "contest": 75, "donald": 75, "trump": 75, "who": 75, "later": 75, "defeat": 75, "christina": 75, "aguilera": 75, "sentenceembed": 75, "ner_model": 75, "nerdlmodel": [75, 78, 88], "sets3knowledgebasenam": 75, "setnumfirstchar": 75, "nlppipelin": 75, "wikipedia": 75, "curid": 75, "4848272": 75, "31698421": 75, "55907961": 75, "144171": 75, "6636454": 75, "setembeddingtyp": 75, "settokensearch": 75, "setnarrowwithapproximatematch": 75, "setlevenshteindistancethresholdparam": 75, "setnearmatchinggapparam": 75, "setpredictionlimit": 75, "nerdisambiguatormodel": 75, "doc2chunk": 76, "doc2chunkintern": 76, "chunkcol": 76, "within": 76, "stringtyp": 76, "arraytyp": 76, "setisarrai": 76, "startcolbytokenindex": 76, "prepend": 76, "whitespac": 76, "isarrai": 76, "failonmiss": 76, "job": 76, "chunk2doc": [76, 102], "chunkassembl": 76, "open": 76, "advanc": 76, "natur": [76, 98], "annotatortyp": 76, "setstartcolbytokenindex": 76, "setfailonmiss": 76, "miss": 76, "averageembed": [77, 78], "bertsentencechunkembed": 78, "account": 78, "numer": [78, 104], "chunkweight": 78, "comparison": 78, "prerequisit": [78, 88], "medicalnerdlmodel": [78, 88], "sbluebert_base_uncased_mli": 78, "sentence_chunk_embed": 78, "slice": 78, "31995273": 78, "04710883": 78, "28973156": 78, "1294758": 78, "12481072": 78, "027161136": 78, "24613449": 78, "0949309": 78, "1825444": 78, "2252143": 78, "45139068": 78, "12400375": 78, "0075617577": 78, "90806055": 78, "12871636": 78, "setchunkweight": 78, "shortcut": 78, "entitychunkembed": 79, "targetent": 79, "entityweight": 79, "maxsyntacticdist": [79, 95, 97], "syntact": [79, 95, 96, 97], "drug_embed": 79, "metformin": 79, "125": 79, "coumadin": 79, "pill": 79, "paracetamol": 79, "267413": 79, "07614058": 79, "5620966": 79, "83838946": 79, "8911504": 79, "22319649": 79, "07094894": 79, "6885556": 79, "79176235": 79, "82672405": 79, "10939768": 79, "29242": 79, "3574444": 79, "3981813": 79, "79609615": 79, "setentityweight": 79, "By": 79, "weigh": 79, "notat": 79, "target_ent": 79, "related_ent": 79, "insensit": 79, "settargetent": 79, "related1": 79, "related2": 79, "setmaxsyntacticdist": [79, 95, 96, 97], "sbiobert_base_cased_mli": 79, "classif": 81, "feature_vector": [81, 104], "featuresassembl": [81, 104], "labelcolumn": [81, 88], "epochsn": 81, "proce": 81, "dropou": 81, "lay": 81, "validaiton": 81, "modelfil": 81, "fiximbal": 81, "indic": [81, 84], "whenther": 81, "balanc": 81, "trainig": 81, "featuresc": 81, "minmax": 81, "feature_1": 81, "feature_2": 81, "feature_n": 81, "graph_fil": [81, 95], "purpos": 81, "label_column": 81, "drouptup": 81, "validation_split": 81, "mode_fil": 81, "fix_imbal": 81, "feature_sc": 81, "output_logs_path": 81, "doc2_chunk_intern": 83, "chunkmergeapproach": 84, "merger": 84, "made": 84, "accord": 84, "certain": [84, 89], "decis": 84, "highest": [84, 88], "kept": 84, "setreplacedictresourc": [84, 90], "mergeoverlap": 84, "overlap": 84, "falsepositivesresourc": 84, "posit": [84, 90], "replacedictresourc": 84, "chunkpreced": 84, "preced": 84, "proccess": [84, 90], "63": [84, 87, 90], "man": [84, 87, 90], "hospit": [84, 87, 90, 113], "emb": [84, 87, 90], "ner_jsl": [84, 87, 90], "jsl_ner": 84, "jsl_ner_chunk": 84, "ner_bionlp": 84, "bionlp_ner": 84, "bionlp_ner_chunk": 84, "merged_chunk": 84, "cach": [84, 101, 104, 116], "19": [84, 87], "72": [84, 87], "98": [84, 87], "107": [84, 87], "cellul": [84, 87], "diagnosi": [84, 87], "119": [84, 87], "pneumonia": [84, 87], "setmergeoverlap": 84, "setfalsepositivesresourc": 84, "setchunkpreced": 84, "chunkmergemodel": [84, 90], "chunkmergeraproach": 84, "iobtagg": 87, "iob": [87, 88, 90, 115], "bioe": 87, "ner_label": 87, "setschem": 87, "bilstm": 88, "crf": 88, "art": 88, "2003": 88, "chosen": 88, "bertembed": [88, 101], "usag": 88, "minepoch": 88, "maxepoch": 88, "randomse": 88, "lr": 88, "decai": 88, "coeffici": 88, "rage": 88, "005": 88, "usecontrib": 88, "Not": 88, "might": 88, "slightli": 88, "accuraci": 88, "includeallconfidencescor": 88, "stdout": 88, "enablememoryoptim": 88, "slow": 88, "down": 88, "nerdlapproach": [88, 103], "trainingdata": 88, "readdataset": [88, 115], "conll2003": 88, "eng": 88, "ff": 88, "setusecontrib": 88, "setlr": 88, "setpo": 88, "parquet": 88, "setincludeallconfidencescor": 88, "setusebestmodel": 88, "metric": 88, "monitor": 88, "macro": 88, "f1": 88, "precend": 88, "across": 88, "setlogprefix": 88, "setpretrainedmodelpath": 88, "point": [88, 101], "setoverrideexistingtag": 88, "settagsmap": 88, "setearlystoppingcriterion": 88, "criterion": 88, "earli": 88, "setearlystoppingpati": 88, "patienc": 88, "termin": 88, "wordembed": 88, "glove_100d": 88, "inferencebatchs": 88, "labelcas": 88, "upper": [88, 95, 96, 97], "offici": 88, "ekeu": 88, "baghdad": 88, "setinferencebatchs": 88, "setlabelcas": 88, "nerchunk": [89, 95, 96], "neighbor": 89, "issu": 89, "dt": 89, "jj": 89, "ner_radiologi": 89, "imagingfind": 89, "bodypart": 89, "nerconverterintern": 90, "iob2": 90, "friendli": 90, "associ": 90, "preserveposit": 90, "preserv": 90, "greedymod": 90, "contigu": 90, "setpreserveposit": 90, "setgreedymod": 90, "setthreshold": [90, 101], "setreplacelabel": 90, "nerconverterinternalmodel": 90, "datenorm": 91, "anchordateyear": 91, "anchor": 91, "tomorrow": 91, "2021": 91, "anchordatemonth": 91, "month": 91, "januari": 91, "anchordatedai": 91, "chunksdf": 91, "df": [91, 115], "aa": 91, "map_annotations_col": 91, "lambda": 91, "chunk_dat": 91, "setanchordateyear": 91, "2000": 91, "setanchordatemonth": 91, "setanchordatedai": 91, "fri": 91, "21": 91, "nov": 91, "1997": 91, "week": 91, "30": 91, "08": 91, "02": 91, "mondai": 91, "todai": 91, "drugnorm": 92, "raw": 92, "scrape": 92, "web": 92, "xml": 92, "dirti": 92, "sodium": 92, "chlorid": 92, "potassium": 92, "13bag": 92, "interferon": 92, "alfa": 92, "2b": 92, "million": 92, "injec": 92, "meq": 92, "oral": 92, "sol": 92, "document_norm": 92, "trainingpipelin": 92, "normalized_text": [92, 101], "bag": 92, "10000000": 92, "unt": 92, "inject": 92, "solut": 92, "setpolici": 92, "relationextractionmodel": [95, 96], "fromentitybegincol": 95, "fromentityendcol": 95, "fromentitylabelcol": 95, "toentitybegincol": 95, "toentityendcol": 95, "toentitylabelcol": 95, "embedd": [95, 96], "pos_clin": [95, 96, 97], "postag": [95, 96], "ner_events_clin": [95, 96], "depencypars": [95, 96], "dependencyparsermodel": [95, 96, 97], "dependency_conllu": [95, 96, 97], "relations_t": 95, "target_rel": 95, "05": 95, "from_begin": 95, "from_end": 95, "from_label": 95, "to_begin": 95, "to_end": 95, "to_label": 95, "traindata": [95, 96], "begin_col": 95, "end_col": 95, "label_col": 95, "setcustomlabel": [95, 96], "predictionthreshold": [95, 96, 98], "encod": [95, 96, 97, 98], "relationpair": [95, 96, 97], "biomark": 95, "relativedai": 95, "relationpairscasesensit": [95, 97], "external_body_part_or_region": [95, 96, 97], "internal_organ_or_compon": [95, 96, 97], "re_model": [95, 96], "re_bodypart_direct": 95, "setrelationpair": [95, 96, 97], "setpredictionthreshold": [95, 96], "mri": [95, 96, 97], "demonstr": [95, 96, 97], "infarct": [95, 96, 97], "brain": [95, 96, 97], "cerebellum": [95, 96, 97], "basil": [95, 96, 97], "ganglia": [95, 96, 97], "chunk1": [95, 96], "chunk2": [95, 96], "setrelationpairscasesensit": [95, 97], "posologyremodel": 95, "relationextractiondlmodel": [96, 97], "contrast": 96, "re_ner_chunk_filt": [96, 97], "renerchunksfilt": [96, 97, 98], "re_ner_chunk": [96, 97], "redl_bodypart_direction_biobert": 96, "further": 97, "especi": 97, "doclevelrel": 97, "words_embedd": 97, "pos_tagg": 97, "dependency_pars": 97, "clinical_ner_tagg": 97, "jsl_ner_wip_greedy_clin": 97, "trained_pipelin": 97, "cre": 97, "re_chunk": 97, "paired_to": 97, "59": 97, "setdoclevelrel": 97, "zeroshotrelationextractionmodel": 98, "shot": 98, "binari": 98, "util": [98, 113], "nli": 98, "definit": 98, "statement": 98, "regard": 98, "relationship": 98, "append": 98, "relationalcategori": 98, "hypothesi": 98, "templat": 98, "cure": 98, "problem": 98, "5f": 98, "multilabel": 98, "categor": 98, "reveal": 98, "9760039": 98, "98819494": 98, "9929625": 98, "setrelationalcategori": 98, "xxx": 98, "resolvermerg": 100, "enit": 100, "sentenceresolverparam": 101, "interfac": 101, "distancefunct": 101, "wmd": 101, "euclidean": 101, "cosin": 101, "neighbour": 101, "knn": 101, "queri": 101, "confidencefunct": 101, "invers": 101, "missasempti": 101, "unmatch": 101, "setdistancefunct": 101, "setneighbour": 101, "thre": 101, "setconfidencefunct": 101, "setmissasempti": 101, "sentenceentityresolverapproach": 101, "thiu": 101, "sentenceentityresolvermodel": 101, "ontologi": 101, "curat": 101, "rxnorm": 101, "snome": 101, "normalizedcol": 101, "pretrainedmodelpath": 101, "overrideexistingcod": 101, "returncosinedist": 101, "aux_label_col": 101, "useauxlabel": 101, "auxlabel": 101, "dropcodeslist": 101, "omit": 101, "sent_biobert_pubmed_base_cas": 101, "snomedtrainingpipelin": 101, "snomedtrainingmodel": 101, "snomeddata": 101, "bertextractor": 101, "bert_embed": 101, "setnormalizedcol": 101, "snomed_cod": 101, "euclidian": 101, "snomedmodel": 101, "setuseauxlabel": 101, "setauxlabelcol": 101, "setextractcosinedist": 101, "searchtre": 101, "tree": 101, "setsearchtre": 101, "filterfieldsel": 102, "metadatafield": 102, "rules2": 102, "setstrategi": 102, "match_al": 102, "doc_chunk": 102, "sent_small_bert_l2_128": 102, "router_name_embed": 102, "setmetadatafield": 102, "setfilterfieldsel": 102, "names_embed": 102, "router_city_embed": 102, "citi": [102, 113], "cities_embed": 102, "router_nam": 102, "names_chunk": 102, "medicalgraphbuildermodel": 103, "estim": 103, "sethiddenact": 103, "gethiddenact": 103, "sethiddenactl2": 103, "l2": 103, "gethiddenactl2": 103, "sethiddenweightsl2": 103, "gethiddenweightsl2": 103, "setbatchnorm": 103, "getbatchnorm": 103, "setismed": 103, "medic": [103, 113, 117], "medicalneraprroach": 103, "getismed": 103, "sethiddenlay": 103, "gethiddenlay": 103, "hiudden": 103, "setmaxsequencelength": 103, "getmaxsequencelength": 103, "sethiddenunitsnumb": 103, "gethiddenunitsnumb": 103, "setmodelnam": 103, "getmodelnam": 103, "getlabelcolumn": 103, "getinputcol": 103, "getgraphfold": 103, "greaph": 103, "getgraphfil": 103, "collect": 104, "anyth": 104, "cast": 104, "tri": 104, "timestampformat": 104, "hh": 104, "ss": 104, "zz": 104, "test_jsl": 104, "relfeatur": 104, "withcolumn": 104, "array_column": 104, "words_in_ent1": 104, "words_in_ent2": 104, "features_asm1": 104, "words_between": 104, "features_t": 104, "__data": 104, "ensur": 104, "_java_obj": 104, "customtransform": 106, "anoth": 106, "outputcol": 106, "norvigspellevalu": 107, "test_fil": 107, "ground_truth_fil": 107, "symspellevalu": 107, "nerdlevalu": 107, "tag_level": 107, "nerdlmetr": 107, "full_chunk": 107, "dropo": 107, "nercrfevalu": 107, "posevalu": 107, "alab": [110, 118], "structured_deidentif": 110, "updatemodel": 110, "tabular": 113, "structureddeidentif": 113, "columnsse": 113, "userandomdatedisplac": 113, "deidentif": 113, "countri": 113, "street": 113, "zip": 113, "usernam": 113, "fax": 113, "internet": 113, "profess": 113, "opf": 113, "doctor": 113, "bioid": 113, "screen": 113, "protein": 113, "interact": 113, "occur": 113, "someth": 113, "someon": 113, "healthplan": 113, "medicalrecord": 113, "devic": 113, "annotationtooljsonread": 115, "pipeline_model": 115, "cleanup_mod": 115, "disabl": 115, "split_char": 115, "context_char": 115, "min_chars_tol": 115, "align_chars_tol": 115, "merge_overlap": 115, "sddlpath": 115, "reader": 115, "aspres": 115, "rdr": 115, "anc": 115, "corpu": 115, "small": 115, "json_path": 115, "assertion_df": 115, "generateassertiontrainset": 115, "codiespread": 115, "cantemistread": 115, "synonymaugmentationuml": 115, "umls_path": 115, "code_col": 115, "description_col": 115, "ner_col": 115, "chunk_col": 115, "get_mt_sampl": 117, "medical_speci": 117, "transcrib": 117, "transcript": 117, "report": 117, "mtsampl": 117, "One": 117, "special": 117, "allergy_immunologi": 117, "autopsi": 117, "bariatr": 117, "cardiovascular_pulmonari": 117, "chiropract": 117, "consult_history_and_phi": 117, "cosmetic_plastic_surgeri": 117, "dentistri": 117, "dermatologi": 117, "diets_and_nutrit": 117, "discharge_summari": 117, "emergency_room_report": 117, "endocrinologi": 117, "ent_otolaryngologi": 117, "gastroenterologi": 117, "general_medicin": 117, "hematology_oncologi": 117, "hospice_palliative_car": 117, "im": 117, "lab_medicine_pathologi": 117, "letter": 117, "nephrologi": 117, "neurologi": 117, "neurosurgeri": 117, "obstetrics_gynecologi": 117, "office_not": 117, "ophthalmologi": 117, "orthoped": 117, "pain_manag": 117, "pediatrics_neonat": 117, "physical_medicine_rehab": 117, "podiatri": 117, "psychiatry_psychologi": 117, "radiologi": 117, "rheumatologi": 117, "sleep_medicin": 117, "soap_chart_progress_not": 117, "speech_languag": 117, "surgeri": 117, "urologi": 117, "scrap": 117, "get_nlp_token_pipelin": 118, "assembl": 118, "get_nlp_regex_token_pipelin": 118, "get_sentence_pipelin": 118, "get_rel_df": 118, "get_ner_df": 118, "get_ner_sentence_bord": 118, "border": 118, "get_nlp_pos_pipelin": 118, "tagger": 118, "get_nlp_regex_pos_pipelin": 118, "get_single_task_conl": 118, "pos_pipelin": 118, "token_pipelin": 118, "style": 118, "item": 118, "alab_util": 119}, "objects": {"": [[110, 0, 0, "-", "sparknlp_jsl"]], "sparknlp_jsl": [[21, 0, 0, "-", "_tf_graph_builders"], [44, 0, 0, "-", "_tf_graph_builders_1x"], [51, 0, 0, "-", "alab"], [83, 0, 0, "-", "annotator"], [104, 0, 0, "-", "base"], [105, 0, 0, "-", "compatibility"], [106, 0, 0, "-", "custom_transformer"], [107, 0, 0, "-", "eval"], [108, 0, 0, "-", "freeze"], [109, 0, 0, "-", "functions"], [111, 0, 0, "-", "internal"], [112, 0, 0, "-", "pretrained"], [113, 0, 0, "-", "structured_deidentification"], [114, 0, 0, "-", "text_to_documents_columns"], [115, 0, 0, "-", "training"], [116, 0, 0, "-", "updateModels"], [117, 0, 0, "-", "util"], [119, 0, 0, "-", "utils"]], "sparknlp_jsl._tf_graph_builders": [[13, 0, 0, "-", "assertion_dl"], [17, 0, 0, "-", "generic_classifier"], [20, 0, 0, "-", "graph_builders"], [24, 0, 0, "-", "ner_dl"], [31, 0, 0, "-", "tf2contrib"]], "sparknlp_jsl._tf_graph_builders.assertion_dl": [[12, 0, 0, "-", "assertion_model"]], "sparknlp_jsl._tf_graph_builders.generic_classifier": [[14, 0, 0, "-", "basetfmodel"], [15, 0, 0, "-", "build_model"], [16, 0, 0, "-", "generic_classifier_model"], [18, 0, 0, "-", "progresstracker"], [19, 0, 0, "-", "settings"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings": [[19, 1, 1, "", "MODEL_OPS"], [19, 1, 1, "", "MODEL_TENSORS"], [19, 1, 1, "", "RUN_TYPES"]], "sparknlp_jsl._tf_graph_builders.graph_builders": [[20, 1, 1, "", "AssertionTFGraphBuilder"], [20, 1, 1, "", "GenericClassifierTFGraphBuilder"], [20, 1, 1, "", "NerTFGraphBuilder"], [20, 1, 1, "", "RelationExtractionTFGraphBuilder"], [20, 1, 1, "", "TFGraphBuilder"], [20, 1, 1, "", "TFGraphBuilderFactory"], [20, 3, 1, "", "TensorflowAddonsNeeded"], [20, 3, 1, "", "WrongTFVersion"]], "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory": [[20, 2, 1, "", "build"], [20, 2, 1, "", "get_models"], [20, 2, 1, "", "print_model_params"]], "sparknlp_jsl._tf_graph_builders.ner_dl": [[22, 0, 0, "-", "create_graph"], [23, 0, 0, "-", "dataset_encoder"], [25, 0, 0, "-", "ner_model"], [26, 0, 0, "-", "ner_model_saver"], [27, 0, 0, "-", "sentence_grouper"]], "sparknlp_jsl._tf_graph_builders.tf2contrib": [[28, 0, 0, "-", "core_rnn_cell"], [29, 0, 0, "-", "fused_rnn_cell"], [30, 0, 0, "-", "gru_ops"], [32, 0, 0, "-", "lstm_ops"], [33, 0, 0, "-", "rnn"], [34, 0, 0, "-", "rnn_cell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell": [[28, 1, 1, "", "EmbeddingWrapper"], [28, 1, 1, "", "InputProjectionWrapper"], [28, 1, 1, "", "OutputProjectionWrapper"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.EmbeddingWrapper": [[28, 2, 1, "", "call"], [28, 2, 1, "", "output_size"], [28, 2, 1, "", "state_size"], [28, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.InputProjectionWrapper": [[28, 2, 1, "", "call"], [28, 2, 1, "", "output_size"], [28, 2, 1, "", "state_size"], [28, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.OutputProjectionWrapper": [[28, 2, 1, "", "call"], [28, 2, 1, "", "output_size"], [28, 2, 1, "", "state_size"], [28, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.fused_rnn_cell": [[29, 1, 1, "", "FusedRNNCell"], [29, 1, 1, "", "FusedRNNCellAdaptor"], [29, 1, 1, "", "TimeReversedFusedRNN"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops": [[30, 1, 1, "", "GRUBlockCell"], [30, 1, 1, "", "GRUBlockCellV2"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops.GRUBlockCell": [[30, 2, 1, "", "build"], [30, 2, 1, "", "call"], [30, 2, 1, "", "output_size"], [30, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops.GRUBlockCellV2": [[30, 2, 1, "", "build"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops": [[32, 1, 1, "", "LSTMBlockCell"], [32, 1, 1, "", "LSTMBlockFusedCell"], [32, 1, 1, "", "LSTMBlockWrapper"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockCell": [[32, 2, 1, "", "build"], [32, 2, 1, "", "call"], [32, 2, 1, "", "output_size"], [32, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockFusedCell": [[32, 2, 1, "", "build"], [32, 2, 1, "", "num_units"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockWrapper": [[32, 2, 1, "", "call"], [32, 2, 1, "", "num_units"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn": [[33, 4, 1, "", "stack_bidirectional_dynamic_rnn"], [33, 4, 1, "", "stack_bidirectional_rnn"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell": [[34, 1, 1, "", "AttentionCellWrapper"], [34, 1, 1, "", "BidirectionalGridLSTMCell"], [34, 1, 1, "", "CFNCell"], [34, 1, 1, "", "CompiledWrapper"], [34, 1, 1, "", "Conv1DLSTMCell"], [34, 1, 1, "", "Conv2DLSTMCell"], [34, 1, 1, "", "Conv3DLSTMCell"], [34, 1, 1, "", "ConvLSTMCell"], [34, 1, 1, "", "CoupledInputForgetGateLSTMCell"], [34, 1, 1, "", "GLSTMCell"], [34, 1, 1, "", "GridLSTMCell"], [34, 1, 1, "", "HighwayWrapper"], [34, 1, 1, "", "IndRNNCell"], [34, 1, 1, "", "IndyGRUCell"], [34, 1, 1, "", "IndyLSTMCell"], [34, 1, 1, "", "IntersectionRNNCell"], [34, 1, 1, "", "LayerNormBasicLSTMCell"], [34, 1, 1, "", "LayerNormLSTMCell"], [34, 1, 1, "", "MinimalRNNCell"], [34, 1, 1, "", "NASCell"], [34, 1, 1, "", "NTMCell"], [34, 1, 1, "", "PhasedLSTMCell"], [34, 1, 1, "", "SRUCell"], [34, 1, 1, "", "TimeFreqLSTMCell"], [34, 1, 1, "", "UGRNNCell"], [34, 1, 1, "", "WeightNormLSTMCell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.AttentionCellWrapper": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.BidirectionalGridLSTMCell": [[34, 2, 1, "", "call"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CFNCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CompiledWrapper": [[34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"], [34, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.ConvLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CoupledInputForgetGateLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.GLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.GridLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.HighwayWrapper": [[34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"], [34, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndRNNCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndyGRUCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndyLSTMCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IntersectionRNNCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.LayerNormBasicLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.LayerNormLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.MinimalRNNCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.NASCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.NTMCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"], [34, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.PhasedLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.SRUCell": [[34, 2, 1, "", "build"], [34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.TimeFreqLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.UGRNNCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.WeightNormLSTMCell": [[34, 2, 1, "", "call"], [34, 2, 1, "", "output_size"], [34, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders_1x": [[36, 0, 0, "-", "assertion_dl"], [40, 0, 0, "-", "generic_classifier"], [43, 0, 0, "-", "graph_builders"], [47, 0, 0, "-", "ner_dl"]], "sparknlp_jsl._tf_graph_builders_1x.assertion_dl": [[35, 0, 0, "-", "assertion_model"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier": [[37, 0, 0, "-", "basetfmodel"], [38, 0, 0, "-", "build_model"], [39, 0, 0, "-", "generic_classifier_model"], [41, 0, 0, "-", "progresstracker"], [42, 0, 0, "-", "settings"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings": [[42, 1, 1, "", "MODEL_OPS"], [42, 1, 1, "", "MODEL_TENSORS"], [42, 1, 1, "", "RUN_TYPES"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders": [[43, 1, 1, "", "AssertionTFGraphBuilder"], [43, 1, 1, "", "GenericClassifierTFGraphBuilder"], [43, 1, 1, "", "NerTFGraphBuilder"], [43, 1, 1, "", "RelationExtractionTFGraphBuilder"], [43, 1, 1, "", "TFGraphBuilder"], [43, 1, 1, "", "TFGraphBuilderFactory"], [43, 3, 1, "", "WrongTFVersion"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.TFGraphBuilderFactory": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_models"], [43, 2, 1, "", "print_model_params"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl": [[45, 0, 0, "-", "create_graph"], [46, 0, 0, "-", "dataset_encoder"], [48, 0, 0, "-", "ner_model"], [49, 0, 0, "-", "ner_model_saver"], [50, 0, 0, "-", "sentence_grouper"]], "sparknlp_jsl.alab": [[51, 4, 1, "", "get_assertion_data"], [51, 4, 1, "", "get_conll_data"], [51, 4, 1, "", "get_relation_extraction_data"]], "sparknlp_jsl.annotator": [[52, 0, 0, "-", "annotation_merger"], [55, 0, 0, "-", "assertion"], [63, 0, 0, "-", "chunker"], [65, 0, 0, "-", "classification"], [70, 0, 0, "-", "context"], [72, 0, 0, "-", "deid"], [74, 0, 0, "-", "disambiguation"], [76, 0, 0, "-", "doc2_chunk_internal"], [80, 0, 0, "-", "embeddings"], [82, 0, 0, "-", "generic_classifier"], [85, 0, 0, "-", "merge"], [86, 0, 0, "-", "ner"], [93, 0, 0, "-", "normalizer"], [94, 0, 0, "-", "re"], [99, 0, 0, "-", "resolution"], [102, 0, 0, "-", "router"], [103, 0, 0, "-", "tf_graph_builder"]], "sparknlp_jsl.annotator.annotation_merger": [[52, 1, 1, "", "AnnotationMerger"]], "sparknlp_jsl.annotator.annotation_merger.AnnotationMerger": [[52, 2, 1, "", "setInputType"]], "sparknlp_jsl.annotator.assertion": [[53, 0, 0, "-", "assertionDL"], [54, 0, 0, "-", "assertion_dl_reg"]], "sparknlp_jsl.annotator.assertion.assertionDL": [[53, 1, 1, "", "AssertionDLApproach"], [53, 1, 1, "", "AssertionDLModel"]], "sparknlp_jsl.annotator.assertion.assertionDL.AssertionDLApproach": [[53, 2, 1, "", "setBatchSize"], [53, 2, 1, "", "setConfigProtoBytes"], [53, 2, 1, "", "setDropout"], [53, 2, 1, "", "setEnableOutputLogs"], [53, 2, 1, "", "setEndCol"], [53, 2, 1, "", "setEpochs"], [53, 2, 1, "", "setEvaluationLogExtended"], [53, 2, 1, "", "setGraphFile"], [53, 2, 1, "", "setGraphFolder"], [53, 2, 1, "", "setIncludeConfidence"], [53, 2, 1, "", "setLabelCol"], [53, 2, 1, "", "setLearningRate"], [53, 2, 1, "", "setMaxSentLen"], [53, 2, 1, "", "setOutputLogsPath"], [53, 2, 1, "", "setScopeWindow"], [53, 2, 1, "", "setStartCol"], [53, 2, 1, "", "setTestDataset"], [53, 2, 1, "", "setValidationSplit"], [53, 2, 1, "", "setVerbose"]], "sparknlp_jsl.annotator.assertion.assertionDL.AssertionDLModel": [[53, 2, 1, "", "setIncludeConfidence"], [53, 2, 1, "", "setScopeWindow"]], "sparknlp_jsl.annotator.assertion.assertion_dl_reg": [[54, 1, 1, "", "AssertionLogRegApproach"], [54, 1, 1, "", "AssertionLogRegModel"]], "sparknlp_jsl.annotator.chunker": [[56, 0, 0, "-", "assertion_filterer"], [57, 0, 0, "-", "chunk_converter"], [58, 0, 0, "-", "chunk_key_phrase_extraction"], [59, 0, 0, "-", "chunk_sentence_splitter"], [60, 0, 0, "-", "chunker_filterer"], [61, 0, 0, "-", "chunkmapper"], [62, 0, 0, "-", "chunkmapper_filterer"]], "sparknlp_jsl.annotator.chunker.assertion_filterer": [[56, 1, 1, "", "AssertionFilterer"]], "sparknlp_jsl.annotator.chunker.assertion_filterer.AssertionFilterer": [[56, 2, 1, "", "setCriteria"], [56, 2, 1, "", "setRegex"], [56, 2, 1, "", "setWhiteList"]], "sparknlp_jsl.annotator.chunker.chunk_converter": [[57, 1, 1, "", "ChunkConverter"]], "sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction": [[58, 1, 1, "", "ChunkKeyPhraseExtraction"]], "sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction.ChunkKeyPhraseExtraction": [[58, 2, 1, "", "pretrained"], [58, 2, 1, "", "setConcatenateSentences"], [58, 2, 1, "", "setDivergence"], [58, 2, 1, "", "setDocumentLevelProcessing"], [58, 2, 1, "", "setDropPunctuation"], [58, 2, 1, "", "setSelectMostDifferent"], [58, 2, 1, "", "setTopN"]], "sparknlp_jsl.annotator.chunker.chunk_sentence_splitter": [[59, 1, 1, "", "ChunkSentenceSplitter"]], "sparknlp_jsl.annotator.chunker.chunk_sentence_splitter.ChunkSentenceSplitter": [[59, 2, 1, "", "setDefaultEntity"], [59, 2, 1, "", "setGroupBySentences"], [59, 2, 1, "", "setInsertChunk"]], "sparknlp_jsl.annotator.chunker.chunker_filterer": [[60, 1, 1, "", "ChunkFilterer"], [60, 1, 1, "", "ChunkFiltererApproach"]], "sparknlp_jsl.annotator.chunker.chunker_filterer.ChunkFilterer": [[60, 2, 1, "", "setBlackList"]], "sparknlp_jsl.annotator.chunker.chunker_filterer.ChunkFiltererApproach": [[60, 2, 1, "", "setBlackList"], [60, 2, 1, "", "setCriteria"], [60, 2, 1, "", "setFilterEntity"], [60, 2, 1, "", "setRegex"], [60, 2, 1, "", "setWhiteList"]], "sparknlp_jsl.annotator.chunker.chunkmapper": [[61, 1, 1, "", "ChunkMapperApproach"], [61, 1, 1, "", "ChunkMapperModel"]], "sparknlp_jsl.annotator.chunker.chunkmapper.ChunkMapperApproach": [[61, 2, 1, "", "setAllowMultiTokenChunk"], [61, 2, 1, "", "setDictionary"], [61, 2, 1, "", "setLowerCase"], [61, 2, 1, "", "setMultivaluesRelations"]], "sparknlp_jsl.annotator.chunker.chunkmapper.ChunkMapperModel": [[61, 2, 1, "", "pretrained"], [61, 2, 1, "", "setAllowMultiTokenChunk"], [61, 2, 1, "", "setLowerCase"], [61, 2, 1, "", "setMultivaluesRelations"]], "sparknlp_jsl.annotator.chunker.chunkmapper_filterer": [[62, 1, 1, "", "ChunkMapperFilterer"]], "sparknlp_jsl.annotator.classification": [[64, 0, 0, "-", "document_log_classifier"], [66, 0, 0, "-", "medical_bert_for_sequence_classification"], [67, 0, 0, "-", "medical_bert_for_token_classifier"], [68, 0, 0, "-", "medical_distilbert_for_sequence_classification"]], "sparknlp_jsl.annotator.classification.document_log_classifier": [[64, 1, 1, "", "DocumentLogRegClassifierApproach"], [64, 1, 1, "", "DocumentLogRegClassifierModel"]], "sparknlp_jsl.annotator.classification.document_log_classifier.DocumentLogRegClassifierApproach": [[64, 2, 1, "", "setClassificationModelPath"], [64, 2, 1, "", "setFitIntercept"], [64, 2, 1, "", "setLabelColumn"], [64, 2, 1, "", "setLabels"], [64, 2, 1, "", "setMaxIter"], [64, 2, 1, "", "setTol"], [64, 2, 1, "", "setVectorizationModelPath"]], "sparknlp_jsl.annotator.classification.document_log_classifier.DocumentLogRegClassifierModel": [[64, 2, 1, "", "setClassificationModel"], [64, 2, 1, "", "setLabels"], [64, 2, 1, "", "setMergeChunks"], [64, 2, 1, "", "setVectorizationModel"]], "sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification": [[66, 1, 1, "", "MedicalBertForSequenceClassification"]], "sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification.MedicalBertForSequenceClassification": [[66, 2, 1, "", "getClasses"], [66, 2, 1, "", "loadSavedModel"], [66, 2, 1, "", "loadSavedModelOpenSource"], [66, 2, 1, "", "pretrained"], [66, 2, 1, "", "setCoalesceSentences"], [66, 2, 1, "", "setConfigProtoBytes"], [66, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier": [[67, 1, 1, "", "MedicalBertForTokenClassifier"]], "sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier.MedicalBertForTokenClassifier": [[67, 2, 1, "", "getClasses"], [67, 2, 1, "", "loadSavedModel"], [67, 2, 1, "", "loadSavedModelOpenSource"], [67, 2, 1, "", "pretrained"], [67, 2, 1, "", "setConfigProtoBytes"], [67, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification": [[68, 1, 1, "", "MedicalDistilBertForSequenceClassification"]], "sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification.MedicalDistilBertForSequenceClassification": [[68, 2, 1, "", "getClasses"], [68, 2, 1, "", "loadSavedModel"], [68, 2, 1, "", "loadSavedModelOpenSource"], [68, 2, 1, "", "pretrained"], [68, 2, 1, "", "setCoalesceSentences"], [68, 2, 1, "", "setConfigProtoBytes"], [68, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.context": [[69, 0, 0, "-", "contextual_parser"]], "sparknlp_jsl.annotator.context.contextual_parser": [[69, 1, 1, "", "ContextualParserApproach"], [69, 1, 1, "", "ContextualParserModel"]], "sparknlp_jsl.annotator.context.contextual_parser.ContextualParserApproach": [[69, 2, 1, "", "setCaseSensitive"], [69, 2, 1, "", "setDictionary"], [69, 2, 1, "", "setJsonPath"], [69, 2, 1, "", "setOptionalContextRules"], [69, 2, 1, "", "setPrefixAndSuffixMatch"], [69, 2, 1, "", "setShortestContextMatch"]], "sparknlp_jsl.annotator.context.contextual_parser.ContextualParserModel": [[69, 2, 1, "", "setCaseSensitive"], [69, 2, 1, "", "setOptionalContextRules"], [69, 2, 1, "", "setPrefixAndSuffixMatch"], [69, 2, 1, "", "setShortestContextMatch"]], "sparknlp_jsl.annotator.deid": [[71, 0, 0, "-", "deIdentification"], [73, 0, 0, "-", "reIdentification"]], "sparknlp_jsl.annotator.deid.deIdentification": [[71, 1, 1, "", "DeIdentification"], [71, 1, 1, "", "DeIdentificationModel"]], "sparknlp_jsl.annotator.deid.deIdentification.DeIdentification": [[71, 2, 1, "", "setBlackList"], [71, 2, 1, "", "setConsistentObfuscation"], [71, 2, 1, "", "setDateFormats"], [71, 2, 1, "", "setDateTag"], [71, 2, 1, "", "setDateToYear"], [71, 2, 1, "", "setDays"], [71, 2, 1, "", "setFixedMaskLength"], [71, 2, 1, "", "setIgnoreRegex"], [71, 2, 1, "", "setIsRandomDateDisplacement"], [71, 2, 1, "", "setLanguage"], [71, 2, 1, "", "setMappingsColumn"], [71, 2, 1, "", "setMaskingPolicy"], [71, 2, 1, "", "setMinYear"], [71, 2, 1, "", "setMode"], [71, 2, 1, "", "setObfuscateDate"], [71, 2, 1, "", "setObfuscateRefFile"], [71, 2, 1, "", "setObfuscateRefSource"], [71, 2, 1, "", "setRefFileFormat"], [71, 2, 1, "", "setRefSep"], [71, 2, 1, "", "setRegexOverride"], [71, 2, 1, "", "setRegexPatternsDictionary"], [71, 2, 1, "", "setReturnEntityMappings"], [71, 2, 1, "", "setSameEntityThreshold"], [71, 2, 1, "", "setSeed"]], "sparknlp_jsl.annotator.deid.deIdentification.DeIdentificationModel": [[71, 2, 1, "", "setBlackList"], [71, 2, 1, "", "setConsistentObfuscation"], [71, 2, 1, "", "setDateFormats"], [71, 2, 1, "", "setDateTag"], [71, 2, 1, "", "setDateToYear"], [71, 2, 1, "", "setDays"], [71, 2, 1, "", "setFixedMaskLength"], [71, 2, 1, "", "setIgnoreRegex"], [71, 2, 1, "", "setIsRandomDateDisplacement"], [71, 2, 1, "", "setLanguage"], [71, 2, 1, "", "setMappingsColumn"], [71, 2, 1, "", "setMaskingPolicy"], [71, 2, 1, "", "setMinYear"], [71, 2, 1, "", "setMode"], [71, 2, 1, "", "setObfuscateDate"], [71, 2, 1, "", "setObfuscateRefSource"], [71, 2, 1, "", "setRegexOverride"], [71, 2, 1, "", "setReturnEntityMappings"], [71, 2, 1, "", "setSameEntityThreshold"], [71, 2, 1, "", "setSeed"]], "sparknlp_jsl.annotator.deid.reIdentification": [[73, 1, 1, "", "ReIdentification"]], "sparknlp_jsl.annotator.disambiguation": [[75, 0, 0, "-", "ner_disambiguator"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator": [[75, 1, 1, "", "NerDisambiguator"], [75, 1, 1, "", "NerDisambiguatorModel"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator.NerDisambiguator": [[75, 2, 1, "", "setEmbeddingType"], [75, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [75, 2, 1, "", "setNarrowWithApproximateMatching"], [75, 2, 1, "", "setNearMatchingGapParam"], [75, 2, 1, "", "setNumFirstChars"], [75, 2, 1, "", "setPredictionLimit"], [75, 2, 1, "", "setS3KnowledgeBaseName"], [75, 2, 1, "", "setTokenSearch"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator.NerDisambiguatorModel": [[75, 2, 1, "", "setEmbeddingType"], [75, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [75, 2, 1, "", "setNarrowWithApproximateMatching"], [75, 2, 1, "", "setNearMatchingGapParam"], [75, 2, 1, "", "setNumFirstChars"], [75, 2, 1, "", "setPredictionLimit"], [75, 2, 1, "", "setTokenSearch"]], "sparknlp_jsl.annotator.doc2_chunk_internal": [[76, 1, 1, "", "Doc2ChunkInternal"]], "sparknlp_jsl.annotator.doc2_chunk_internal.Doc2ChunkInternal": [[76, 2, 1, "", "setChunkCol"], [76, 2, 1, "", "setFailOnMissing"], [76, 2, 1, "", "setIsArray"], [76, 2, 1, "", "setLowerCase"], [76, 2, 1, "", "setStartCol"], [76, 2, 1, "", "setStartColByTokenIndex"]], "sparknlp_jsl.annotator.embeddings": [[77, 0, 0, "-", "average_embeddings"], [78, 0, 0, "-", "bert_sentence_embeddings"], [79, 0, 0, "-", "entity_chunk_embeddings"]], "sparknlp_jsl.annotator.embeddings.average_embeddings": [[77, 1, 1, "", "AverageEmbeddings"]], "sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings": [[78, 1, 1, "", "BertSentenceChunkEmbeddings"]], "sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings.BertSentenceChunkEmbeddings": [[78, 2, 1, "", "load"], [78, 2, 1, "", "pretrained"], [78, 2, 1, "", "setChunkWeight"]], "sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings": [[79, 1, 1, "", "EntityChunkEmbeddings"]], "sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings.EntityChunkEmbeddings": [[79, 2, 1, "", "pretrained"], [79, 2, 1, "", "setEntityWeights"], [79, 2, 1, "", "setMaxSyntacticDistance"], [79, 2, 1, "", "setTargetEntities"]], "sparknlp_jsl.annotator.generic_classifier": [[81, 0, 0, "-", "generic_classifier"]], "sparknlp_jsl.annotator.generic_classifier.generic_classifier": [[81, 1, 1, "", "GenericClassifierApproach"], [81, 1, 1, "", "GenericClassifierModel"]], "sparknlp_jsl.annotator.generic_classifier.generic_classifier.GenericClassifierApproach": [[81, 2, 1, "", "setBatchSize"], [81, 2, 1, "", "setDropout"], [81, 2, 1, "", "setEpochsNumber"], [81, 2, 1, "", "setFeatureScaling"], [81, 2, 1, "", "setFixImbalance"], [81, 2, 1, "", "setLabelCol"], [81, 2, 1, "", "setLearningRate"], [81, 2, 1, "", "setModelFile"], [81, 2, 1, "", "setOutputLogsPath"], [81, 2, 1, "", "setValidationSplit"]], "sparknlp_jsl.annotator.merge": [[84, 0, 0, "-", "chunker_merge"]], "sparknlp_jsl.annotator.merge.chunker_merge": [[84, 1, 1, "", "ChunkMergeApproach"], [84, 1, 1, "", "ChunkMergeModel"]], "sparknlp_jsl.annotator.merge.chunker_merge.ChunkMergeApproach": [[84, 2, 1, "", "setBlackList"], [84, 2, 1, "", "setChunkPrecedence"], [84, 2, 1, "", "setFalsePositivesResource"], [84, 2, 1, "", "setMergeOverlapping"], [84, 2, 1, "", "setReplaceDictResource"]], "sparknlp_jsl.annotator.merge.chunker_merge.ChunkMergeModel": [[84, 2, 1, "", "setChunkPrecedence"], [84, 2, 1, "", "setMergeOverlapping"]], "sparknlp_jsl.annotator.ner": [[87, 0, 0, "-", "iob_tagger"], [88, 0, 0, "-", "medical_ner"], [89, 0, 0, "-", "ner_chunker"], [90, 0, 0, "-", "ner_converter_internal"]], "sparknlp_jsl.annotator.ner.iob_tagger": [[87, 1, 1, "", "IOBTagger"]], "sparknlp_jsl.annotator.ner.iob_tagger.IOBTagger": [[87, 2, 1, "", "setScheme"]], "sparknlp_jsl.annotator.ner.medical_ner": [[88, 1, 1, "", "MedicalNerApproach"], [88, 1, 1, "", "MedicalNerModel"]], "sparknlp_jsl.annotator.ner.medical_ner.MedicalNerApproach": [[88, 2, 1, "", "setBatchSize"], [88, 2, 1, "", "setConfigProtoBytes"], [88, 2, 1, "", "setDropout"], [88, 2, 1, "", "setEarlyStoppingCriterion"], [88, 2, 1, "", "setEarlyStoppingPatience"], [88, 2, 1, "", "setEnableMemoryOptimizer"], [88, 2, 1, "", "setEnableOutputLogs"], [88, 2, 1, "", "setEvaluationLogExtended"], [88, 2, 1, "", "setGraphFile"], [88, 2, 1, "", "setGraphFolder"], [88, 2, 1, "", "setIncludeAllConfidenceScores"], [88, 2, 1, "", "setIncludeConfidence"], [88, 2, 1, "", "setLogPrefix"], [88, 2, 1, "", "setLr"], [88, 2, 1, "", "setOutputLogsPath"], [88, 2, 1, "", "setOverrideExistingTags"], [88, 2, 1, "", "setPo"], [88, 2, 1, "", "setPretrainedModelPath"], [88, 2, 1, "", "setTagsMapping"], [88, 2, 1, "", "setTestDataset"], [88, 2, 1, "", "setUseBestModel"], [88, 2, 1, "", "setUseContrib"], [88, 2, 1, "", "setValidationSplit"]], "sparknlp_jsl.annotator.ner.medical_ner.MedicalNerModel": [[88, 2, 1, "", "setConfigProtoBytes"], [88, 2, 1, "id0", "setIncludeConfidence"], [88, 2, 1, "", "setInferenceBatchSize"], [88, 2, 1, "", "setLabelCasing"]], "sparknlp_jsl.annotator.ner.ner_chunker": [[89, 1, 1, "", "NerChunker"]], "sparknlp_jsl.annotator.ner.ner_chunker.NerChunker": [[89, 2, 1, "", "setRegexParsers"]], "sparknlp_jsl.annotator.ner.ner_converter_internal": [[90, 1, 1, "", "NerConverterInternal"], [90, 1, 1, "", "NerConverterInternalModel"]], "sparknlp_jsl.annotator.ner.ner_converter_internal.NerConverterInternal": [[90, 2, 1, "", "setBlackList"], [90, 2, 1, "", "setGreedyMode"], [90, 2, 1, "", "setPreservePosition"], [90, 2, 1, "", "setReplaceDictResource"], [90, 2, 1, "", "setReplaceLabels"], [90, 2, 1, "", "setThreshold"], [90, 2, 1, "", "setWhiteList"]], "sparknlp_jsl.annotator.ner.ner_converter_internal.NerConverterInternalModel": [[90, 2, 1, "", "setBlackList"], [90, 2, 1, "", "setGreedyMode"], [90, 2, 1, "", "setPreservePosition"], [90, 2, 1, "", "setThreshold"], [90, 2, 1, "", "setWhiteList"]], "sparknlp_jsl.annotator.normalizer": [[91, 0, 0, "-", "date_normalizer"], [92, 0, 0, "-", "drug_normalizer"]], "sparknlp_jsl.annotator.normalizer.date_normalizer": [[91, 1, 1, "", "DateNormalizer"]], "sparknlp_jsl.annotator.normalizer.date_normalizer.DateNormalizer": [[91, 2, 1, "", "setAnchorDateDay"], [91, 2, 1, "", "setAnchorDateMonth"], [91, 2, 1, "", "setAnchorDateYear"]], "sparknlp_jsl.annotator.normalizer.drug_normalizer": [[92, 1, 1, "", "DrugNormalizer"]], "sparknlp_jsl.annotator.normalizer.drug_normalizer.DrugNormalizer": [[92, 2, 1, "", "setLowercase"], [92, 2, 1, "", "setPolicy"]], "sparknlp_jsl.annotator.re": [[95, 0, 0, "-", "relation_extraction"], [96, 0, 0, "-", "relation_extraction_dl"], [97, 0, 0, "-", "relation_ner_chunk_filter"], [98, 0, 0, "-", "zero_shot_relation_extraction"]], "sparknlp_jsl.annotator.re.relation_extraction": [[95, 1, 1, "", "PosologyREModel"], [95, 1, 1, "", "RelationExtractionApproach"], [95, 1, 1, "", "RelationExtractionModel"]], "sparknlp_jsl.annotator.re.relation_extraction.RelationExtractionApproach": [[95, 2, 1, "", "setCustomLabels"], [95, 2, 1, "", "setFromEntity"], [95, 2, 1, "", "setToEntity"]], "sparknlp_jsl.annotator.re.relation_extraction.RelationExtractionModel": [[95, 2, 1, "", "getClasses"], [95, 2, 1, "", "setCustomLabels"], [95, 2, 1, "", "setMaxSyntacticDistance"], [95, 2, 1, "", "setPredictionThreshold"], [95, 2, 1, "", "setRelationPairs"], [95, 2, 1, "", "setRelationPairsCaseSensitive"]], "sparknlp_jsl.annotator.re.relation_extraction_dl": [[96, 1, 1, "", "RelationExtractionDLModel"]], "sparknlp_jsl.annotator.re.relation_extraction_dl.RelationExtractionDLModel": [[96, 2, 1, "", "getClasses"], [96, 2, 1, "", "setBatchSize"], [96, 2, 1, "", "setCustomLabels"], [96, 2, 1, "", "setPredictionThreshold"]], "sparknlp_jsl.annotator.re.relation_ner_chunk_filter": [[97, 1, 1, "", "RENerChunksFilter"]], "sparknlp_jsl.annotator.re.relation_ner_chunk_filter.RENerChunksFilter": [[97, 2, 1, "", "setDocLevelRelations"], [97, 2, 1, "", "setMaxSyntacticDistance"], [97, 2, 1, "", "setRelationPairs"], [97, 2, 1, "", "setRelationPairsCaseSensitive"]], "sparknlp_jsl.annotator.re.zero_shot_relation_extraction": [[98, 1, 1, "", "ZeroShotRelationExtractionModel"]], "sparknlp_jsl.annotator.re.zero_shot_relation_extraction.ZeroShotRelationExtractionModel": [[98, 2, 1, "", "loadSavedModel"], [98, 2, 1, "", "pretrained"], [98, 2, 1, "", "setRelationalCategories"]], "sparknlp_jsl.annotator.resolution": [[100, 0, 0, "-", "resolver_merger"], [101, 0, 0, "-", "sentence_entity_resolver"]], "sparknlp_jsl.annotator.resolution.resolver_merger": [[100, 1, 1, "", "ResolverMerger"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver": [[101, 1, 1, "", "SentenceEntityResolverApproach"], [101, 1, 1, "", "SentenceEntityResolverModel"], [101, 1, 1, "", "SentenceResolverParams"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceEntityResolverApproach": [[101, 2, 1, "", "setAuxLabelCol"], [101, 2, 1, "", "setExtractCosineDistances"], [101, 2, 1, "", "setLabelCol"], [101, 2, 1, "", "setNormalizedCol"], [101, 2, 1, "", "setUseAuxLabel"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceEntityResolverModel": [[101, 2, 1, "", "setAuxLabelCol"], [101, 2, 1, "", "setSearchTree"], [101, 2, 1, "", "setUseAuxLabel"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceResolverParams": [[101, 2, 1, "", "setConfidenceFunction"], [101, 2, 1, "", "setDistanceFunction"], [101, 2, 1, "", "setMissAsEmpty"], [101, 2, 1, "", "setNeighbours"], [101, 2, 1, "", "setThreshold"]], "sparknlp_jsl.annotator.router": [[102, 1, 1, "", "Router"]], "sparknlp_jsl.annotator.router.Router": [[102, 2, 1, "", "setFilterFieldsElements"], [102, 2, 1, "", "setInputType"], [102, 2, 1, "", "setMetadataField"]], "sparknlp_jsl.annotator.tf_graph_builder": [[103, 1, 1, "", "MedicalGraphBuilderModel"], [103, 1, 1, "", "TFGraphBuilder"]], "sparknlp_jsl.annotator.tf_graph_builder.TFGraphBuilder": [[103, 2, 1, "", "getBatchNorm"], [103, 2, 1, "", "getGraphFile"], [103, 2, 1, "", "getGraphFolder"], [103, 2, 1, "", "getHiddenAct"], [103, 2, 1, "", "getHiddenActL2"], [103, 2, 1, "", "getHiddenLayers"], [103, 2, 1, "", "getHiddenUnitsNumber"], [103, 2, 1, "", "getHiddenWeightsL2"], [103, 2, 1, "", "getInputCols"], [103, 2, 1, "", "getIsMedical"], [103, 2, 1, "", "getLabelColumn"], [103, 2, 1, "", "getMaxSequenceLength"], [103, 2, 1, "", "getModelName"], [103, 2, 1, "", "setBatchNorm"], [103, 2, 1, "", "setGraphFile"], [103, 2, 1, "", "setGraphFolder"], [103, 2, 1, "", "setHiddenAct"], [103, 2, 1, "", "setHiddenActL2"], [103, 2, 1, "", "setHiddenLayers"], [103, 2, 1, "", "setHiddenUnitsNumber"], [103, 2, 1, "", "setHiddenWeightsL2"], [103, 2, 1, "", "setInputCols"], [103, 2, 1, "", "setIsMedical"], [103, 2, 1, "", "setLabelColumn"], [103, 2, 1, "", "setMaxSequenceLength"], [103, 2, 1, "", "setModelName"]], "sparknlp_jsl.base": [[104, 1, 1, "", "FeaturesAssembler"]], "sparknlp_jsl.base.FeaturesAssembler": [[104, 2, 1, "", "setInputCols"], [104, 2, 1, "", "setOutputCol"]], "sparknlp_jsl.custom_transformer": [[106, 1, 1, "", "CustomTransformer"]], "sparknlp_jsl.custom_transformer.CustomTransformer": [[106, 2, 1, "", "setInputCol"], [106, 2, 1, "", "setOutputCol"]], "sparknlp_jsl.eval": [[107, 1, 1, "", "NerCrfEvaluation"], [107, 1, 1, "", "NerDLEvaluation"], [107, 1, 1, "", "NerDLMetrics"], [107, 1, 1, "", "NorvigSpellEvaluation"], [107, 1, 1, "", "POSEvaluation"], [107, 1, 1, "", "SymSpellEvaluation"]], "sparknlp_jsl.structured_deidentification": [[113, 1, 1, "", "StructuredDeidentification"]], "sparknlp_jsl.training": [[115, 1, 1, "", "AnnotationToolJsonReader"], [115, 1, 1, "", "CantemistReader"], [115, 1, 1, "", "CodiEspReader"], [115, 1, 1, "", "SynonymAugmentationUMLS"]], "sparknlp_jsl.util": [[117, 4, 1, "", "get_mt_samples"]], "sparknlp_jsl.utils": [[118, 0, 0, "-", "alab_utils"]], "sparknlp_jsl.utils.alab_utils": [[118, 4, 1, "", "get_ner_df"], [118, 4, 1, "", "get_ner_sentence_borders"], [118, 4, 1, "", "get_nlp_pos_pipeline"], [118, 4, 1, "", "get_nlp_regex_pos_pipeline"], [118, 4, 1, "", "get_nlp_regex_token_pipeline"], [118, 4, 1, "", "get_nlp_token_pipeline"], [118, 4, 1, "", "get_rel_df"], [118, 4, 1, "", "get_sentence_pipeline"], [118, 4, 1, "", "get_single_task_conll"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": [1, 120], "refer": [1, 120], "get": 10, "start": 10, "requir": 10, "instal": 10, "spark": [10, 11], "nlp": [10, 11], "session": 10, "from": 10, "python": 10, "document": 11, "content": [11, 19, 20, 28, 29, 30, 32, 33, 34, 42, 43, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 113, 115, 117, 118], "sparknlp_jsl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "_tf_graph_build": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "assertion_dl": [12, 13, 35, 36], "assertion_model": [12, 35], "generic_classifi": [14, 15, 16, 17, 18, 19, 37, 38, 39, 40, 41, 42, 81, 82], "basetfmodel": [14, 37], "build_model": [15, 38], "generic_classifier_model": [16, 39], "progresstrack": [18, 41], "set": [19, 42], "modul": [19, 20, 28, 29, 30, 32, 33, 34, 42, 43, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 113, 115, 117, 118, 120], "class": [19, 20, 28, 29, 30, 32, 34, 42, 43, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 113, 115], "graph_build": [20, 43], "subpackag": 21, "ner_dl": [22, 23, 24, 25, 26, 27, 45, 46, 47, 48, 49, 50], "create_graph": [22, 45], "dataset_encod": [23, 46], "ner_model": [25, 48], "ner_model_sav": [26, 49], "sentence_group": [27, 50], "tf2contrib": [28, 29, 30, 31, 32, 33, 34], "core_rnn_cel": 28, "fused_rnn_cel": 29, "gru_op": 30, "submodul": [31, 83, 110, 119], "lstm_op": 32, "rnn": 33, "function": [33, 51, 109, 117, 118], "rnn_cell": 34, "_tf_graph_builders_1x": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "alab": 51, "annot": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "annotation_merg": 52, "assert": [53, 54, 55], "assertiondl": 53, "assertion_dl_reg": 54, "chunker": [56, 57, 58, 59, 60, 61, 62, 63], "assertion_filter": 56, "chunk_convert": 57, "chunk_key_phrase_extract": 58, "chunk_sentence_splitt": 59, "chunker_filter": 60, "chunkmapp": 61, "chunkmapper_filter": 62, "classif": [64, 65, 66, 67, 68], "document_log_classifi": 64, "medical_bert_for_sequence_classif": 66, "medical_bert_for_token_classifi": 67, "medical_distilbert_for_sequence_classif": 68, "context": [69, 70], "contextual_pars": 69, "deid": [71, 72, 73], "deidentif": 71, "reidentif": 73, "disambigu": [74, 75], "ner_disambigu": 75, "doc2_chunk_intern": 76, "embed": [77, 78, 79, 80], "average_embed": 77, "bert_sentence_embed": 78, "entity_chunk_embed": 79, "merg": [84, 85], "chunker_merg": 84, "ner": [86, 87, 88, 89, 90], "iob_tagg": 87, "medical_n": 88, "ner_chunk": 89, "ner_converter_intern": 90, "normal": [91, 92, 93], "date_norm": 91, "drug_norm": 92, "re": [94, 95, 96, 97, 98], "relation_extract": 95, "relation_extraction_dl": 96, "relation_ner_chunk_filt": 97, "zero_shot_relation_extract": 98, "resolut": [99, 100, 101], "resolver_merg": 100, "sentence_entity_resolv": 101, "router": 102, "tf_graph_build": 103, "base": 104, "compat": 105, "custom_transform": 106, "eval": 107, "freez": 108, "intern": 111, "pretrain": 112, "structured_deidentif": 113, "text_to_documents_column": 114, "train": 115, "updatemodel": 116, "util": [117, 118, 119], "alab_util": 118}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})