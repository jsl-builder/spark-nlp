Search.setIndex({"docnames": ["getting_started/index", "index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/assertion_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/basetfmodel/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/build_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/generic_classifier_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/progresstracker/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/settings/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/create_graph/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/dataset_encoder/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model_saver/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/sentence_grouper/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/core_rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/fused_rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/gru_ops/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/lstm_ops/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn_cell/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/assertion_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/basetfmodel/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/build_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/generic_classifier_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/progresstracker/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/settings/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/graph_builders/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/create_graph/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/dataset_encoder/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model_saver/index", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/sentence_grouper/index", "reference/autosummary/sparknlp_jsl/alab/index", "reference/autosummary/sparknlp_jsl/annotator/annotation_merger/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertionDL/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertion_dl_reg/index", "reference/autosummary/sparknlp_jsl/annotator/assertion/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/assertion_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_converter/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_key_phrase_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_sentence_splitter/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunker_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper_filterer/index", "reference/autosummary/sparknlp_jsl/annotator/chunker/index", "reference/autosummary/sparknlp_jsl/annotator/classification/document_log_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/classification/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_sequence_classification/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_token_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_distilbert_for_sequence_classification/index", "reference/autosummary/sparknlp_jsl/annotator/context/contextual_parser/index", "reference/autosummary/sparknlp_jsl/annotator/context/index", "reference/autosummary/sparknlp_jsl/annotator/deid/deIdentification/index", "reference/autosummary/sparknlp_jsl/annotator/deid/index", "reference/autosummary/sparknlp_jsl/annotator/deid/reIdentification/index", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/index", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/ner_disambiguator/index", "reference/autosummary/sparknlp_jsl/annotator/doc2_chunk_internal/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/average_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/bert_sentence_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/entity_chunk_embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/embeddings/index", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/generic_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/index", "reference/autosummary/sparknlp_jsl/annotator/index", "reference/autosummary/sparknlp_jsl/annotator/merge/chunker_merge/index", "reference/autosummary/sparknlp_jsl/annotator/merge/index", "reference/autosummary/sparknlp_jsl/annotator/ner/index", "reference/autosummary/sparknlp_jsl/annotator/ner/iob_tagger/index", "reference/autosummary/sparknlp_jsl/annotator/ner/medical_ner/index", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_chunker/index", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_converter_internal/index", "reference/autosummary/sparknlp_jsl/annotator/ner/zero_shot_ner/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/date_normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/drug_normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/normalizer/index", "reference/autosummary/sparknlp_jsl/annotator/qa/index", "reference/autosummary/sparknlp_jsl/annotator/qa/qa_ner_generator/index", "reference/autosummary/sparknlp_jsl/annotator/re/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction_dl/index", "reference/autosummary/sparknlp_jsl/annotator/re/relation_ner_chunk_filter/index", "reference/autosummary/sparknlp_jsl/annotator/re/zero_shot_relation_extraction/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/resolver_merger/index", "reference/autosummary/sparknlp_jsl/annotator/resolution/sentence_entity_resolver/index", "reference/autosummary/sparknlp_jsl/annotator/router/index", "reference/autosummary/sparknlp_jsl/annotator/tf_graph_builder/index", "reference/autosummary/sparknlp_jsl/base/index", "reference/autosummary/sparknlp_jsl/compatibility/index", "reference/autosummary/sparknlp_jsl/custom_transformer/index", "reference/autosummary/sparknlp_jsl/eval/index", "reference/autosummary/sparknlp_jsl/freeze/index", "reference/autosummary/sparknlp_jsl/functions/index", "reference/autosummary/sparknlp_jsl/index", "reference/autosummary/sparknlp_jsl/internal/index", "reference/autosummary/sparknlp_jsl/pretrained/index", "reference/autosummary/sparknlp_jsl/structured_deidentification/index", "reference/autosummary/sparknlp_jsl/text_to_documents_columns/index", "reference/autosummary/sparknlp_jsl/training/index", "reference/autosummary/sparknlp_jsl/updateModels/index", "reference/autosummary/sparknlp_jsl/util/index", "reference/autosummary/sparknlp_jsl/utils/alab_utils/index", "reference/autosummary/sparknlp_jsl/utils/index", "reference/index"], "filenames": ["getting_started/index.rst", "index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/assertion_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/assertion_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/basetfmodel/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/build_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/generic_classifier_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/progresstracker/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/generic_classifier/settings/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/create_graph/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/dataset_encoder/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/ner_model_saver/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/ner_dl/sentence_grouper/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/core_rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/fused_rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/gru_ops/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/lstm_ops/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders/tf2contrib/rnn_cell/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/assertion_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/assertion_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/basetfmodel/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/build_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/generic_classifier_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/progresstracker/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/generic_classifier/settings/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/graph_builders/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/create_graph/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/dataset_encoder/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/ner_model_saver/index.rst", "reference/autosummary/sparknlp_jsl/_tf_graph_builders_1x/ner_dl/sentence_grouper/index.rst", "reference/autosummary/sparknlp_jsl/alab/index.rst", "reference/autosummary/sparknlp_jsl/annotator/annotation_merger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertionDL/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/assertion_dl_reg/index.rst", "reference/autosummary/sparknlp_jsl/annotator/assertion/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/assertion_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_converter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_key_phrase_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunk_sentence_splitter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunker_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/chunkmapper_filterer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/chunker/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/document_log_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_sequence_classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_bert_for_token_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/classification/medical_distilbert_for_sequence_classification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/context/contextual_parser/index.rst", "reference/autosummary/sparknlp_jsl/annotator/context/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/deIdentification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/index.rst", "reference/autosummary/sparknlp_jsl/annotator/deid/reIdentification/index.rst", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/index.rst", "reference/autosummary/sparknlp_jsl/annotator/disambiguation/ner_disambiguator/index.rst", "reference/autosummary/sparknlp_jsl/annotator/doc2_chunk_internal/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/average_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/bert_sentence_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/entity_chunk_embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/embeddings/index.rst", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/generic_classifier/index.rst", "reference/autosummary/sparknlp_jsl/annotator/index.rst", "reference/autosummary/sparknlp_jsl/annotator/merge/chunker_merge/index.rst", "reference/autosummary/sparknlp_jsl/annotator/merge/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/iob_tagger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/medical_ner/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_chunker/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/ner_converter_internal/index.rst", "reference/autosummary/sparknlp_jsl/annotator/ner/zero_shot_ner/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/date_normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/drug_normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/normalizer/index.rst", "reference/autosummary/sparknlp_jsl/annotator/qa/index.rst", "reference/autosummary/sparknlp_jsl/annotator/qa/qa_ner_generator/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_extraction_dl/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/relation_ner_chunk_filter/index.rst", "reference/autosummary/sparknlp_jsl/annotator/re/zero_shot_relation_extraction/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/resolver_merger/index.rst", "reference/autosummary/sparknlp_jsl/annotator/resolution/sentence_entity_resolver/index.rst", "reference/autosummary/sparknlp_jsl/annotator/router/index.rst", "reference/autosummary/sparknlp_jsl/annotator/tf_graph_builder/index.rst", "reference/autosummary/sparknlp_jsl/base/index.rst", "reference/autosummary/sparknlp_jsl/compatibility/index.rst", "reference/autosummary/sparknlp_jsl/custom_transformer/index.rst", "reference/autosummary/sparknlp_jsl/eval/index.rst", "reference/autosummary/sparknlp_jsl/freeze/index.rst", "reference/autosummary/sparknlp_jsl/functions/index.rst", "reference/autosummary/sparknlp_jsl/index.rst", "reference/autosummary/sparknlp_jsl/internal/index.rst", "reference/autosummary/sparknlp_jsl/pretrained/index.rst", "reference/autosummary/sparknlp_jsl/structured_deidentification/index.rst", "reference/autosummary/sparknlp_jsl/text_to_documents_columns/index.rst", "reference/autosummary/sparknlp_jsl/training/index.rst", "reference/autosummary/sparknlp_jsl/updateModels/index.rst", "reference/autosummary/sparknlp_jsl/util/index.rst", "reference/autosummary/sparknlp_jsl/utils/alab_utils/index.rst", "reference/autosummary/sparknlp_jsl/utils/index.rst", "reference/index.rst"], "titles": ["Getting Started", "Spark NLP Documentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.assertion_dl.assertion_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.assertion_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.basetfmodel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.build_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.generic_classifier_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.progresstracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.generic_classifier.settings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.create_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.dataset_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.ner_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.ner_model_saver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.ner_dl.sentence_grouper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.fused_rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.rnn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.assertion_dl.assertion_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.assertion_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.basetfmodel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.build_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.generic_classifier_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.progresstracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.graph_builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.create_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.dataset_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model_saver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl._tf_graph_builders_1x.ner_dl.sentence_grouper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.alab</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.annotation_merger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion.assertionDL</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion.assertion_dl_reg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.assertion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.assertion_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunk_sentence_splitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunker_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunkmapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker.chunkmapper_filterer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.chunker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.document_log_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.context.contextual_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid.deIdentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.deid.reIdentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.disambiguation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.disambiguation.ner_disambiguator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.doc2_chunk_internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.average_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.generic_classifier.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.generic_classifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.merge.chunker_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.iob_tagger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.medical_ner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.ner_chunker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.ner_converter_internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.ner.zero_shot_ner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer.date_normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer.drug_normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.qa</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.qa.qa_ner_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_extraction_dl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.relation_ner_chunk_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.re.zero_shot_relation_extraction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution.resolver_merger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.resolution.sentence_entity_resolver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.router</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.annotator.tf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.compatibility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.custom_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.freeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.internal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.pretrained</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.structured_deidentification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.text_to_documents_columns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.updateModels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.utils.alab_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparknlp_jsl.utils</span></code>", "API Reference"], "terms": {"4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "healthcar": [0, 1, 10, 33], "i": [0, 18, 19, 20, 21, 22, 23, 24, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 78, 79, 81, 82, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 106, 109], "commerci": 0, "extens": [0, 68], "clinic": [0, 43, 44, 48, 51, 56, 57, 58, 61, 68, 69, 74, 77, 78, 79, 80, 81, 83, 86, 88, 89, 90, 91], "biomed": 0, "text": [0, 42, 43, 44, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95], "mine": 0, "If": [0, 10, 18, 22, 23, 24, 33, 43, 46, 48, 49, 50, 52, 56, 58, 59, 61, 69, 71, 74, 78, 80, 82, 96, 98, 106, 109], "you": [0, 10, 33, 42, 43, 49, 51, 59, 61, 82, 86, 95, 98, 106], "don": [0, 50], "t": [0, 23, 24, 50, 59, 61, 108], "have": [0, 23, 24, 41, 43, 49, 50, 51, 69, 74, 78, 86, 94, 97], "subscript": 0, "yet": [0, 24], "can": [0, 18, 20, 22, 23, 24, 43, 44, 46, 48, 50, 56, 57, 58, 59, 61, 65, 69, 74, 78, 83, 91, 97], "ask": 0, "free": [0, 24], "trial": 0, "click": 0, "button": 0, "below": 0, "try": [0, 54, 71, 82, 94, 98], "http": [0, 20, 21, 22, 23, 24, 65], "www": [0, 110], "johnsnowlab": [0, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95], "com": [0, 21, 24, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95, 110], "provid": [0, 22, 23, 24, 43, 49, 57, 59, 61, 78, 79, 106], "specif": [0, 10, 33, 69, 78, 83, 96], "annot": [0, 10, 33, 41, 97, 103, 105, 108, 111], "pipelin": [0, 10, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 97], "model": [0, 1, 5, 8, 10, 20, 22, 23, 24, 28, 31, 33, 41, 43, 44, 47, 48, 50, 51, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 94, 96, 98, 109], "embed": [0, 10, 18, 33, 43, 44, 46, 48, 50, 51, 56, 57, 58, 61, 65, 73, 77, 78, 79, 80, 82, 86, 88, 89, 90, 91, 94, 95, 97, 100, 103], "entiti": [0, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 57, 59, 61, 65, 69, 74, 78, 79, 80, 81, 86, 88, 89, 90, 91, 93, 94, 95, 104, 106, 111], "recognit": [0, 24, 57, 78, 81], "link": [0, 65], "normal": [0, 13, 24, 36, 54, 59, 73, 94, 96, 103], "assert": [0, 10, 33, 41, 46, 50, 73, 103, 108, 111], "statu": [0, 43, 44], "detect": 0, "de": [0, 61], "identif": [0, 106], "relat": [0, 10, 33, 41, 51, 69, 80, 86, 88, 89, 90, 91, 111], "extract": [0, 41, 43, 44, 46, 48, 59, 65, 68, 78, 79, 88, 89, 90, 91, 94], "spell": [0, 100], "check": [0, 98, 109], "correct": 0, "The": [0, 10, 20, 21, 22, 23, 24, 33, 42, 43, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 68, 69, 74, 78, 80, 81, 82, 86, 88, 91, 94, 95, 97, 106], "librari": [0, 1, 56, 57, 58, 66, 98], "offer": 0, "access": 0, "sever": [0, 23, 43, 46, 61], "transform": [0, 43, 44, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 78, 79, 81, 82, 83, 86, 88, 89, 90, 91, 94, 97, 99], "jsl": [0, 41, 51, 86, 111], "bert": [0, 48, 56, 57, 58, 68, 78, 89, 91, 95], "biobert": 0, "clinicalbert": 0, "glove": [0, 44], "med": 0, "icd": [0, 94], "o": [0, 24, 52, 57, 77, 80, 106], "It": [0, 18, 20, 22, 24, 59, 61, 71, 78, 97, 98, 109], "also": [0, 24, 56, 57, 58, 65], "includ": [0, 21, 41, 43, 78, 80, 90, 111], "over": [0, 19, 61], "50": [0, 10, 24, 33, 51, 59, 71, 78, 86], "pre": [0, 66], "train": [0, 2, 9, 10, 15, 22, 23, 24, 25, 32, 33, 38, 41, 43, 44, 46, 50, 51, 54, 56, 57, 58, 59, 61, 66, 68, 69, 71, 74, 77, 78, 79, 80, 82, 86, 88, 89, 91, 94, 97, 103], "recogn": [0, 78, 80], "follow": [0, 19, 20, 59, 61, 78, 83, 110], "mani": [0, 18, 49, 65], "more": [0, 18, 19, 22, 23, 56, 57, 58, 61, 66, 83], "support": [0, 78], "sign": 0, "symptom": [0, 69], "treatment": [0, 91, 108], "procedur": 0, "test": [0, 43, 47, 49, 78, 91, 95, 108], "lab": [0, 41, 108, 111], "section": [0, 88], "drug": [0, 69, 91], "name": [0, 6, 10, 20, 22, 24, 29, 33, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 105, 106], "dosag": [0, 69], "strength": [0, 69], "rout": 0, "durat": 0, "frequenc": [0, 24], "risk": 0, "factor": [0, 24], "smoke": 0, "obes": 0, "diabet": [0, 48, 68], "hypertens": 0, "substanc": 0, "abus": 0, "anatomi": 0, "organ": [0, 57, 106], "subdivis": 0, "cell": [0, 18, 19, 20, 22, 23, 24, 57, 78, 106], "structur": [0, 18, 24, 91, 106], "tissu": 0, "gene": 0, "chemic": 0, "demograph": 0, "ag": [0, 61, 74, 77, 102, 106], "gender": [0, 74, 77], "height": [0, 15, 38], "weight": [0, 20, 22, 24, 41, 68, 69, 96, 104], "race": 0, "ethnic": 0, "marit": 0, "vital": 0, "sensit": [0, 59, 68, 88, 90], "data": [0, 18, 22, 23, 24, 43, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 96, 97, 106], "patient": [0, 43, 50, 51, 59, 86, 106], "address": [0, 48, 51, 56, 57, 58, 68, 69, 79, 81, 91], "phone": [0, 106], "email": [0, 106], "date": [0, 42, 49, 61, 82, 95, 106, 109], "identifi": [0, 47, 49, 74, 95, 106], "For": [0, 19, 24, 46, 56, 57, 61, 66, 68, 77, 78, 81, 89, 91], "inform": [0, 1, 23, 24, 59, 61, 74], "visit": 0, "our": [0, 98], "site": [0, 59], "built": [0, 24], "top": [0, 48, 56, 57, 58], "apach": 0, "x": [0, 13, 20, 21, 24, 36, 82], "us": [0, 1, 18, 19, 20, 22, 23, 24, 41, 43, 44, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 94, 95, 96, 97, 106], "need": [0, 18, 20, 22, 23, 24, 44, 59, 61, 68, 79, 88], "java": [0, 63, 67, 97, 100, 108], "8": [0, 24, 56, 57, 58, 69, 78], "ar": [0, 19, 20, 21, 23, 24, 41, 46, 48, 49, 52, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 78, 80, 81, 88, 90, 91, 94, 95, 96, 98, 106, 109, 111], "pyspark": [0, 41, 43, 44, 46, 50, 51, 54, 56, 57, 58, 59, 61, 66, 68, 69, 71, 74, 77, 78, 79, 80, 82, 86, 88, 89, 91, 94, 98, 106, 107], "6": [0, 10, 24, 33, 90], "7": [0, 2, 25, 82], "recommend": [0, 65], "basic": [0, 22, 24], "knowledg": [0, 65], "framework": 0, "work": [0, 78], "environ": 0, "befor": [0, 24, 44, 48, 63, 67, 78], "pleas": [0, 56, 57, 78, 89], "refer": [0, 1, 48, 61, 66, 88], "document": [0, 10, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 111], "first": [0, 23, 24, 47, 49, 59, 68, 78], "let": [0, 48], "": [0, 18, 20, 22, 24, 43, 44, 46, 50, 61, 63, 65, 67, 68, 78, 94, 97], "make": [0, 48, 61], "sure": [0, 61], "version": [0, 10, 96, 98, 99, 103, 105, 109], "oracl": 0, "openjdk": 0, "0_292": 0, "packag": 0, "pip": 0, "extra": [0, 46], "index": [0, 43, 111], "url": [0, 106], "pypi": 0, "secret": [0, 103], "code": [0, 21, 24, 59, 94, 106, 108], "upgrad": 0, "part": [0, 24, 66], "split": [0, 18, 24, 49, 71, 111], "e": [0, 24, 43, 44, 48, 56, 57, 58, 61, 69, 78, 83, 88, 94, 109], "onli": [0, 20, 21, 24, 41, 48, 51, 78], "avail": [0, 10, 21, 33, 56, 57, 78, 97], "user": [0, 59, 80], "valid": [0, 43, 71, 78, 90], "licens": 0, "did": 0, "receiv": [0, 24], "contact": [0, 106], "u": [0, 20, 24, 78, 109], "href": 0, "mailto": 0, "info": 0, "thi": [0, 1, 9, 10, 18, 19, 20, 21, 22, 23, 24, 32, 33, 43, 44, 47, 48, 49, 50, 54, 56, 57, 58, 59, 61, 63, 67, 68, 78, 88, 89, 90, 106, 108, 109, 113], "simpl": [0, 24], "piec": [0, 49], "import": [0, 10, 33, 43, 44, 46, 50, 51, 54, 56, 57, 58, 59, 61, 66, 68, 69, 71, 74, 77, 78, 79, 80, 82, 86, 88, 89, 94, 97, 108], "sparknlp_jsl": 0, "Or": 0, "sparksess": [0, 41, 56, 57, 58, 91, 98, 106, 107, 111], "modul": [0, 1, 21], "flexibl": [0, 19], "sql": [0, 41, 56, 57, 58, 91, 98, 106, 107], "builder": [0, 96], "appnam": 0, "enterpris": 0, "master": 0, "local": [0, 56, 57, 58, 91], "config": [0, 59], "driver": 0, "memori": [0, 22, 23, 24, 56, 57, 58], "16": 0, "maxresults": 0, "2g": 0, "jar": [0, 41, 111], "nlp_2": 0, "11": [0, 9, 32, 44, 50, 61, 82], "version_publ": 0, "getorcr": 0, "main": [1, 44], "page": [1, 83, 113], "workshop": [1, 24, 66, 78], "hub": [1, 56, 57, 78], "welcom": 1, "python": [1, 19, 20, 21, 24], "contain": [1, 22, 23, 24, 43, 44, 51, 56, 57, 58, 61, 66, 78, 86, 94, 96, 106], "how": [1, 46, 48, 56, 57, 58, 65, 71, 74, 78, 80], "exampl": [1, 10, 19, 24, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 97, 106, 108, 110], "get": [1, 43, 81, 96, 111], "start": [1, 10, 18, 22, 33, 43, 44, 66, 74, 78, 88, 94, 103, 111], "requir": [1, 22, 23, 24, 43, 44, 54, 56, 57, 58, 66, 78], "instal": 1, "session": [1, 15, 16, 38, 39, 41, 111], "from": [1, 9, 10, 18, 20, 22, 23, 24, 32, 33, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 94, 95, 97, 108, 109, 110, 111], "api": 1, "assertionmodel": [2, 25, 43, 44, 46, 94], "seq_max_len": [2, 25], "feat_siz": [2, 10, 25, 33], "n_class": [2, 10, 25, 33], "devic": [2, 25, 106], "cpu": [2, 23, 25], "sourc": [2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "fully_connected_lay": [2, 25], "input_data": [2, 25], "output_dim": [2, 10, 24, 25, 33], "activation_func": [2, 25], "none": [2, 4, 6, 8, 12, 13, 15, 16, 18, 20, 22, 23, 24, 25, 27, 29, 31, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95, 101, 103, 105, 106, 108, 110, 111], "add_bidirectional_lstm": [2, 25], "n_hidden": [2, 25], "30": [2, 25, 82], "num_lay": [2, 25], "add_optim": [2, 25], "trainset": [2, 25], "testset": [2, 25], "epoch": [2, 25, 43, 71, 78], "batch_siz": [2, 4, 15, 17, 18, 22, 23, 24, 25, 27, 38, 40], "64": [2, 10, 25, 33, 50, 74, 77, 78], "learning_r": [2, 4, 9, 25, 27, 32], "01": [2, 15, 25, 38, 44, 61, 82], "dropout": [2, 15, 24, 25, 38, 43, 71, 78], "15": [2, 21, 25, 74, 77, 82], "epoch_acc": [2, 25], "calc_accuraci": [2, 25], "dataset": [2, 15, 17, 25, 38, 40, 43, 44, 78, 79, 91, 94, 99], "calcul": [2, 23, 24, 25, 43, 78, 94], "accuraci": [2, 8, 25, 31, 78], "confusion_matrix": [2, 25], "sess": [2, 25], "persist_graph": [2, 25], "model_loc": [2, 4, 6, 10, 12, 27, 29, 33, 35], "model_filenam": [2, 4, 6, 10, 12, 27, 29, 33, 35], "assertion_model": [3, 11, 26, 34], "model_id": [4, 27], "get_graph": [4, 27], "is_built": [4, 27], "export_graph": [4, 6, 27, 29], "generate_batch": [4, 27], "input": [4, 9, 18, 19, 20, 22, 23, 24, 27, 32, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "output": [4, 9, 13, 18, 20, 22, 23, 24, 27, 32, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 97, 111], "fit_dataset": [4, 27], "training_set": [4, 27], "validation_set": [4, 27], "training_batch_s": [4, 27], "validation_batch_s": [4, 27], "epochs_n": [4, 8, 27, 31], "verbos": [4, 6, 27, 29, 43, 78], "true": [4, 6, 10, 15, 19, 22, 23, 24, 27, 29, 33, 38, 41, 48, 49, 54, 56, 57, 58, 59, 61, 65, 66, 71, 78, 82, 88, 94, 96, 97, 100, 106, 108, 111], "progresstrack": [4, 7, 11, 27, 30, 34], "load_graph": [4, 27], "models_dir": [4, 9, 27, 32], "build": [4, 6, 10, 20, 22, 24, 27, 29, 33], "param": [4, 6, 10, 27, 29, 33, 41, 61, 63, 67, 103, 111], "run_test": [4, 6, 27, 29], "build_param": [5, 10, 28, 33], "genericclassifiermodel": [6, 29, 54, 71], "basetfmodel": [7, 11, 30, 34], "build_model": [7, 11, 30, 34], "generic_classifier_model": [7, 11, 30, 34], "set": [7, 11, 24, 30, 34, 41, 42, 43, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 96, 97, 99, 108, 111], "batches_n": [8, 31], "on_training_start": [8, 31], "on_training_end": [8, 31], "on_batch": [8, 31], "loss": [8, 9, 24, 31, 32], "is_valid": [8, 31], "fals": [8, 12, 13, 15, 19, 22, 23, 24, 31, 35, 36, 38, 41, 43, 44, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 102, 103, 106, 108, 111], "on_epoch": [8, 31], "get_report_interv": [8, 31], "print_progress": [8, 31], "end_of_epoch": [8, 31], "model_op": [9, 32], "gener": [9, 10, 32, 33, 41, 48, 71, 78, 106, 108, 111], "enumer": [9, 32, 111], "deriv": [9, 32], "defin": [9, 22, 32, 41, 44, 46, 50, 54, 59, 74, 80, 90], "new": [9, 24, 32, 43, 78, 80, 81, 88, 89, 94, 96, 99, 109], "init": [9, 32], "10": [9, 10, 15, 19, 32, 33, 38, 51, 83, 86, 94, 108], "model_tensor": [9, 32], "100": [9, 10, 15, 32, 33, 38, 71], "acc": [9, 32], "101": [9, 15, 32, 38], "102": [9, 32], "target": [9, 10, 32, 33, 43, 44, 65, 66, 69, 71, 88, 89], "103": [9, 32], "104": [9, 32], "105": [9, 32], "run_typ": [9, 32], "evalu": [9, 32, 43, 78], "predict": [9, 10, 15, 24, 32, 33, 38, 43, 54, 65, 71, 78], "datasets_dir": [9, 32], "logs_dir": [9, 32], "tmp": [9, 10, 32, 33, 91], "genericclassifi": [9, 32], "default_model_node_nam": [9, 32], "except": [10, 33, 78], "wrongtfvers": [10, 33], "common": [10, 33, 43, 46, 50, 51, 54, 59, 61, 66, 68, 69, 71, 74, 77, 78, 80, 82, 86, 88, 89, 94, 97], "base": [10, 20, 22, 24, 33, 43, 44, 46, 48, 50, 51, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 91, 94, 103], "all": [10, 21, 24, 33, 41, 48, 49, 54, 56, 58, 61, 69, 78, 83, 94, 98, 109, 111, 113], "non": [10, 24, 33, 43, 69, 83], "exit": [10, 33], "tensorflowaddonsneed": 10, "tfgraphbuild": [10, 33, 96], "creat": [10, 20, 22, 23, 24, 33, 43, 59, 90], "tensorflow": [10, 21, 23, 33, 43, 56, 57, 58, 71, 78, 88], "graph": [10, 33, 43, 78, 88, 96], "ner_dl": [10, 11, 33, 34, 78], "generic_classifi": [10, 11, 33, 34, 73, 103], "assertion_dl": [10, 11, 33, 34, 43], "relation_extract": [10, 33, 73, 87], "spark": [10, 33, 41, 42, 43, 47, 48, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 80, 81, 82, 83, 88, 89, 90, 91, 95, 97, 98, 100, 103, 106, 107, 108, 111, 113], "nlp": [10, 33, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95, 111, 113], "In": [10, 19, 24, 48, 59, 89], "tf_graph": [10, 33, 108], "get_model": [10, 33], "supports_auto_file_nam": [10, 33], "get_model_filenam": [10, 33], "check_build_param": [10, 33], "get_build_param": [10, 33], "get_build_params_with_default": [10, 33], "get_model_build_param": [10, 33], "get_model_build_param_explan": [10, 33], "genericclassifiertfgraphbuild": [10, 33], "tf": [10, 19, 21, 22, 23, 33, 56, 57, 58], "genericclassifierapproach": [10, 33, 71], "sparknlp": [10, 33, 43, 44, 46, 48, 50, 51, 54, 56, 57, 58, 59, 61, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 91, 94, 97], "datafram": [10, 33, 41, 90, 106, 107, 111], "pd": [10, 33, 41, 111], "read_csv": [10, 33], "petfind": [10, 33], "mini": [10, 33], "csv": [10, 33, 50, 59, 61, 97], "dl_param": [10, 33], "input_dim": [10, 33], "302": [10, 33], "hidden_lay": [10, 33], "300": [10, 33, 88], "200": [10, 24, 33, 88], "hidden_act": [10, 33], "tanh": [10, 20, 24, 33, 96], "hidden_act_l2": [10, 33], "batch_norm": [10, 33], "gc_graph": [10, 33], "auto": [10, 33, 96], "gen_clf": [10, 33, 54, 71], "setlabelcolumn": [10, 33, 54, 71, 78, 88, 96], "setinputcol": [10, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 96, 97, 99], "featur": [10, 24, 33, 44, 71, 97], "setoutputcol": [10, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 97, 99], "setmodelfil": [10, 33, 71, 88], "gcl": [10, 33], "pb": [10, 33, 71, 88], "setepochsnumb": [10, 33, 71, 88], "setbatchs": [10, 33, 43, 71, 78, 88, 89], "setfeaturesc": [10, 33, 71], "zscore": [10, 33, 71], "setfiximbal": [10, 33, 71, 88], "setlearningr": [10, 33, 43, 71, 88], "001": [10, 24, 33, 71, 78, 88], "setoutputlogspath": [10, 33, 43, 71, 78], "log": [10, 33, 43, 44, 71, 78], "setvalidationsplit": [10, 33, 43, 71, 78, 88], "clf_pipelin": [10, 33], "stage": [10, 33, 43, 44, 46, 47, 50, 59, 61, 65, 74, 77, 79, 80, 83, 88, 89, 90, 94], "features_asm": [10, 33, 71], "assertiontfgraphbuild": [10, 33], "assertiondlapproach": [10, 33, 43, 96], "blstm_34_32_30_": [10, 33], "_": [10, 33], "format": [10, 23, 33, 41, 59, 61, 74, 77, 78, 80, 82, 88, 106], "setlabelcol": [10, 33, 43, 44, 71, 94], "label": [10, 33, 41, 43, 44, 52, 54, 56, 57, 58, 61, 71, 74, 77, 78, 80, 81, 88, 89, 91, 93, 94, 96, 100, 104, 111], "chunk": [10, 33, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 59, 61, 65, 66, 68, 69, 74, 77, 79, 80, 82, 86, 88, 89, 90, 91, 94, 95], "128": [10, 12, 24, 33, 35, 43, 56, 57, 58], "setdropout": [10, 33, 43, 71, 78], "setepoch": [10, 33, 43], "setstartcol": [10, 33, 43, 44, 66], "setendcol": [10, 33, 43, 44], "end": [10, 23, 33, 43, 44, 74, 77, 78, 82, 88, 111], "setmaxsentlen": [10, 33, 43], "250": [10, 33, 43, 69], "setenableoutputlog": [10, 33, 43, 78], "training_log": [10, 33], "setgraphfold": [10, 33, 43, 78, 96], "nertfgraphbuild": [10, 33], "medicalnerapproach": [10, 33, 78, 96], "embeddings_dim": [10, 12, 33, 35], "nchar": [10, 12, 15, 33, 35, 38], "83": [10, 33], "ntag": [10, 12, 15, 33, 35, 38], "12": [10, 33], "is_med": [10, 12, 33, 35], "medical_ner_graph": [10, 33], "nertagg": [10, 33, 68, 78, 88, 89], "sentenc": [10, 13, 15, 33, 36, 38, 43, 44, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 65, 68, 69, 74, 77, 78, 79, 80, 81, 83, 86, 89, 90, 91, 93, 94, 95, 108, 111], "token": [10, 33, 41, 42, 43, 44, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 94, 95, 108, 111], "ner": [10, 16, 33, 39, 41, 43, 44, 48, 51, 57, 61, 65, 68, 69, 73, 74, 86, 91, 100, 103, 111], "setmaxepoch": [10, 33, 78], "setrandomse": [10, 33, 78], "setverbos": [10, 33, 43, 78], "setevaluationlogextend": [10, 33, 43, 78], "setincludeconfid": [10, 33, 43, 78], "ner_log": [10, 33], "setenablememoryoptim": [10, 33, 78], "relationextractiontfgraphbuild": [10, 33], "relationextractionapproach": [10, 33, 88, 96], "6000": [10, 33], "relu": [10, 24, 33, 96], "re_with_bn": [10, 33], "re_approach": [10, 33], "rel": [10, 33, 51, 68, 69, 82, 86], "pos_tag": [10, 33, 69, 88, 90, 91], "train_ner_chunk": [10, 33, 88], "depend": [10, 23, 24, 33, 42, 49, 52, 69, 78, 88, 89, 90, 91, 93, 95], "70": [10, 33, 50], "setfroment": [10, 33, 88], "begin1i": [10, 33], "end1i": [10, 33], "label1": [10, 33], "settoent": [10, 33, 88], "begin2i": [10, 33], "end2i": [10, 33], "label2": [10, 33], "tfgraphbuilderfactori": [10, 33], "factori": [10, 33], "differ": [10, 20, 24, 33, 48, 74, 90, 97], "static": [10, 13, 15, 16, 24, 33, 36, 38, 39, 43, 44, 48, 51, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 78, 81, 88, 89, 91, 94, 105, 109], "method": [10, 20, 22, 24, 33, 61, 71, 94, 98, 109, 113], "return": [10, 18, 22, 23, 24, 33, 41, 43, 46, 48, 51, 52, 56, 57, 58, 61, 66, 68, 69, 78, 81, 88, 89, 91, 93, 94, 98, 111], "model_nam": [10, 33, 101], "paramet": [10, 23, 33, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 106, 109, 110], "str": [10, 33, 41, 43, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 80, 81, 83, 88, 89, 90, 91, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111], "want": [10, 33, 42, 43, 49, 51, 59, 61, 65, 83, 86, 95, 106], "dict": [10, 33, 41, 59, 61, 69, 74, 78, 80, 81, 88, 89, 91, 106, 111], "configur": [10, 33], "path": [10, 33, 41, 43, 44, 47, 50, 51, 54, 59, 61, 68, 71, 74, 78, 80, 81, 86, 88, 94, 96, 101, 108, 109, 110, 111], "where": [10, 23, 24, 33, 41, 46, 51, 61, 66, 71, 77, 86, 88, 89, 96, 109], "save": [10, 16, 33, 39, 41, 43, 51, 56, 57, 58, 61, 71, 78, 86, 91, 110], "rb": [10, 33], "file": [10, 21, 33, 41, 43, 59, 61, 71, 74, 78, 96, 106, 109], "put": [10, 19, 33, 49, 65], "filenam": [10, 25, 33], "print_model_param": [10, 33], "allow": [10, 23, 24, 33, 41, 49, 56, 57, 58, 78, 95, 106, 109], "descript": [10, 33, 48, 94, 108], "everi": [10, 19, 33, 78], "create_graph": [11, 14, 34, 37], "dataset_encod": [11, 14, 34, 37], "ner_model": [11, 14, 34, 37, 51, 65, 69, 86], "ner_model_sav": [11, 14, 34, 37], "sentence_group": [11, 14, 34, 37], "tf2contrib": 11, "core_rnn_cel": [11, 21], "fused_rnn_cel": [11, 21], "gru_op": [11, 21], "lstm_op": [11, 21], "rnn": [11, 18, 19, 21, 22, 24], "rnn_cell": [11, 19, 21], "graph_build": [11, 34], "lstm_size": [12, 35], "gpu_devic": [12, 35], "datasetencod": [13, 36], "embeddings_resolv": [13, 36], "tag2id": [13, 36], "piece_tag": [13, 36], "shuffl": [13, 36], "word": [13, 36, 51, 61, 65, 77, 81], "get_char_index": [13, 36], "encod": [13, 16, 36, 39, 81, 88, 89, 90, 91], "nermodel": [15, 38, 43, 46, 77, 78, 80], "dummy_tag": [15, 38], "use_contrib": [15, 38], "use_gpu_devic": [15, 38], "add_bilstm_char_repr": [15, 38], "dim": [15, 24, 38], "25": [15, 38, 61, 94, 108], "hidden": [15, 24, 38, 57, 96], "add_cnn_char_repr": [15, 38], "nfilter": [15, 38], "pad": [15, 38], "add_pretrained_word_embed": [15, 38], "add_context_repr": [15, 38], "hidden_s": [15, 38], "residu": [15, 38], "add_inference_lay": [15, 38], "crf": [15, 38, 78], "predictions_op_nam": [15, 38], "add_training_op": [15, 38], "clip_gradi": [15, 38], "train_op_nam": [15, 38], "num_tru": [15, 38], "arrai": [15, 38, 43, 54, 56, 57, 58, 61, 66, 78, 79, 97], "fill": [15, 18, 24, 38], "l": [15, 38, 61], "val": [15, 38], "get_sentence_length": [15, 38], "batch": [15, 18, 23, 24, 38, 43, 56, 57, 58, 71, 78, 96], "idx": [15, 38], "word_embed": [15, 38, 42, 43, 44, 49, 65, 78, 88, 95], "get_sentence_token_length": [15, 38], "tag_id": [15, 38], "get_word_length": [15, 38], "char_id": [15, 38], "get_char_id": [15, 38], "get_from_batch": [15, 38], "get_tag_id": [15, 38], "get_word_embed": [15, 38], "slice": [15, 17, 38, 40, 51, 68, 69], "init_vari": [15, 38], "epoch_start": [15, 38], "epoch_end": [15, 38], "32": [15, 17, 23, 24, 38, 40, 59, 95], "lr": [15, 38, 78], "po": [15, 38, 42, 49, 50, 78, 88, 95, 100, 108, 111], "65": [15, 38], "measur": [15, 38], "20": [15, 24, 38, 71], "get_softmax": [15, 38], "score": [15, 38, 43, 78, 81, 91], "threshold": [15, 38, 50, 61, 65, 80, 81, 88, 89, 94], "close": [15, 38], "nermodelsav": [16, 39], "embeddings_fil": [16, 39], "restore_tensorflow_st": [16, 39], "export_dir": [16, 39], "save_model": [16, 39], "folder": [16, 39, 43, 56, 57, 58, 71, 78, 89, 91, 96, 109], "sentencegroup": [17, 40], "bucket_length": [17, 40], "get_bucket_id": [17, 40], "length": [17, 22, 23, 40, 43, 44, 56, 57, 58, 61, 65, 74, 96], "implement": [18, 19, 20, 22, 24, 63, 67, 91, 97], "core": 18, "embeddingwrapp": 18, "inputprojectionwrapp": 18, "outputprojectionwrapp": 18, "rnncell": [18, 19, 23, 24], "embedding_class": 18, "embedding_s": 18, "initi": [18, 20, 22, 23, 24, 65, 78], "reus": [18, 20, 22, 24], "oper": [18, 19, 23, 24, 48], "ad": 18, "given": [18, 22, 24, 51, 68, 69, 86, 91], "note": [18, 78], "case": [18, 22, 24, 41, 48, 51, 56, 57, 58, 59, 66, 68, 69, 78, 83, 86, 88, 90], "mai": [18, 22, 24, 59, 66], "effici": [18, 19, 22, 23], "wrapper": [18, 20, 24, 100, 108], "instead": [18, 20, 56, 58], "concaten": [18, 23, 48], "whole": [18, 48], "sequenc": [18, 19, 22, 23, 56, 58, 61, 96], "your": [18, 49, 78, 106], "time": [18, 19, 20, 23, 24, 61, 78], "do": [18, 23, 80], "feed": [18, 56, 58], "properti": [18, 20, 22, 23, 24, 61], "state_s": [18, 20, 22, 23, 24], "size": [18, 20, 22, 23, 24, 43, 56, 57, 58, 71, 78, 96], "state": [18, 20, 22, 23, 24, 57, 78, 106], "repres": [18, 19, 20, 22, 24, 41, 46, 48, 50, 61], "an": [18, 19, 20, 22, 23, 24, 41, 43, 46, 54, 59, 61, 65, 66, 68, 69, 78, 81, 82, 91, 94, 97, 106, 108, 111, 113], "integ": [18, 20, 22, 24, 48, 61, 106], "tensorshap": [18, 20, 22, 24], "tupl": [18, 20, 22, 23, 24], "output_s": [18, 20, 22, 24], "produc": [18, 20, 22, 23, 24, 74], "zero_st": [18, 24], "dtype": [18, 22, 23, 24], "zero": [18, 22, 23, 24, 81, 91], "tensor": [18, 22, 23, 24], "arg": [18, 22, 23, 24], "int": [18, 24, 41, 42, 43, 54, 56, 57, 58, 61, 65, 69, 71, 78, 82, 88, 89, 90, 94, 95, 96, 106, 110], "float": [18, 24, 43, 48, 54, 61, 65, 68, 69, 71, 78, 80, 81, 88, 89, 94, 97], "unit": [18, 22, 24, 83, 88, 89, 96], "type": [18, 22, 23, 24, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 111], "valu": [18, 22, 23, 24, 42, 43, 46, 48, 49, 50, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 78, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 99, 106], "n": [18, 24, 44, 48, 65, 78, 110], "d": [18, 22, 24, 61, 106], "shape": [18, 22, 23, 24], "nest": [18, 23, 24], "list": [18, 20, 22, 23, 24, 41, 43, 44, 46, 50, 54, 56, 57, 58, 61, 69, 74, 78, 79, 80, 81, 88, 90, 91, 94, 95, 96, 106, 107, 111, 113], "same": [18, 23, 24, 41, 48, 61, 74, 80], "each": [18, 22, 23, 24, 41, 43, 44, 48, 54, 61, 68, 71, 74, 78, 91, 111], "call": [18, 20, 22, 24, 65], "run": [18, 22, 23, 24], "num_proj": [18, 24], "activ": [18, 24, 88, 89, 96], "input_s": [18, 22, 23, 24], "project": [18, 24], "directli": 18, "softmax": [18, 94], "construct": [19, 24, 57], "fuse": 19, "fusedrnncel": [19, 22], "abstract": [19, 22, 96, 99], "object": [19, 56, 57, 58, 78, 97, 100, 108], "A": [19, 22, 23, 24, 59, 69, 71, 74, 77, 78, 79, 80, 81, 91, 94, 96, 106], "entir": [19, 22, 56, 58], "expand": 19, "dimens": [19, 22, 24], "effect": 19, "recurr": [19, 22, 23, 24, 74, 77], "network": [19, 22, 23, 24, 78], "unlik": [19, 22], "which": [19, 23, 24, 43, 44, 48, 50, 56, 57, 58, 59, 61, 68, 69, 74, 78, 80, 81, 82, 83, 88, 89, 91, 94, 97, 109], "subclass": [19, 20, 22, 24, 63, 67, 97], "onc": [19, 89], "loop": 19, "insid": 19, "usual": [19, 91], "lead": 19, "much": [19, 22, 71], "complex": 19, "less": [19, 23, 61], "must": [19, 22, 23, 24, 43, 44, 52, 66], "__call__": 19, "signatur": 19, "fusedrnncelladaptor": 19, "use_dynamic_rnn": 19, "adaptor": 19, "timereversedfusedrnn": 19, "revers": 19, "compat": [19, 22, 56, 57, 58, 78, 103], "v1": 19, "nn": [19, 50, 79], "basicrnncel": 19, "fw_lstm": 19, "contrib": [19, 21, 78], "bw_lstm": 19, "fw_out": 19, "fw_state": 19, "bw_out": 19, "bw_state": 19, "block": [20, 22], "gru": [20, 24], "op": [20, 21, 22], "layerrnncel": [20, 22], "grublockcel": 20, "num_unit": [20, 22, 24], "cell_siz": 20, "gru_cel": 20, "deprec": 20, "grublockcellv2": 20, "arxiv": [20, 22, 23, 24], "org": [20, 22, 23, 24, 65], "ab": [20, 22, 23, 24], "1406": [20, 24], "1078": [20, 24], "comput": [20, 23, 24, 48, 68], "forward": [20, 23], "propag": [20, 24], "step": [20, 22, 24, 46], "kernel": 20, "mathemat": 20, "equat": [20, 24], "bias": [20, 22, 24], "b_ru": 20, "constant_initi": 20, "b_c": 20, "x_h_prev": 20, "h_prev": 20, "r_bar": 20, "u_bar": 20, "w_ru": 20, "r": [20, 24, 51, 86], "sigmoid": [20, 96], "h_prevr": 20, "circ": [20, 24], "x_h_prevr": 20, "c_bar": 20, "w_c": [20, 24], "c": [20, 24, 61], "h": [20, 24], "input_shap": [20, 22, 24], "variabl": [20, 22, 24], "layer": [20, 22, 23, 24, 43, 56, 57, 58, 71, 96], "option": [20, 22, 23, 24, 41, 43, 48, 50, 51, 56, 57, 58, 59, 61, 68, 69, 74, 78, 80, 81, 91, 97, 106], "overrid": [20, 22, 24, 78, 94], "thei": [20, 22, 24, 48, 78, 97, 106], "creation": [20, 22, 24], "between": [20, 22, 23, 24, 41, 43, 61, 68, 69, 78, 79, 89, 90, 91, 106], "instanti": [20, 22, 24, 65, 78], "typic": [20, 22, 23, 24], "argument": [20, 22, 24], "instanc": [20, 22, 23, 24, 68, 81, 88, 89], "expect": [20, 22, 24, 82], "one": [20, 22, 23, 24, 41, 42, 43, 56, 58, 68, 69, 71, 74, 80, 83, 99, 106], "per": [20, 22, 23, 24, 43, 44, 49, 56, 58, 65, 71, 78], "temporari": 20, "impl": 20, "scheme": [20, 77, 108], "distribut": [21, 98], "github": [21, 24], "blob": 21, "r1": 21, "origin": [21, 24, 54, 61, 80, 94], "modifi": [21, 74, 77, 80], "chang": [21, 24, 74], "just": [21, 78], "therefor": [21, 24], "function": [21, 94, 96, 113], "enabl": [21, 24, 43, 46, 50, 78], "lstm": [22, 24, 78], "lstmblockcel": 22, "forget_bia": [22, 24], "cell_clip": [22, 24], "use_peephol": [22, 24], "lstm_cell": 22, "1409": 22, "2329": 22, "we": [22, 24, 49, 50, 51, 52, 54, 61, 65, 71, 86, 94], "add": [22, 24, 82, 106], "default": [22, 23, 24, 41, 42, 43, 46, 48, 49, 50, 51, 54, 56, 57, 58, 61, 65, 66, 68, 69, 74, 78, 80, 81, 83, 88, 90, 91, 94, 95, 96, 106, 111], "forget": [22, 24], "gate": [22, 24], "order": [22, 24, 48], "reduc": [22, 24], "scale": [22, 24, 71], "begin": [22, 23, 24, 66, 74, 77, 82, 88, 90, 94], "rnn_cell_impl": [22, 24], "lstmcell": [22, 24], "monolith": 22, "should": [22, 24, 41, 43, 48, 59, 63, 65, 67, 68, 78, 97], "faster": [22, 56, 57, 58], "bia": [22, 24], "matric": [22, 24], "long": [22, 24], "scope": [22, 23, 24, 43], "match": [22, 23, 43, 44, 56, 57, 58, 59, 61, 65, 66, 74, 79], "inputs_shap": [22, 24], "short": [22, 24], "term": [22, 24, 43, 50, 54, 61, 106], "lstmblockwrapp": 22, "trainabl": [22, 24], "kwarg": [22, 24], "helper": [22, 23, 106, 109], "housekeep": 22, "altern": 22, "similar": [22, 24, 61], "_call_cel": 22, "number": [22, 23, 24, 41, 43, 44, 48, 54, 61, 71, 78, 89, 94, 96, 106, 110], "initial_st": 22, "sequence_length": [22, 23], "time_len": 22, "initial_cell_st": 22, "initial_output": 22, "self": [22, 24, 97], "_num_unit": 22, "ha": [22, 23, 24, 43, 46, 48, 50, 54, 59, 66, 68, 78, 88], "heterogen": 22, "specifi": [22, 24, 43, 54, 69, 71, 77, 78, 88, 91], "int32": [22, 23], "int64": [22, 23], "vector": [22, 23, 24, 48, 54, 71, 97], "element": [22, 23], "pair": [22, 24, 41, 46, 50, 74, 77, 80, 88, 89, 90, 91], "final": [22, 23], "cell_stat": 22, "rais": [22, 23, 24, 78], "valueerror": [22, 23, 24], "mismatch": 22, "lstmblockfusedcel": 22, "lstm_fused_cel": 22, "extrem": 22, "singl": [22, 23, 24, 48, 51, 78, 97, 111], "both": [22, 23, 24, 57, 59, 61, 68, 106], "than": [22, 50, 61], "abov": 22, "consist": [22, 24, 48, 61, 91], "stack_bidirectional_rnn": 23, "cells_fw": 23, "cells_bw": 23, "initial_states_fw": 23, "initial_states_bw": 23, "bidirect": [23, 24], "neural": [23, 24, 78], "stack": [23, 24], "combin": [23, 24, 68, 90], "backward": 23, "next": [23, 82], "bidirectional_rnn": 23, "doe": [23, 24], "share": [23, 24], "direct": [23, 24, 41, 88, 89, 90], "intermedi": 23, "As": [23, 24], "describ": [23, 24, 48], "1303": 23, "5778": 23, "appropri": [23, 41], "cell_fw": 23, "correspond": [23, 48, 61, 65, 68], "either": [23, 44, 48, 66, 77], "actual": 23, "variablescop": 23, "subgraph": 23, "output_state_fw": 23, "output_state_bw": 23, "depth": [23, 24], "output_states_fw": 23, "output_states_bw": 23, "typeerror": 23, "cell_bw": 23, "empti": [23, 66, 69, 71, 94], "stack_bidirectional_dynamic_rnn": 23, "parallel_iter": 23, "time_major": 23, "swap_memori": 23, "dynam": [23, 24], "max_tim": 23, "iter": [23, 44, 54], "parallel": 23, "those": 23, "ani": [23, 42, 74, 78, 95], "tempor": 23, "trade": 23, "off": [23, 43, 78], "space": [23, 24], "take": [23, 56, 58, 61, 68, 71, 97], "while": [23, 94], "smaller": 23, "longer": [23, 74], "bit": [23, 56, 58], "becaus": [23, 63, 67], "avoid": [23, 24], "transpos": 23, "howev": [23, 50], "most": [23, 48, 78], "major": 23, "so": [23, 24], "accept": 23, "emit": 23, "form": [23, 54, 65, 69], "transpar": 23, "swap": 23, "infer": [23, 24, 78, 91], "back": 23, "prop": 23, "gpu": [23, 103], "would": 23, "fit": [23, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 78, 79, 81, 82, 83, 86, 88, 89, 90, 91, 94, 96, 97], "veri": [23, 61], "minim": [23, 81, 88, 89, 91], "perform": [23, 24, 78], "penalti": 23, "layers_output": 23, "coupledinputforgetgatelstmcel": 24, "proj_clip": 24, "num_unit_shard": 24, "num_proj_shard": 24, "state_is_tupl": 24, "math_op": 24, "layer_norm": 24, "norm_gain": 24, "norm_shift": 24, "peephol": 24, "pdf": 24, "semanticscholar": 24, "1154": 24, "0131eae85b2e11d53df7f1360eeb6476e7f4": 24, "felix": 24, "ger": 24, "jurgen": 24, "schmidhub": 24, "fred": 24, "cummin": 24, "learn": [24, 43, 71, 78], "continu": [24, 94], "iet": 24, "850": 24, "855": 24, "1999": 24, "research": 24, "googl": 24, "pub": 24, "archiv": 24, "43905": 24, "hasim": 24, "sak": 24, "andrew": 24, "senior": 24, "francois": 24, "beaufai": 24, "architectur": [24, 78], "larg": [24, 56, 57, 58, 78], "acoust": 24, "interspeech": 24, "2014": 24, "coupl": 24, "1503": 24, "04069": 24, "greff": 24, "et": 24, "al": 24, "search": [24, 43, 65, 78, 94], "odyssei": 24, "peep": 24, "hole": 24, "connect": 24, "1607": 24, "06450": 24, "jimmi": 24, "lei": 24, "ba": 24, "jami": 24, "ryan": 24, "kiro": 24, "geoffrei": 24, "hinton": 24, "appli": [24, 61, 83], "intern": [24, 103], "nonlinear": 24, "2d": 24, "column": [24, 42, 43, 44, 49, 51, 54, 59, 61, 66, 71, 74, 77, 78, 83, 86, 88, 94, 96, 97, 106, 107], "c_state": 24, "m_state": 24, "after": [24, 44, 54, 56, 57, 58, 82], "read": [24, 59, 61, 68, 74, 78, 80, 81, 97], "when": [24, 43, 49, 59, 61, 74, 78, 79, 94], "previou": 24, "wa": [24, 41, 43, 49, 50, 51, 69, 86], "here": 24, "otherwis": [24, 48, 51, 56, 57, 58, 61, 66, 68, 69, 81, 91, 97], "cannot": 24, "via": [24, 46, 50], "timefreqlstmcel": 24, "feature_s": 24, "frequency_skip": 24, "tara": 24, "sainath": 24, "bo": 24, "li": 24, "pattern": [24, 41, 61, 79, 83, 111], "v": [24, 43, 44, 74, 78], "convolut": 24, "lvcsr": 24, "task": [24, 41, 56, 57, 58, 91, 111], "submit": 24, "2016": 24, "clip": 24, "gridlstmcel": 24, "share_time_frequency_weight": 24, "num_frequency_block": 24, "start_freqindex_list": 24, "end_freqindex_list": 24, "couple_input_forget_g": 24, "grid": 24, "nal": 24, "kalchbrenn": 24, "ivo": 24, "danihelka": 24, "alex": 24, "grave": 24, "proc": 24, "iclr": 24, "1507": 24, "01526": 24, "shared_weight": 24, "state_tuple_typ": 24, "flag": [24, 71], "_state_is_tupl": 24, "bidirectionalgridlstmcel": 24, "backward_slice_offset": 24, "gridlstm": 24, "henc": 24, "doesn": 24, "affect": [24, 48], "real": [24, 78], "process": [24, 43, 46, 50, 56, 57, 58, 66, 71, 74, 78, 80, 88, 89, 90, 94], "onlin": 24, "system": [24, 106], "current": [24, 56, 57, 58, 82, 91, 96, 98], "two": [24, 48, 61, 74], "attentioncellwrapp": 24, "attn_length": 24, "attn_siz": 24, "attn_vec_s": 24, "attent": 24, "1601": 24, "06733": 24, "lstma": 24, "highwaywrapp": 24, "couple_carry_transform_g": 24, "carry_bias_init": 24, "highwai": 24, "k": [24, 54, 94], "srivastava": 24, "j": 24, "preprint": 24, "1505": 24, "00387": 24, "2015": 24, "layernormbasiclstmcel": 24, "dropout_keep_prob": 24, "dropout_prob_se": 24, "1603": 24, "05118": 24, "without": [24, 61], "stanislau": 24, "semeniuta": 24, "aliaksei": 24, "severyn": 24, "erhardt": 24, "barth": 24, "nascel": 24, "use_bia": 24, "na": 24, "paper": 24, "1611": 24, "01578": 24, "barret": 24, "zoph": 24, "quoc": 24, "le": 24, "reinforc": 24, "2017": 24, "ugrnncel": 24, "updat": [24, 109], "ugrnn": 24, "compromis": 24, "vanilla": 24, "There": 24, "determin": [24, 48, 88, 90, 91], "whether": [24, 43, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 74, 78, 80, 83, 88, 90, 91, 94], "integr": 24, "instantan": 24, "idea": 24, "feedforward": 24, "09913": 24, "jasmin": 24, "collin": 24, "jascha": 24, "sohl": 24, "dickstein": 24, "david": 24, "sussillo": 24, "capac": 24, "num": 24, "new_output": 24, "ident": 24, "new_stat": 24, "intersectionrnncel": 24, "num_in_proj": 24, "y_activ": 24, "nn_op": 24, "intersect": 24, "well": 24, "design": 24, "improv": [24, 78, 91], "flow": 24, "through": [24, 59], "dimension": 24, "y": 24, "To": [24, 46, 50, 56, 57, 58, 88], "achiev": [24, 48, 78], "subsequ": 24, "deepli": 24, "best": [24, 78], "new_i": 24, "equal": [24, 68, 69], "compiledwrapp": 24, "compile_st": 24, "wrap": [24, 63, 67, 97], "execut": [24, 61], "xla": 24, "jit": 24, "phasedlstmcel": 24, "leak": 24, "ratio_on": 24, "trainable_ratio_on": 24, "period_init_min": 24, "period_init_max": 24, "1000": [24, 94], "phase": 24, "1610": 24, "09513v1": 24, "float32": 24, "float64": 24, "store": 24, "second": [24, 47], "features_s": 24, "lstmstatetupl": 24, "timestep": 24, "convlstmcel": 24, "conv_ndim": 24, "output_channel": 24, "kernel_shap": 24, "skip_connect": 24, "conv_lstm_cel": 24, "1506": 24, "04214v1": 24, "logic": 24, "live": [24, 81, 106], "addit": [24, 44, 61, 78, 94], "keyword": [24, 42, 49, 73, 95], "conv1dlstmcel": 24, "conv_1d_lstm_cel": 24, "1d": 24, "conv2dlstmcel": 24, "conv_2d_lstm_cel": 24, "conv3dlstmcel": 24, "conv_3d_lstm_cel": 24, "3d": 24, "glstmcell": 24, "number_of_group": 24, "group": [24, 49, 79], "g": [24, 43, 44, 48, 56, 57, 58, 69, 78, 83, 88, 94], "1703": 24, "10722": 24, "kuchaiev": 24, "b": [24, 43, 56, 57, 58, 74, 77, 78, 79, 80, 81, 88], "ginsburg": 24, "trick": 24, "brief": 24, "sub": 24, "evenli": 24, "fed": 24, "num_input": 24, "known": [24, 79], "divis": 24, "innermost": 24, "incompat": 24, "layernormlstmcel": 24, "srucel": 24, "sru": 24, "fast": 24, "cnn": [24, 78], "cf": 24, "1709": 24, "02755": 24, "variat": 24, "character": 24, "simplifi": 24, "consecut": 24, "tradition": 24, "multipli": 24, "matrix": 24, "w_hh": 24, "being": [24, 61, 78, 95], "ensu": 24, "flavor": 24, "replac": [24, 59, 61, 74, 80], "multipl": [24, 42, 69, 91], "h_": 24, "pointwis": 24, "result": [24, 43, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 74, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 91, 97], "gain": 24, "boolean": [24, 48, 49, 61, 88, 90, 96], "exist": [24, 94, 109], "alreadi": [24, 54, 78, 94], "error": 24, "string": [24, 65, 66, 79, 83, 96], "mistak": 24, "weightnormlstmcel": 24, "norm": 24, "adapt": 24, "1602": 24, "07868": 24, "tim": 24, "saliman": 24, "diederik": 24, "p": [24, 43, 51, 78, 80, 83], "kingma": 24, "reparameter": 24, "acceler": 24, "deep": [24, 43], "indrnncel": 24, "independ": 24, "indrnn": 24, "1803": 24, "04831": 24, "mean": [24, 59, 68, 69, 78, 82], "act": 24, "w": 24, "indygrucel": 24, "kernel_initi": 24, "bias_initi": 24, "grucel": 24, "u_r": 24, "u_z": 24, "5": [24, 50, 51, 59, 61, 65, 68, 69, 74, 77, 78, 83, 89, 108], "respect": 24, "diagon": 24, "hadamard": 24, "product": 24, "r_j": 24, "sigmaleft": 24, "mathbf": 24, "w_rmathbf": 24, "_j": 24, "u_rcirc": 24, "_jright": 24, "z_j": 24, "w_zmathbf": 24, "u_zcirc": 24, "tild": 24, "phileft": 24, "denot": 24, "indygru": 24, "node": 24, "see": [24, 46, 56, 57, 58, 66, 78, 82, 88, 89], "its": [24, 69], "own": [24, 78, 106], "oppos": 24, "nunit": 24, "indylstmcel": 24, "indylstm": 24, "basiclstmcel": 24, "u_f": 24, "u_i": 24, "u_o": 24, "u_c": 24, "regular": [24, 41, 44, 46, 50, 61, 96, 111], "f_t": 24, "sigma_gleft": 24, "w_f": 24, "x_t": 24, "b_fright": 24, "i_t": 24, "w_i": 24, "b_iright": 24, "o_t": 24, "w_o": 24, "b_oright": 24, "c_t": 24, "c_": 24, "sigma_cleft": 24, "b_cright": 24, "baselin": 24, "detail": 24, "analysi": 24, "1903": 24, "08023": 24, "ntmcontrollerst": 24, "ntmcell": 24, "control": [24, 41, 43, 46], "memory_s": 24, "memory_vector_dim": 24, "read_head_num": 24, "write_head_num": 24, "shift_rang": 24, "clip_valu": 24, "ture": 24, "machin": 24, "1807": 24, "08518": 24, "mark": [24, 43, 44, 48], "collier": 24, "joeran": 24, "beel": 24, "turn": 24, "snowkylin": 24, "ntm": 24, "cours": 24, "1410": 24, "5401": 24, "wayn": 24, "prev_stat": 24, "minimalrnncel": 24, "glorot_uniform": 24, "ones": [24, 78], "minimalrnn": 24, "1806": 24, "05394v2": 24, "minmin": 24, "chen": 24, "jeffrei": 24, "pennington": 24, "samuel": 24, "schoenholz": 24, "isometri": 24, "field": [24, 47, 49, 59, 74, 82, 95, 97], "theori": 24, "signal": 24, "icml": 24, "2018": [24, 82], "sum": 24, "cfncell": 24, "chao": 24, "openreview": 24, "net": [24, 44], "id": [24, 41, 47, 66, 106, 111], "s1dizvclg": 24, "thoma": 24, "laurent": 24, "jame": 24, "von": 24, "brecht": 24, "cfn": 24, "goe": 24, "contract": 24, "map": [24, 51, 59, 61, 69, 78, 80, 86, 88, 89, 94, 106], "linear": [24, 56, 57, 58, 96], "decoupl": 24, "tf_graph_1x": [33, 108], "manipul": 41, "json": [41, 51, 59, 86, 108, 111], "export": [41, 108, 111], "layout": 41, "get_assertion_data": 41, "input_json_path": [41, 111], "assertion_label": [41, 108, 111], "relevant_ner_label": 41, "ground_truth": [41, 111], "bool": [41, 43, 51, 56, 58, 59, 61, 65, 66, 71, 74, 78, 80, 83, 86, 90, 94, 106, 111], "unannotated_label": 41, "regex_pattern": [41, 111], "unannotated_label_strategi": 41, "unannotated_label_strategy_dict": 41, "excluded_task_id": [41, 111], "excluded_task_titl": [41, 111], "panda": 41, "relev": [41, 48], "assign": 41, "select": [41, 43, 46, 48, 49, 51, 52, 56, 57, 58, 61, 74, 81, 82, 86, 88, 89, 94, 106, 111], "ground": [41, 111], "truth": [41, 111], "complet": [41, 111], "latest": [41, 111], "regex": [41, 42, 46, 47, 49, 50, 59, 61, 79, 83, 95, 111], "strategi": 41, "occurr": 41, "unannot": 41, "count": 41, "sampl": [41, 110], "fraction": 41, "absolut": 41, "dictionari": [41, 44, 49, 51, 59, 61, 69, 74, 80, 81, 86, 88, 89, 91, 95], "entity_label": [41, 61], "sample_weight_or_count": 41, "max": [41, 43, 44, 56, 57, 58], "exclud": [41, 44, 78, 111], "titl": [41, 111], "rtype": [41, 111], "get_relation_extraction_data": 41, "negative_rel": 41, "relation_pair": 41, "negative_relation_strategi": 41, "negative_relation_strategy_dict": 41, "were": [41, 78, 111], "plausibl": 41, "separ": [41, 46, 48, 50, 61, 88, 90], "possibl": [41, 42, 43, 46, 49, 50, 59, 71, 74, 95, 96], "neg": [41, 43], "entity1": [41, 88, 89], "entity2": [41, 88, 89], "get_conll_data": 41, "output_nam": 41, "save_dir": 41, "exported_conl": 41, "excluded_label": [41, 108, 111], "io": 41, "conll": [41, 78, 111], "directori": 41, "irrelev": [41, 111], "annotationmerg": 42, "classnam": [42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95], "java_model": [42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95], "merg": [42, 54, 73, 77, 80, 93, 103], "inputtyp": [42, 49, 95], "wordpiec": [42, 49, 95], "sentence_embed": [42, 49, 65, 68, 69, 94, 95], "categori": [42, 49, 54, 56, 58, 71, 88, 89, 91, 95, 104], "sentiment": [42, 49, 95], "named_ent": [42, 49, 57, 77, 78, 79, 80, 81, 95], "labeled_depend": [42, 49, 51, 86, 95], "languag": [42, 48, 49, 51, 56, 57, 58, 61, 66, 68, 69, 81, 91, 95, 101, 105, 108], "doc": [42, 94], "test_data": [42, 47, 95], "createdatafram": [42, 43, 47, 48, 50, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 80, 81, 82, 83, 88, 89, 91, 95], "todf": [42, 43, 47, 48, 50, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 80, 81, 82, 83, 88, 89, 90, 91, 95], "document1": 42, "documentassembl": [42, 43, 44, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 94, 95], "document2": 42, "setinputtyp": [42, 95], "all_doc": 42, "setstag": [42, 48, 49, 51, 54, 56, 57, 58, 66, 68, 69, 71, 78, 81, 86, 91, 95, 97], "lp": 42, "lightpipelin": [42, 111], "fullannot": 42, "replic": 42, "23": [42, 47], "filter": [42, 46, 49, 50, 52, 80, 90, 95], "algorithm": [43, 44, 54], "assertionlogregmodel": [43, 44], "obtain": [43, 44, 91], "present": [43, 46, 74, 77, 80, 94], "absent": [43, 46, 108], "hypothet": [43, 46], "condit": 43, "associated_with_other_person": 43, "etc": [43, 94], "startcol": [43, 44, 66], "endcol": [43, 44], "olumn": 43, "batchsiz": [43, 56, 57, 58, 71, 78, 89], "optim": [43, 71, 78], "learningr": [43, 71], "rate": [43, 71, 78], "maxsentlen": 43, "graphfold": [43, 78, 96], "extern": [43, 74, 78, 80, 96], "graphfil": [43, 78, 96], "configprotobyt": [43, 56, 57, 58, 78], "configproto": [43, 56, 57, 58, 78], "serial": [43, 56, 57, 58, 78], "byte": [43, 56, 57, 58, 78], "config_proto": 43, "serializetostr": 43, "validationsplit": [43, 71, 78], "choos": [43, 78], "proport": [43, 78], "against": [43, 48, 78], "evaluationlogextend": [43, 78], "mode": [43, 61, 71, 100, 106], "eval": [43, 103], "testdataset": [43, 78], "statist": [43, 78], "dure": [43, 65, 78, 106], "includeconfid": [43, 78], "confid": [43, 46, 50, 51, 78, 80, 81, 86, 91, 94], "metadata": [43, 47, 48, 49, 59, 65, 74, 77, 78, 81, 82, 88, 89, 90, 91, 95], "enableoutputlog": [43, 78], "outputlogspath": [43, 71, 78], "level": [43, 46, 48, 59, 78], "scopewindow": 43, "window": [43, 78], "express": [43, 46, 50, 61], "ml": [43, 44, 46, 50, 51, 54, 56, 57, 58, 59, 61, 66, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 94], "document_assembl": [43, 44, 47, 54, 79, 81, 82], "sentence_detector": [43, 44, 47, 51, 69, 79, 81, 86], "sentencedetector": [43, 44, 46, 47, 48, 49, 50, 51, 59, 61, 65, 68, 69, 74, 77, 78, 79, 80, 81, 86, 90, 91, 94, 95], "wordembeddingsmodel": [43, 44, 48, 51, 61, 65, 68, 69, 74, 77, 78, 79, 80, 86, 88, 89, 90, 91], "pretrain": [43, 44, 48, 50, 51, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 94, 95, 103, 109], "embeddings_clin": [43, 44, 48, 51, 61, 69, 74, 77, 79, 80, 86, 88, 89, 90, 91], "en": [43, 44, 48, 51, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 94], "setcasesensit": [43, 44, 54, 56, 57, 58, 59, 79, 89, 94, 95], "chunker": [43, 44, 73, 79, 103], "setchunkcol": [43, 44, 66, 79], "012": 43, "015": 43, "setscopewindow": 43, "assertionpipelin": [43, 44, 46, 94], "srt": [43, 96], "setgraphfil": [43, 78, 96], "happen": [43, 78], "setconfigprotobyt": [43, 56, 57, 58, 78], "row": [43, 49], "lamda": [43, 44, 71], "extend": [43, 66, 78], "settestdataset": [43, 78], "read_a": [43, 50, 59, 61, 74, 78, 80], "reada": [43, 50, 59, 61, 74, 78, 80], "waht": 43, "left": [43, 88, 89, 90], "right": [43, 48, 68, 88, 89, 90], "offset": 43, "assertiondlmodel": [43, 46], "dl": [43, 73], "approach": [43, 51, 86], "targetnerlabel": [43, 44], "tag": [43, 46, 50, 61, 77, 78, 79, 80], "fever": [43, 46], "sore": [43, 46], "throat": [43, 46], "show": [43, 46, 48, 49, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 69, 74, 77, 81, 83, 86, 88, 89, 90, 91, 108], "stomach": [43, 46, 50], "pain": [43, 46, 50], "she": 43, "maintain": 43, "epidur": [43, 46], "pca": [43, 46], "medicalnermodel": [43, 48, 51, 61, 69, 74, 77, 78, 79, 80, 86, 88, 89, 90, 91], "ner_clin": [43, 78, 91], "nerconvert": [43, 46, 48, 61, 65, 68, 74, 77, 80, 88, 89, 90, 91], "ner_chunk": [43, 46, 48, 51, 61, 65, 68, 69, 73, 76, 77, 80, 82, 86, 88, 89, 90, 91], "clinicalassert": [43, 46], "selectexpr": [43, 46, 48, 50, 51, 59, 65, 66, 68, 69, 74, 77, 81, 82, 83, 88, 89, 90, 91], "truncat": [43, 46, 48, 50, 51, 56, 57, 58, 59, 61, 66, 68, 69, 81, 83, 86, 88, 89, 90, 91], "lang": [43, 44, 48, 51, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 78, 81, 88, 89, 91, 94, 105], "remote_loc": [43, 44, 48, 51, 54, 56, 57, 58, 61, 65, 68, 69, 71, 74, 78, 81, 88, 89, 91, 94, 105], "assertionlogregapproach": 44, "regress": [44, 54, 56, 58], "done": [44, 78], "maxit": [44, 54], "regparam": 44, "enetparam": 44, "elast": 44, "beforeparam": 44, "context": [44, 48, 68, 73, 103], "afterparam": 44, "externalfeatur": 44, "nercol": 44, "Then": [44, 65, 78], "setreg": 44, "setbefor": 44, "setaft": 44, "13": [44, 61, 83], "setmaxit": [44, 54], "setenet": 44, "enet": 44, "setnercol": 44, "settargetnerlabel": 44, "logreg": [44, 54, 73], "assertionlogreg": 44, "famili": [44, 94], "logarithm": [44, 54], "assertionpretrain": 44, "assertiondl": [45, 73], "assertion_dl_reg": [45, 73], "assertionfilter": 46, "come": [46, 48, 50, 74, 94], "white": [46, 50], "criteria": [46, 50, 74], "isin": [46, 50], "whitelist": [46, 50, 80], "rest": [46, 50, 74, 80], "ignor": [46, 50, 56, 57, 58, 61, 74, 80], "what": [46, 50, 52, 74, 81, 88, 94, 98, 109], "entitiesconfid": [46, 50], "remov": [46, 48, 83], "setcriteria": [46, 50], "setwhitelist": [46, 50, 65, 80], "chunksfilt": 46, "setregex": [46, 50], "llist": [46, 50], "dash": [46, 50, 88, 90], "chunkconvert": 47, "convert": [47, 66, 80, 83, 95], "regexmatch": [47, 49, 59, 95], "my": [47, 81], "rule": [47, 59], "ceremoni": 47, "regex_match": 47, "setexternalrul": [47, 49, 95], "src": [47, 49, 78, 95, 108], "resourc": [47, 48, 49, 51, 56, 57, 58, 68, 69, 74, 78, 80, 81, 91, 95, 97, 108], "matcher": [47, 95], "txt": [47, 49, 61, 95, 108], "delimit": [47, 74], "outdf": 47, "col": [47, 50, 59, 65, 94], "31": 47, "71": 47, "80": 47, "chunkkeyphraseextract": 48, "keyphras": 48, "kei": [48, 49, 51, 81, 86, 91, 95, 106], "phrase": [48, 79], "compar": 48, "broader": 48, "belong": 48, "candid": [48, 65], "variou": 48, "wai": 48, "ngramgener": 48, "textmatch": 48, "latter": 48, "topn": [48, 65], "selectmostdiffer": 48, "find": [48, 59, 68, 91, 98], "them": [48, 56, 57, 58, 68, 69, 71, 89, 90], "other": [48, 69, 74, 106], "diverg": 48, "maxim": [48, 69, 88], "margin": 48, "mmr": 48, "conjunct": 48, "aim": 48, "goal": 48, "documentlevelprocess": 48, "particular": [48, 91, 94], "concatenatesent": 48, "ner_tagg": [48, 91], "ner_jsl_slim": 48, "ner_tag": [48, 88, 89, 90, 91], "ner_convert": [48, 51, 65, 69, 86, 91], "key_phrase_extractor": 48, "settopn": 48, "setdocumentlevelprocess": 48, "setdiverg": 48, "ner_chunk_key_phras": 48, "her": [48, 68, 81], "becom": [48, 68], "last": [48, 68, 94], "year": [48, 61, 68, 74, 77, 80, 82], "he": [48, 68], "complain": [48, 68], "swell": [48, 68], "hi": [48, 68, 81], "forearm": [48, 68], "explod": [48, 50, 51, 59, 65, 68, 69, 74, 77, 81, 83, 88, 89, 90, 91], "AS": [48, 51, 68, 69, 81], "key_phras": 48, "documentsimilar": 48, "mmrscore": 48, "gestat": 48, "mellitu": 48, "28": 48, "old": [48, 61, 74, 77, 78, 80, 88, 89], "7391447825527298": 48, "4366776288430703": 48, "7323921930094919": 48, "44348688715422274": 48, "13577881610104517": 48, "085800103824974": 48, "droppunctu": 48, "interv": 48, "setselectmostdiffer": 48, "constraint": 48, "paramt": 48, "sens": 48, "setconcatenatesent": 48, "averag": [48, 56, 58, 68, 69], "setdroppunctu": 48, "punctuat": 48, "sbert_jsl_medium_uncas": 48, "download": [48, 51, 56, 57, 58, 68, 69, 81, 91, 109, 110], "load": [48, 51, 56, 57, 58, 59, 61, 68, 69, 71, 78, 81, 86, 91], "sent_small_bert_l2_768": [48, 68, 69], "remot": [48, 51, 56, 57, 58, 68, 69, 81, 91], "Will": [48, 51, 56, 57, 58, 68, 69, 81, 91], "repositori": [48, 51, 56, 57, 58, 68, 69, 81, 91], "bertsentenceembed": [48, 68, 69, 94, 95], "restor": [48, 51, 56, 57, 58, 68, 69, 78, 81, 91], "chunksentencesplitt": 49, "documento": 49, "header": [49, 97], "title_regex": 49, "paragraph": 49, "groupbysent": 49, "insertchunk": 49, "defaultent": 49, "setgroupbysent": 49, "assum": [49, 69], "detector": [49, 111], "setinsertchunk": 49, "insert": 49, "setdefaultent": 49, "chunkfiltererapproach": 50, "confidencethreshold": 50, "lower": [50, 51, 66, 78, 83, 86], "past": 50, "histori": 50, "gastroenter": 50, "docassembl": 50, "postagg": [50, 88, 89], "perceptronmodel": [50, 69, 88, 89, 90, 91], "setregexpars": [50, 79], "chunkerfilt": 50, "17": [50, 74, 77], "22": [50, 51, 86], "36": 50, "42": 50, "53": 50, "81": [50, 90], "110": [50, 74, 77], "now": 50, "care": 50, "118": 50, "132": 50, "chunksfilterapproach": 50, "blacklist": [50, 61, 74, 80], "filtervalu": 50, "entitiesconfidenceresourc": 50, "setblacklist": [50, 61, 74, 80], "setfilterent": 50, "setentitiesconfidenceresourc": 50, "chunkfilter": 50, "chunkmapperapproach": [51, 86], "mapper": [51, 86], "jsondictionari": [51, 86], "chunkmappermodel": [51, 86], "label_depend": [51, 52, 86, 93], "mappinmg": [51, 86], "go": [51, 86], "lowercas": [51, 66, 83, 86], "decid": [51, 86], "ner_posology_larg": [51, 69, 86], "nerconverterintern": [51, 69, 80, 86], "chunkermapperapproach": [51, 86], "setdictionari": [51, 59, 86], "home": [51, 86, 101], "mappings2": [51, 86], "setrel": [51, 86], "action": [51, 86], "sampledata": [51, 69, 86], "warfarina": [51, 86], "lusa": [51, 86], "amlodipin": [51, 86], "mg": [51, 69, 86], "35": [51, 86, 90], "analges": [51, 86], "56995": [51, 86], "all_rel": [51, 86], "antipyret": [51, 86], "41": [51, 86, 90], "9989": [51, 86], "55": [51, 86], "56": [51, 86], "9123": [51, 86], "allowmultitokenchunk": 51, "multivaluesrel": 51, "bow": [51, 65], "setlowercas": [51, 66, 83], "lc": [51, 86], "setallowmultitokenchunk": 51, "mc": 51, "skyp": 51, "multitoken": 51, "send": 51, "multi": [51, 56, 57, 58], "setmultivaluesrel": 51, "drug_chunk_embed": [51, 69], "drug_chunk": [51, 69], "drug_embed": [51, 69], "cach": [51, 69, 74, 94, 97, 109], "chunkmapperfilter": 52, "kind": 52, "setreturncriteria": 52, "fail": [52, 66, 97], "success": 52, "chunkmapperfilterermodel": 52, "returncriteria": 52, "rc": 52, "assertion_filter": [53, 73], "chunk_convert": [53, 73], "chunk_key_phrase_extract": [53, 73], "chunk_sentence_splitt": [53, 73], "chunker_filter": [53, 73], "chunkmapp": [53, 73], "chunkmapper_filter": [53, 73], "documentlogregclassifierapproach": 54, "classifi": [54, 71, 89], "labelcol": [54, 94], "maximum": [54, 78, 89, 90, 96], "tol": 54, "converg": 54, "toler": 54, "fitintercept": 54, "intercept": 54, "vectorizationmodelpath": 54, "been": 54, "classificationmodelpath": 54, "could": [54, 59, 65], "like": [54, 59, 61], "stopwords_clean": 54, "stopwordsclean": 54, "cleantoken": 54, "stemmer": 54, "stem": [54, 88, 89, 90], "clf_model": [54, 71], "settol": 54, "dist": [54, 94], "setfitintercept": 54, "setvectorizationmodelpath": 54, "setclassificationmodelpath": 54, "setlabel": 54, "documentlogregclassifiermodel": 54, "mergechunk": 54, "vectorizationmodel": 54, "classificationmodel": 54, "setmergechunk": 54, "setvectorizationmodel": 54, "pipelinemodel": [54, 78], "setclassificationmodel": 54, "document_log_classifi": [55, 73], "medical_bert_for_sequence_classif": [55, 73], "medical_bert_for_token_classifi": [55, 73], "medical_distilbert_for_sequence_classif": [55, 73], "medicalbertforsequenceclassif": [56, 58, 91], "medicalbertfortokenclassifi": [56, 57, 58], "head": [56, 57, 58, 78], "pool": [56, 58], "companion": [56, 57, 58, 78, 100, 108], "huggingfac": [56, 57, 58], "casesensit": [56, 57, 58, 59], "maxsentencelength": [56, 57, 58], "tokenclassifi": [56, 57], "felt": [56, 58], "drowsi": [56, 58], "had": [56, 58, 65], "blur": [56, 58], "vision": [56, 58], "aspirin": [56, 58, 83], "coalescesent": [56, 58], "setmaxsentencelength": [56, 57, 58, 95], "getclass": [56, 57, 58, 81, 88, 89], "setcoalescesent": [56, 58], "inputcol": [56, 58, 96, 97, 99], "probabl": [56, 58], "due": [56, 58], "limit": [56, 58, 65], "almost": [56, 58], "512": [56, 58], "help": [56, 58, 61, 106], "loadsavedmodel": [56, 57, 58, 78, 89, 91], "spark_sess": [56, 57, 58, 78, 89, 91], "loadsavedmodelopensourc": [56, 57, 58], "bertfortokenclassifierpath": [56, 57, 58], "tfmodelpath": [56, 57, 58], "bertfortokenclassifi": [56, 57, 58], "taht": [56, 57, 58], "bert_sequence_classifier_ad": 56, "bert_token_classifier_ner_bionlp": 57, "erba": 57, "ir": 57, "myb": 57, "viru": 57, "erythroid": 57, "infect": 57, "bone": 57, "marrow": 57, "blastoderm": 57, "cultur": 57, "tissue_structur": 57, "bert_base_token_classifier_conll03": 57, "medicaldistilbertforsequenceclassif": 58, "distilbert": 58, "sequenceclassifi": 58, "distilbertforsequenceclassif": 58, "destilbertfortokenclassifierpath": 58, "distilbert_sequence_classifier_ad": 58, "contextualparserapproach": 59, "setjsonpath": 59, "along": 59, "addition": [59, 78], "unifi": 59, "represent": [59, 68, 80], "jsonpath": 59, "prefixandsuffixmatch": 59, "prefix": [59, 65, 80], "suffix": 59, "hit": 59, "tsv": 59, "parser": 59, "liver": 59, "metastas": 59, "pt1bn0m0": 59, "t5": 59, "primari": 59, "colon": 59, "contextualpars": [59, 74], "regex_token": 59, "39": 59, "confidencevalu": 59, "00": 59, "49": 59, "148": 59, "156": 59, "ct4bcn2m1": 59, "189": 59, "194": 59, "n3m1": 59, "316": 59, "323": 59, "optionalcontextrul": 59, "shortestcontextmatch": 59, "setprefixandsuffixmatch": 59, "locat": [59, 65, 106, 109], "setoptionalcontextrul": 59, "regardless": 59, "setshortestcontextmatch": 59, "stop": [59, 78, 105], "found": [59, 66], "contextualparsermodel": 59, "mycontextualparsermodel": 59, "contextual_pars": [60, 73], "deidentificationmodel": 61, "obfusc": [61, 106], "mask": 61, "person": [61, 65, 106], "These": [61, 91], "setregexpatternsdictionari": 61, "line": [61, 111], "regexpatternsdictionari": 61, "ictionari": 61, "some": [61, 69, 78], "protect": 61, "anonim": 61, "obfuscated": 61, "dateformat": [61, 106], "visibl": 61, "obfuscatereffil": [61, 106], "reffileformat": 61, "refsep": 61, "sep": [61, 108], "charact": [61, 65, 83], "reffil": 61, "datetag": 61, "dai": [61, 82, 106], "displac": [61, 106], "random": [61, 78, 106], "60": [61, 106], "datetoyear": 61, "minyear": 61, "minimum": [61, 78], "automat": [61, 91], "pars": 61, "consistentobfusc": 61, "levenshtein": [61, 65], "distanc": [61, 65, 69, 88, 89, 90, 94], "sameentitythreshold": 61, "consid": [61, 65, 69, 89, 90, 94], "appear": [61, 68], "9": [61, 88], "obfuscaterefsourc": [61, 106], "doesnt": 61, "tha": 61, "obfuscatorreffil": 61, "faker": 61, "randomli": [61, 106], "regexoverrid": 61, "priorit": 61, "seed": [61, 78, 106], "With": 61, "repli": 61, "ouptut": 61, "ignoreregex": 61, "israndomdatedisplac": 61, "deidentificationparam": 61, "mappingscolumn": 61, "fake": 61, "returnentitymap": 61, "ssn": 61, "passport": 61, "dln": 61, "npi": 61, "c_card": 61, "iban": 61, "dea": 61, "maskingpolici": 61, "polici": [61, 83], "same_length_char": 61, "compos": 61, "asterisk": 61, "surround": [61, 68], "squar": 61, "bracket": 61, "total": 61, "smith": 61, "char": [61, 78], "jo": 61, "fixed_length_char": 61, "fix": 61, "setuseabbrevi": 61, "clinical_sensitive_ent": 61, "ner_deid_enrich": 61, "ner_con": 61, "dei": 61, "custom": [61, 80, 88, 89, 111], "dic_regex_patterns_main_categori": 61, "setobfuscatereffil": 61, "obfuscate_fixed_ent": 61, "setreffileformat": 61, "setrefsep": 61, "setmod": 61, "setdateformat": 61, "mm": [61, 82, 97, 106], "dd": [61, 82, 97, 106], "yy": 61, "yyyi": [61, 82, 97, 106], "setobfuscated": 61, "setdatetag": 61, "setdai": 61, "setobfuscaterefsourc": 61, "7194334": 61, "93": 61, "pcp": 61, "oliveira": 61, "record": [61, 106], "2079": 61, "09": 61, "01010101": 61, "18": 61, "dr": 61, "gregori": 61, "hous": 61, "14": 61, "fixedmasklength": 61, "getblacklist": 61, "setlanguag": 61, "english": 61, "spanish": 61, "wher": 61, "m": [61, 106], "setmaskingpolici": 61, "setfixedmasklength": 61, "f": [61, 77, 97, 99, 101], "auxiliari": [61, 94], "resolv": [61, 93, 94], "setdatetoyear": 61, "setminyear": 61, "setconsistentobfusc": 61, "setsameentitythreshold": 61, "setregexoverrid": 61, "setignoreregex": 61, "setse": 61, "setisrandomdatedisplac": 61, "setmappingscolumn": 61, "setreturnentitymap": 61, "regexent": 61, "keep": [61, 71, 94], "regexpatterndictionari": 61, "deidentify_larg": 61, "getregexent": 61, "deidentif": [62, 73, 106], "reidentif": [62, 73], "py": [63, 67, 97], "scala": [63, 67, 97], "inherit": [63, 67], "mix": [63, 67], "ins": [63, 67], "uid": [63, 67], "redeideintif": 63, "ner_disambigu": [64, 73], "nerdisambigu": 65, "interest": 65, "compani": [65, 106], "uniqu": 65, "kb": 65, "ne": 65, "mention": 65, "surfac": 65, "embeddingtypeparam": 65, "numfirstchar": 65, "tokensearch": 65, "narrowwithapproximatematch": 65, "narrow": 65, "levenstein": 65, "levenshteindistancethresholdparam": 65, "nearmatchinggapparam": 65, "trim": 65, "len": 65, "nearmatchinggap": 65, "predictionslimit": 65, "amount": 65, "s3knowledgebasenam": 65, "s3": 65, "contest": 65, "donald": 65, "trump": 65, "who": 65, "later": 65, "defeat": 65, "christina": 65, "aguilera": 65, "sentenceembed": 65, "nerdlmodel": [65, 68, 78], "sets3knowledgebasenam": 65, "setnumfirstchar": 65, "nlppipelin": 65, "wikipedia": 65, "curid": 65, "4848272": 65, "31698421": 65, "55907961": 65, "144171": 65, "6636454": 65, "setembeddingtyp": 65, "settokensearch": 65, "setnarrowwithapproximatematch": 65, "setlevenshteindistancethresholdparam": 65, "setnearmatchinggapparam": 65, "setpredictionlimit": 65, "nerdisambiguatormodel": 65, "disambiguator_p": 65, "doc2chunk": 66, "doc2chunkintern": 66, "chunkcol": 66, "within": 66, "stringtyp": 66, "arraytyp": 66, "setisarrai": 66, "startcolbytokenindex": 66, "prepend": 66, "whitespac": 66, "isarrai": 66, "failonmiss": 66, "job": 66, "chunk2doc": [66, 95], "chunkassembl": 66, "open": 66, "advanc": 66, "natur": [66, 91], "annotatortyp": 66, "setparam": [66, 97], "setstartcolbytokenindex": 66, "setfailonmiss": 66, "miss": 66, "averageembed": [67, 68], "bertsentencechunkembed": 68, "account": 68, "numer": [68, 97], "chunkweight": 68, "comparison": 68, "prerequisit": [68, 78], "medicalnerdlmodel": [68, 78], "sbluebert_base_uncased_mli": 68, "sentence_chunk_embed": 68, "31995273": 68, "04710883": 68, "28973156": 68, "1294758": 68, "12481072": 68, "027161136": 68, "24613449": 68, "0949309": 68, "1825444": 68, "2252143": 68, "45139068": 68, "12400375": 68, "0075617577": 68, "90806055": 68, "12871636": 68, "setchunkweight": 68, "shortcut": [68, 81], "entitychunkembed": 69, "targetent": [69, 104], "entityweight": [69, 104], "maxsyntacticdist": [69, 88, 90], "syntact": [69, 88, 89, 90], "pos_clin": [69, 88, 89, 90, 91], "dependency_pars": [69, 90, 91], "dependencyparsermodel": [69, 88, 89, 90, 91], "dependency_conllu": [69, 88, 89, 90, 91], "sbiobert_base_cased_mli": 69, "setmaxsyntacticdist": [69, 88, 89, 90, 91], "settargetent": 69, "setentityweight": 69, "parient": 69, "metformin": 69, "125": 69, "coumadin": 69, "pill": 69, "paracetamol": [69, 91], "sparkcontextfortest": 69, "267413": 69, "07614058": 69, "5620966": 69, "83838946": 69, "8911504": 69, "22319649": 69, "07094894": 69, "6885556": 69, "79176235": 69, "82672405": 69, "10939768": 69, "29242": 69, "3574444": 69, "3981813": 69, "79609615": 69, "By": 69, "weigh": 69, "notat": 69, "target_ent": 69, "related_ent": 69, "insensit": 69, "related1": 69, "related2": 69, "average_embed": [70, 73], "bert_sentence_embed": [70, 73], "entity_chunk_embed": [70, 73], "classif": [71, 73, 103], "feature_vector": [71, 97], "featuresassembl": [71, 97], "labelcolumn": [71, 78, 96], "epochsn": 71, "proce": 71, "dropou": 71, "lay": 71, "validaiton": 71, "modelfil": 71, "fiximbal": 71, "indic": [71, 74], "whenther": 71, "balanc": 71, "trainig": 71, "featuresc": 71, "minmax": 71, "feature_1": 71, "feature_2": 71, "feature_n": 71, "graph_fil": [71, 88], "purpos": 71, "label_column": 71, "drouptup": 71, "validation_split": 71, "mode_fil": 71, "fix_imbal": 71, "feature_sc": 71, "output_logs_path": 71, "deid": [73, 103], "disambigu": [73, 103], "chunker_merg": [73, 75], "iob_tagg": [73, 76], "medical_n": [73, 76], "ner_converter_intern": [73, 76], "zero_shot_n": [73, 76], "date_norm": [73, 84], "drug_norm": [73, 84], "qa": [73, 103], "qa_ner_gener": [73, 85], "re": [73, 103], "relation_extraction_dl": [73, 87], "relation_ner_chunk_filt": [73, 87], "zero_shot_relation_extract": [73, 87], "resolut": [73, 103], "resolver_merg": [73, 92], "sentence_entity_resolv": [73, 92], "annotation_merg": [73, 103], "doc2_chunk_intern": [73, 103], "router": [73, 103], "tf_graph_build": [73, 103], "chunkmergeapproach": 74, "merger": 74, "made": 74, "accord": 74, "certain": [74, 79], "decis": 74, "highest": [74, 78], "kept": 74, "setreplacedictresourc": [74, 80], "mergeoverlap": 74, "overlap": 74, "falsepositivesresourc": 74, "posit": [74, 80], "replacedictresourc": [74, 80], "chunkpreced": 74, "preced": 74, "proccess": [74, 80], "63": [74, 77, 80], "man": [74, 77, 80], "hospit": [74, 77, 80, 106], "emb": [74, 77, 80], "ner_jsl": [74, 77, 80], "jsl_ner": 74, "jsl_ner_chunk": 74, "ner_bionlp": 74, "bionlp_ner": 74, "bionlp_ner_chunk": 74, "merged_chunk": 74, "19": [74, 77], "72": [74, 77], "98": [74, 77], "107": [74, 77], "cellul": [74, 77], "diagnosi": [74, 77], "119": [74, 77], "pneumonia": [74, 77], "setmergeoverlap": 74, "setfalsepositivesresourc": 74, "setchunkpreced": 74, "chunkmergemodel": [74, 80], "chunkmergeraproach": 74, "falseposit": 74, "replacedict": [74, 80], "iobtagg": 77, "iob": [77, 78, 80, 108], "bioe": 77, "ner_label": [77, 108], "iobtaggermodel": 77, "setschem": 77, "bilstm": 78, "art": 78, "2003": 78, "chosen": 78, "bertembed": [78, 94], "usag": 78, "minepoch": 78, "maxepoch": 78, "randomse": 78, "decai": 78, "coeffici": 78, "rage": 78, "005": 78, "usecontrib": 78, "Not": 78, "might": 78, "slightli": 78, "includeallconfidencescor": 78, "stdout": 78, "enablememoryoptim": 78, "slow": 78, "down": 78, "nerdlapproach": [78, 96], "trainingdata": 78, "readdataset": [78, 108], "conll2003": 78, "eng": [78, 108], "logprefix": 78, "usebestmodel": 78, "pretrainedmodelpath": [78, 94], "overrideexistingtag": 78, "tagsmap": 78, "earlystoppingcriterion": 78, "earlystoppingpati": 78, "ff": 78, "setusecontrib": 78, "setlr": 78, "setpo": 78, "displai": 78, "parquet": 78, "setincludeallconfidencescor": 78, "setusebestmodel": 78, "metric": 78, "monitor": 78, "macro": 78, "f1": 78, "precend": 78, "across": 78, "setlogprefix": 78, "setpretrainedmodelpath": [78, 94], "point": [78, 94], "setoverrideexistingtag": 78, "settagsmap": 78, "setearlystoppingcriterion": 78, "criterion": 78, "earli": 78, "setearlystoppingpati": 78, "patienc": 78, "termin": 78, "wordembed": 78, "glove_100d": 78, "inferencebatchs": 78, "labelcas": 78, "upper": [78, 88, 89, 90], "offici": 78, "ekeu": 78, "baghdad": 78, "trainingclassdistribut": 78, "setinferencebatchs": 78, "setlabelcas": 78, "gettrainingclassdistribut": 78, "ner_model_path": 78, "nerchunk": [79, 88, 89], "neighbor": 79, "issu": 79, "dt": 79, "jj": 79, "ner_radiologi": 79, "imagingfind": 79, "bodypart": 79, "regexpars": 79, "iob2": 80, "friendli": 80, "associ": 80, "preserveposit": 80, "preserv": 80, "greedymod": 80, "contigu": 80, "replacelabel": 80, "setpreserveposit": 80, "setgreedymod": 80, "setthreshold": [80, 94], "setreplacelabel": 80, "nerconverterinternalmodel": 80, "zeroshotnermodel": 81, "shot": [81, 91], "robertaforquestionansw": 81, "entitydefinit": 81, "definit": [81, 91], "question": 81, "citi": [81, 95, 106], "town": 81, "predictionthreshold": [81, 88, 89, 91], "01f": 81, "ignoreent": 81, "discard": 81, "setentitydefinit": 81, "clara": 81, "york": 81, "hellen": 81, "pari": 81, "5328949": 81, "9360068": 81, "83294415": 81, "45366877": 81, "setpredictionthreshold": [81, 88, 89], "getentitydefinit": 81, "zero_shot_ner_roberta": 81, "roberta_base_qa_squad2": 81, "datenorm": 82, "els": 82, "anchordateyear": 82, "anchor": 82, "tomorrow": 82, "2021": 82, "anchordatemonth": 82, "month": 82, "januari": 82, "anchordatedai": 82, "chunksdf": 82, "df": [82, 100, 106, 107, 108], "aa": 82, "map_annotations_col": 82, "lambda": 82, "chunk_dat": 82, "setanchordateyear": 82, "2000": 82, "setanchordatemonth": 82, "setanchordatedai": 82, "fri": 82, "21": 82, "nov": 82, "1997": 82, "week": 82, "08": 82, "02": 82, "mondai": 82, "todai": 82, "drugnorm": 83, "raw": 83, "scrape": 83, "web": 83, "xml": 83, "dirti": 83, "sodium": 83, "chlorid": 83, "potassium": 83, "13bag": 83, "interferon": 83, "alfa": 83, "2b": 83, "million": 83, "injec": 83, "meq": 83, "oral": 83, "sol": 83, "document_norm": 83, "trainingpipelin": 83, "normalized_text": [83, 94], "bag": 83, "10000000": 83, "unt": 83, "inject": 83, "solut": 83, "setpolici": 83, "nerqagenar": 86, "questionpronoun": 86, "questionmark": 86, "entities1": 86, "entities2": 86, "setquestionmark": 86, "setentities1": 86, "e1": 86, "setentities2": 86, "e2": 86, "setquestionpronoun": 86, "relationextractionmodel": [88, 89], "fromentitybegincol": 88, "fromentityendcol": 88, "fromentitylabelcol": 88, "toentitybegincol": 88, "toentityendcol": 88, "toentitylabelcol": 88, "embedd": [88, 89], "postag": [88, 89], "ner_events_clin": [88, 89], "depencypars": [88, 89], "relations_t": 88, "target_rel": 88, "05": 88, "from_begin": 88, "from_end": 88, "from_label": 88, "to_begin": 88, "to_end": 88, "to_label": 88, "traindata": [88, 89], "customlabel": [88, 89, 104], "begin_col": 88, "end_col": 88, "label_col": [88, 100], "setcustomlabel": [88, 89], "relationpair": [88, 89, 90], "biomark": 88, "relativedai": 88, "relationpairscasesensit": [88, 90], "external_body_part_or_region": [88, 89, 90], "internal_organ_or_compon": [88, 89, 90], "re_model": [88, 89, 91], "re_bodypart_direct": 88, "setrelationpair": [88, 89, 90, 91], "mri": [88, 89, 90, 91], "demonstr": [88, 89, 90], "infarct": [88, 89, 90], "brain": [88, 89, 90], "cerebellum": [88, 89, 90], "basil": [88, 89, 90], "ganglia": [88, 89, 90], "chunk1": [88, 89], "chunk2": [88, 89], "setrelationpairscasesensit": [88, 90], "posologyremodel": 88, "relationextractiondlmodel": [89, 90], "contrast": 89, "re_ner_chunk_filt": [89, 90, 91], "renerchunksfilt": [89, 90, 91], "re_ner_chunk": [89, 90, 91], "redl_bodypart_direction_biobert": 89, "further": 90, "especi": 90, "doclevelrel": 90, "words_embedd": [90, 91], "pos_tagg": [90, 91], "clinical_ner_tagg": 90, "jsl_ner_wip_greedy_clin": 90, "trained_pipelin": 90, "cre": 90, "re_chunk": 90, "paired_to": 90, "59": 90, "setdoclevelrel": [90, 91], "zeroshotrelationextractionmodel": 91, "binari": 91, "util": [91, 103, 106], "nli": 91, "statement": 91, "regard": 91, "relationship": 91, "append": 91, "relationalcategori": [91, 104], "hypothesi": 91, "templat": 91, "cure": 91, "problem": 91, "5f": 91, "multilabel": 91, "categor": 91, "spark_sbert_zero_shot": 91, "setrelationalcategori": 91, "reveal": 91, "setmultilabel": 91, "allevi": 91, "headach": 91, "sick": 91, "cancer": 91, "9760039": 91, "98819494": 91, "9929625": 91, "xxx": 91, "resolvermerg": 93, "enit": 93, "sentenceresolverparam": 94, "interfac": 94, "distancefunct": 94, "wmd": 94, "euclidean": 94, "cosin": 94, "neighbour": 94, "knn": 94, "queri": 94, "confidencefunct": 94, "invers": 94, "missasempti": 94, "unmatch": 94, "setdistancefunct": 94, "setneighbour": 94, "thre": 94, "setconfidencefunct": 94, "setmissasempti": 94, "sentenceentityresolverapproach": 94, "thiu": 94, "sentenceentityresolvermodel": 94, "ontologi": 94, "curat": 94, "rxnorm": 94, "snome": 94, "normalizedcol": 94, "overrideexistingcod": 94, "returncosinedist": 94, "aux_label_col": 94, "useauxlabel": 94, "auxlabel": 94, "dropcodeslist": 94, "omit": 94, "sent_biobert_pubmed_base_cas": 94, "snomedtrainingpipelin": 94, "snomedtrainingmodel": 94, "snomeddata": 94, "bertextractor": 94, "bert_embed": 94, "setnormalizedcol": 94, "snomed_cod": 94, "euclidian": 94, "snomedmodel": 94, "setuseauxlabel": 94, "setauxlabelcol": 94, "setextractcosinedist": 94, "setoverrideexistingcod": 94, "setdropcodeslist": 94, "searchtre": 94, "tree": 94, "setsearchtre": 94, "filterfieldsel": 95, "metadatafield": 95, "rules2": 95, "setstrategi": 95, "match_al": 95, "doc_chunk": 95, "sent_small_bert_l2_128": 95, "router_name_embed": 95, "setmetadatafield": 95, "setfilterfieldsel": 95, "names_embed": 95, "router_city_embed": 95, "cities_embed": 95, "router_nam": 95, "names_chunk": 95, "medicalgraphbuildermodel": 96, "estim": 96, "modelnam": 96, "hiddenunitsnumb": 96, "hiddenlay": 96, "maxsequencelength": 96, "hiddenact": 96, "hiddenactl2": 96, "hiddenweightsl2": 96, "batchnorm": 96, "ismed": 96, "sethiddenact": 96, "gethiddenact": 96, "sethiddenactl2": 96, "l2": 96, "gethiddenactl2": 96, "sethiddenweightsl2": 96, "gethiddenweightsl2": 96, "setbatchnorm": 96, "getbatchnorm": 96, "setismed": 96, "medic": [96, 106, 110], "medicalneraprroach": 96, "getismed": 96, "sethiddenlay": 96, "gethiddenlay": 96, "hiudden": 96, "setmaxsequencelength": 96, "getmaxsequencelength": 96, "sethiddenunitsnumb": 96, "gethiddenunitsnumb": 96, "setmodelnam": 96, "getmodelnam": 96, "getlabelcolumn": 96, "getinputcol": 96, "getgraphfold": 96, "greaph": 96, "getgraphfil": 96, "collect": 97, "anyth": 97, "cast": 97, "tri": 97, "timestampformat": 97, "hh": 97, "ss": 97, "zz": 97, "test_jsl": 97, "relfeatur": 97, "withcolumn": 97, "array_column": 97, "words_in_ent1": 97, "words_in_ent2": 97, "features_asm1": 97, "words_between": 97, "features_t": 97, "__data": 97, "ensur": 97, "_java_obj": 97, "outputcol": [97, 99], "findvers": 98, "privat": 98, "showvers": 98, "print": 98, "customtransform": 99, "anoth": 99, "norvigspellevalu": 100, "test_fil": 100, "ground_truth_fil": 100, "computeaccuracyannot": 100, "train_fil": 100, "computeaccuracymodel": 100, "symspellevalu": 100, "nerdlevalu": 100, "tag_level": 100, "nerdlmetr": 100, "full_chunk": 100, "computemetricsfromdf": 100, "prediction_col": 100, "drop_o": 100, "case_sensit": [100, 108], "nercrfevalu": 100, "posevalu": 100, "get_bucket": 101, "aws_access_key_id": 101, "aws_secret_access_kei": 101, "read_metadata": 101, "bucket": 101, "metadata_path": 101, "extract_model": 101, "item": [101, 111], "retrieve_spark_vers": 101, "get_kei": 101, "get_possibles_model": 101, "metadata_dict": 101, "get_millisecond": 101, "download_and_extract_model": 101, "cache_fold": [101, 109], "freeze_model": 101, "models_fil": 101, "cache_pretrain": 101, "profil": 102, "code_arrai": 102, "sex": 102, "elig": 102, "cna": 102, "orec": 102, "medicaid": 102, "profilev23": 102, "profilev22": 102, "alab_util": [103, 112], "alab": [103, 111], "custom_transform": 103, "freez": 103, "structured_deidentif": 103, "text_to_documents_column": 103, "updatemodel": 103, "version_regex": 103, "size_regex": 103, "m1": 103, "public": 103, "get_credenti": 103, "pub_vers": 103, "library_set": 103, "printprogress": 105, "internalresourcedownload": 105, "downloadmodel": 105, "reader": [105, 108], "j_dwn": 105, "internalspythonresourcedownload": 105, "showprivatemodel": 105, "showprivatepipelin": 105, "showuncategorizedresourc": 105, "showavailableannot": 105, "returnprivatemodel": 105, "returnprivatepipelin": 105, "tabular": 106, "structureddeidentif": 106, "columnsse": 106, "userandomdatedisplac": 106, "countri": 106, "street": 106, "zip": 106, "usernam": 106, "fax": 106, "internet": 106, "profess": 106, "opf": 106, "doctor": 106, "bioid": 106, "screen": 106, "protein": 106, "interact": 106, "occur": 106, "someth": 106, "someon": 106, "healthplan": 106, "medicalrecord": 106, "obfuscatecolumn": 106, "texttodocumentscolumn": 107, "todocumentscolumn": 107, "annotationtooljsonread": 108, "pipeline_model": 108, "cleanup_mod": 108, "disabl": 108, "split_char": 108, "context_char": 108, "min_chars_tol": 108, "align_chars_tol": 108, "merge_overlap": 108, "sddlpath": 108, "aspres": 108, "rdr": 108, "anc": 108, "corpu": 108, "small": 108, "json_path": 108, "assertion_df": 108, "generateassertiontrainset": 108, "sentencecol": 108, "assertioncol": 108, "generateconl": 108, "taskcolumn": 108, "task_id": 108, "tokencol": 108, "nerlabel": 108, "generateplainassertiontrainset": 108, "codiespread": 108, "readdatasettaskx": 108, "textfold": 108, "cantemistread": 108, "readdatasettaskn": 108, "synonymaugmentationuml": 108, "umls_path": 108, "code_col": 108, "description_col": 108, "augmentcsv": 108, "corpus_csv_path": 108, "ner_pipelin": 108, "do_product": 108, "augmentation_mod": 108, "plain_text": 108, "synonym_sourc": 108, "uml": 108, "regex_pars": 108, "euclidean_distance_threshold": 108, "cosine_distance_threshold": 108, "synonym_limit": 108, "casing_funct": 108, "augmentdatafram": 108, "corpus_df": 108, "updatecachemodel": 109, "refresh": 109, "hdf": 109, "date_cutoff": 109, "sinc": 109, "get_mt_sampl": 110, "medical_speci": 110, "transcrib": 110, "transcript": 110, "report": 110, "mtsampl": 110, "One": 110, "special": 110, "allergy_immunologi": 110, "autopsi": 110, "bariatr": 110, "cardiovascular_pulmonari": 110, "chiropract": 110, "consult_history_and_phi": 110, "cosmetic_plastic_surgeri": 110, "dentistri": 110, "dermatologi": 110, "diets_and_nutrit": 110, "discharge_summari": 110, "emergency_room_report": 110, "endocrinologi": 110, "ent_otolaryngologi": 110, "gastroenterologi": 110, "general_medicin": 110, "hematology_oncologi": 110, "hospice_palliative_car": 110, "im": 110, "lab_medicine_pathologi": 110, "letter": 110, "nephrologi": 110, "neurologi": 110, "neurosurgeri": 110, "obstetrics_gynecologi": 110, "office_not": 110, "ophthalmologi": 110, "orthoped": 110, "pain_manag": 110, "pediatrics_neonat": 110, "physical_medicine_rehab": 110, "podiatri": 110, "psychiatry_psychologi": 110, "radiologi": 110, "rheumatologi": 110, "sleep_medicin": 110, "soap_chart_progress_not": 110, "speech_languag": 110, "surgeri": 110, "urologi": 110, "scrap": 110, "get_nlp_token_pipelin": 111, "assembl": 111, "get_nlp_regex_token_pipelin": 111, "get_sentence_pipelin": 111, "get_rel_df": 111, "get_ner_df": 111, "get_ner_sentence_bord": 111, "border": 111, "get_nlp_pos_pipelin": 111, "tagger": 111, "get_nlp_regex_pos_pipelin": 111, "get_single_task_conl": 111, "pos_pipelin": 111, "token_pipelin": 111, "style": 111, "overview": 113, "class": 113}, "objects": {"": [[103, 0, 0, "-", "sparknlp_jsl"]], "sparknlp_jsl": [[11, 0, 0, "-", "_tf_graph_builders"], [34, 0, 0, "-", "_tf_graph_builders_1x"], [41, 0, 0, "-", "alab"], [73, 0, 0, "-", "annotator"], [103, 3, 1, "", "annotators"], [97, 0, 0, "-", "base"], [98, 0, 0, "-", "compatibility"], [99, 0, 0, "-", "custom_transformer"], [100, 0, 0, "-", "eval"], [101, 0, 0, "-", "freeze"], [102, 0, 0, "-", "functions"], [103, 6, 1, "", "get_credentials"], [104, 0, 0, "-", "internal"], [103, 6, 1, "", "library_settings"], [105, 0, 0, "-", "pretrained"], [103, 6, 1, "", "pub_version"], [103, 3, 1, "", "size_regex"], [103, 6, 1, "", "start"], [106, 0, 0, "-", "structured_deidentification"], [107, 0, 0, "-", "text_to_documents_columns"], [108, 0, 0, "-", "training"], [109, 0, 0, "-", "updateModels"], [110, 0, 0, "-", "util"], [112, 0, 0, "-", "utils"], [103, 6, 1, "", "version"], [103, 3, 1, "", "version_regex"]], "sparknlp_jsl._tf_graph_builders": [[3, 0, 0, "-", "assertion_dl"], [7, 0, 0, "-", "generic_classifier"], [10, 0, 0, "-", "graph_builders"], [14, 0, 0, "-", "ner_dl"], [21, 0, 0, "-", "tf2contrib"]], "sparknlp_jsl._tf_graph_builders.assertion_dl": [[2, 0, 0, "-", "assertion_model"]], "sparknlp_jsl._tf_graph_builders.assertion_dl.assertion_model": [[2, 1, 1, "", "AssertionModel"]], "sparknlp_jsl._tf_graph_builders.assertion_dl.assertion_model.AssertionModel": [[2, 2, 1, "", "add_bidirectional_lstm"], [2, 2, 1, "", "add_optimizer"], [2, 2, 1, "", "calc_accuracy"], [2, 2, 1, "", "confusion_matrix"], [2, 2, 1, "", "fully_connected_layer"], [2, 2, 1, "", "persist_graph"], [2, 2, 1, "", "train"]], "sparknlp_jsl._tf_graph_builders.generic_classifier": [[4, 0, 0, "-", "basetfmodel"], [5, 0, 0, "-", "build_model"], [6, 0, 0, "-", "generic_classifier_model"], [8, 0, 0, "-", "progresstracker"], [9, 0, 0, "-", "settings"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.basetfmodel": [[4, 1, 1, "", "BaseTFModel"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.basetfmodel.BaseTFModel": [[4, 2, 1, "", "build"], [4, 2, 1, "", "export_graph"], [4, 2, 1, "", "fit_dataset"], [4, 2, 1, "", "generate_batch"], [4, 2, 1, "", "get_graph"], [4, 2, 1, "", "is_built"], [4, 2, 1, "", "load_graph"], [4, 2, 1, "", "run_tests"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.build_model": [[5, 3, 1, "", "build_params"], [5, 3, 1, "", "model"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.generic_classifier_model": [[6, 1, 1, "", "GenericClassifierModel"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.generic_classifier_model.GenericClassifierModel": [[6, 2, 1, "", "build"], [6, 2, 1, "", "export_graph"], [6, 2, 1, "", "run_tests"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.progresstracker": [[8, 1, 1, "", "ProgressTracker"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.progresstracker.ProgressTracker": [[8, 2, 1, "", "get_report_interval"], [8, 2, 1, "", "on_batch"], [8, 2, 1, "", "on_epoch"], [8, 2, 1, "", "on_training_end"], [8, 2, 1, "", "on_training_start"], [8, 2, 1, "", "print_progress"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings": [[9, 1, 1, "", "MODEL_OPS"], [9, 1, 1, "", "MODEL_TENSORS"], [9, 1, 1, "", "RUN_TYPES"], [9, 1, 1, "", "Settings"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings.MODEL_OPS": [[9, 4, 1, "", "INIT"], [9, 4, 1, "", "TRAIN"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings.MODEL_TENSORS": [[9, 4, 1, "", "ACC"], [9, 4, 1, "", "INPUTS"], [9, 4, 1, "", "LEARNING_RATE"], [9, 4, 1, "", "LOSS"], [9, 4, 1, "", "OUTPUTS"], [9, 4, 1, "", "TARGETS"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings.RUN_TYPES": [[9, 4, 1, "", "EVALUATE"], [9, 4, 1, "", "PREDICT"], [9, 4, 1, "", "TRAIN"]], "sparknlp_jsl._tf_graph_builders.generic_classifier.settings.Settings": [[9, 4, 1, "", "DATASETS_DIR"], [9, 4, 1, "", "DEFAULT_MODEL_NODE_NAMES"], [9, 4, 1, "", "LOGS_DIR"], [9, 4, 1, "", "MODELS_DIR"]], "sparknlp_jsl._tf_graph_builders.graph_builders": [[10, 1, 1, "", "AssertionTFGraphBuilder"], [10, 1, 1, "", "GenericClassifierTFGraphBuilder"], [10, 1, 1, "", "NerTFGraphBuilder"], [10, 1, 1, "", "RelationExtractionTFGraphBuilder"], [10, 1, 1, "", "TFGraphBuilder"], [10, 1, 1, "", "TFGraphBuilderFactory"], [10, 5, 1, "", "TensorflowAddonsNeeded"], [10, 5, 1, "", "WrongTFVersion"]], "sparknlp_jsl._tf_graph_builders.graph_builders.AssertionTFGraphBuilder": [[10, 2, 1, "", "build"], [10, 2, 1, "", "get_model_build_param_explanations"], [10, 2, 1, "", "get_model_build_params"], [10, 2, 1, "", "get_model_filename"], [10, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders.graph_builders.GenericClassifierTFGraphBuilder": [[10, 2, 1, "", "build"], [10, 2, 1, "", "get_model_build_param_explanations"], [10, 2, 1, "", "get_model_build_params"], [10, 2, 1, "", "get_model_filename"], [10, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders.graph_builders.NerTFGraphBuilder": [[10, 2, 1, "", "build"], [10, 2, 1, "", "get_model_build_param_explanations"], [10, 2, 1, "", "get_model_build_params"], [10, 2, 1, "", "get_model_filename"], [10, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders.graph_builders.RelationExtractionTFGraphBuilder": [[10, 2, 1, "", "get_model_filename"]], "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilder": [[10, 2, 1, "", "check_build_params"], [10, 2, 1, "", "get_build_param"], [10, 2, 1, "", "get_build_params"], [10, 2, 1, "", "get_build_params_with_defaults"], [10, 2, 1, "", "get_model_build_param_explanations"], [10, 2, 1, "", "get_model_build_params"], [10, 2, 1, "", "get_model_filename"], [10, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory": [[10, 2, 1, "", "build"], [10, 2, 1, "", "get_models"], [10, 2, 1, "", "print_model_params"]], "sparknlp_jsl._tf_graph_builders.ner_dl": [[12, 0, 0, "-", "create_graph"], [13, 0, 0, "-", "dataset_encoder"], [15, 0, 0, "-", "ner_model"], [16, 0, 0, "-", "ner_model_saver"], [17, 0, 0, "-", "sentence_grouper"]], "sparknlp_jsl._tf_graph_builders.ner_dl.create_graph": [[12, 6, 1, "", "create_graph"]], "sparknlp_jsl._tf_graph_builders.ner_dl.dataset_encoder": [[13, 1, 1, "", "DatasetEncoder"]], "sparknlp_jsl._tf_graph_builders.ner_dl.dataset_encoder.DatasetEncoder": [[13, 2, 1, "", "encode"], [13, 2, 1, "", "get_char_indexes"], [13, 2, 1, "", "normalize"], [13, 2, 1, "", "shuffle"]], "sparknlp_jsl._tf_graph_builders.ner_dl.ner_model": [[15, 1, 1, "", "NerModel"]], "sparknlp_jsl._tf_graph_builders.ner_dl.ner_model.NerModel": [[15, 2, 1, "", "add_bilstm_char_repr"], [15, 2, 1, "", "add_cnn_char_repr"], [15, 2, 1, "", "add_context_repr"], [15, 2, 1, "", "add_inference_layer"], [15, 2, 1, "", "add_pretrained_word_embeddings"], [15, 2, 1, "", "add_training_op"], [15, 2, 1, "", "close"], [15, 2, 1, "", "fill"], [15, 2, 1, "", "get_char_ids"], [15, 2, 1, "", "get_from_batch"], [15, 2, 1, "", "get_sentence_lengths"], [15, 2, 1, "", "get_sentence_token_lengths"], [15, 2, 1, "", "get_softmax"], [15, 2, 1, "", "get_tag_ids"], [15, 2, 1, "", "get_word_embeddings"], [15, 2, 1, "", "get_word_lengths"], [15, 2, 1, "", "init_variables"], [15, 2, 1, "", "measure"], [15, 2, 1, "", "num_trues"], [15, 2, 1, "", "predict"], [15, 2, 1, "", "slice"], [15, 2, 1, "", "train"]], "sparknlp_jsl._tf_graph_builders.ner_dl.ner_model_saver": [[16, 1, 1, "", "NerModelSaver"]], "sparknlp_jsl._tf_graph_builders.ner_dl.ner_model_saver.NerModelSaver": [[16, 2, 1, "", "restore_tensorflow_state"], [16, 2, 1, "", "save"], [16, 2, 1, "", "save_models"]], "sparknlp_jsl._tf_graph_builders.ner_dl.sentence_grouper": [[17, 1, 1, "", "SentenceGrouper"]], "sparknlp_jsl._tf_graph_builders.ner_dl.sentence_grouper.SentenceGrouper": [[17, 2, 1, "", "get_bucket_id"], [17, 2, 1, "", "slice"]], "sparknlp_jsl._tf_graph_builders.tf2contrib": [[18, 0, 0, "-", "core_rnn_cell"], [19, 0, 0, "-", "fused_rnn_cell"], [20, 0, 0, "-", "gru_ops"], [22, 0, 0, "-", "lstm_ops"], [23, 0, 0, "-", "rnn"], [24, 0, 0, "-", "rnn_cell"], [21, 3, 1, "", "tf"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell": [[18, 1, 1, "", "EmbeddingWrapper"], [18, 1, 1, "", "InputProjectionWrapper"], [18, 1, 1, "", "OutputProjectionWrapper"], [18, 3, 1, "", "RNNCell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.EmbeddingWrapper": [[18, 2, 1, "", "call"], [18, 2, 1, "", "output_size"], [18, 2, 1, "", "state_size"], [18, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.InputProjectionWrapper": [[18, 2, 1, "", "call"], [18, 2, 1, "", "output_size"], [18, 2, 1, "", "state_size"], [18, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.core_rnn_cell.OutputProjectionWrapper": [[18, 2, 1, "", "call"], [18, 2, 1, "", "output_size"], [18, 2, 1, "", "state_size"], [18, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.fused_rnn_cell": [[19, 1, 1, "", "FusedRNNCell"], [19, 1, 1, "", "FusedRNNCellAdaptor"], [19, 1, 1, "", "TimeReversedFusedRNN"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops": [[20, 1, 1, "", "GRUBlockCell"], [20, 1, 1, "", "GRUBlockCellV2"], [20, 3, 1, "", "LayerRNNCell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops.GRUBlockCell": [[20, 2, 1, "", "build"], [20, 2, 1, "", "call"], [20, 2, 1, "", "output_size"], [20, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.gru_ops.GRUBlockCellV2": [[20, 2, 1, "", "build"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops": [[22, 1, 1, "", "LSTMBlockCell"], [22, 1, 1, "", "LSTMBlockFusedCell"], [22, 1, 1, "", "LSTMBlockWrapper"], [22, 3, 1, "", "LayerRNNCell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockCell": [[22, 2, 1, "", "build"], [22, 2, 1, "", "call"], [22, 2, 1, "", "output_size"], [22, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockFusedCell": [[22, 2, 1, "", "build"], [22, 2, 1, "", "num_units"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.lstm_ops.LSTMBlockWrapper": [[22, 2, 1, "", "call"], [22, 2, 1, "", "num_units"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn": [[23, 6, 1, "", "stack_bidirectional_dynamic_rnn"], [23, 6, 1, "", "stack_bidirectional_rnn"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell": [[24, 1, 1, "", "AttentionCellWrapper"], [24, 1, 1, "", "BidirectionalGridLSTMCell"], [24, 1, 1, "", "CFNCell"], [24, 1, 1, "", "CompiledWrapper"], [24, 1, 1, "", "Conv1DLSTMCell"], [24, 1, 1, "", "Conv2DLSTMCell"], [24, 1, 1, "", "Conv3DLSTMCell"], [24, 1, 1, "", "ConvLSTMCell"], [24, 1, 1, "", "CoupledInputForgetGateLSTMCell"], [24, 1, 1, "", "GLSTMCell"], [24, 1, 1, "", "GridLSTMCell"], [24, 1, 1, "", "HighwayWrapper"], [24, 1, 1, "", "IndRNNCell"], [24, 1, 1, "", "IndyGRUCell"], [24, 1, 1, "", "IndyLSTMCell"], [24, 1, 1, "", "IntersectionRNNCell"], [24, 1, 1, "", "LayerNormBasicLSTMCell"], [24, 1, 1, "", "LayerNormLSTMCell"], [24, 1, 1, "", "MinimalRNNCell"], [24, 1, 1, "", "NASCell"], [24, 1, 1, "", "NTMCell"], [24, 3, 1, "", "NTMControllerState"], [24, 1, 1, "", "PhasedLSTMCell"], [24, 1, 1, "", "SRUCell"], [24, 1, 1, "", "TimeFreqLSTMCell"], [24, 1, 1, "", "UGRNNCell"], [24, 1, 1, "", "WeightNormLSTMCell"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.AttentionCellWrapper": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.BidirectionalGridLSTMCell": [[24, 2, 1, "", "call"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CFNCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CompiledWrapper": [[24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"], [24, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.ConvLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.CoupledInputForgetGateLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.GLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.GridLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"], [24, 2, 1, "", "state_tuple_type"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.HighwayWrapper": [[24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"], [24, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndRNNCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndyGRUCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IndyLSTMCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.IntersectionRNNCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.LayerNormBasicLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.LayerNormLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.MinimalRNNCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.NASCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.NTMCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"], [24, 2, 1, "", "zero_state"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.PhasedLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.SRUCell": [[24, 2, 1, "", "build"], [24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.TimeFreqLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.UGRNNCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders.tf2contrib.rnn_cell.WeightNormLSTMCell": [[24, 2, 1, "", "call"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "state_size"]], "sparknlp_jsl._tf_graph_builders_1x": [[26, 0, 0, "-", "assertion_dl"], [30, 0, 0, "-", "generic_classifier"], [33, 0, 0, "-", "graph_builders"], [37, 0, 0, "-", "ner_dl"]], "sparknlp_jsl._tf_graph_builders_1x.assertion_dl": [[25, 0, 0, "-", "assertion_model"]], "sparknlp_jsl._tf_graph_builders_1x.assertion_dl.assertion_model": [[25, 1, 1, "", "AssertionModel"]], "sparknlp_jsl._tf_graph_builders_1x.assertion_dl.assertion_model.AssertionModel": [[25, 2, 1, "", "add_bidirectional_lstm"], [25, 2, 1, "", "add_optimizer"], [25, 2, 1, "", "calc_accuracy"], [25, 2, 1, "", "confusion_matrix"], [25, 2, 1, "", "fully_connected_layer"], [25, 2, 1, "", "persist_graph"], [25, 2, 1, "", "train"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier": [[27, 0, 0, "-", "basetfmodel"], [28, 0, 0, "-", "build_model"], [29, 0, 0, "-", "generic_classifier_model"], [31, 0, 0, "-", "progresstracker"], [32, 0, 0, "-", "settings"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.basetfmodel": [[27, 1, 1, "", "BaseTFModel"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.basetfmodel.BaseTFModel": [[27, 2, 1, "", "build"], [27, 2, 1, "", "export_graph"], [27, 2, 1, "", "fit_dataset"], [27, 2, 1, "", "generate_batch"], [27, 2, 1, "", "get_graph"], [27, 2, 1, "", "is_built"], [27, 2, 1, "", "load_graph"], [27, 2, 1, "", "run_tests"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.build_model": [[28, 3, 1, "", "build_params"], [28, 3, 1, "", "model"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.generic_classifier_model": [[29, 1, 1, "", "GenericClassifierModel"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.generic_classifier_model.GenericClassifierModel": [[29, 2, 1, "", "build"], [29, 2, 1, "", "export_graph"], [29, 2, 1, "", "run_tests"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.progresstracker": [[31, 1, 1, "", "ProgressTracker"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.progresstracker.ProgressTracker": [[31, 2, 1, "", "get_report_interval"], [31, 2, 1, "", "on_batch"], [31, 2, 1, "", "on_epoch"], [31, 2, 1, "", "on_training_end"], [31, 2, 1, "", "on_training_start"], [31, 2, 1, "", "print_progress"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings": [[32, 1, 1, "", "MODEL_OPS"], [32, 1, 1, "", "MODEL_TENSORS"], [32, 1, 1, "", "RUN_TYPES"], [32, 1, 1, "", "Settings"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings.MODEL_OPS": [[32, 4, 1, "", "INIT"], [32, 4, 1, "", "TRAIN"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings.MODEL_TENSORS": [[32, 4, 1, "", "ACC"], [32, 4, 1, "", "INPUTS"], [32, 4, 1, "", "LEARNING_RATE"], [32, 4, 1, "", "LOSS"], [32, 4, 1, "", "OUTPUTS"], [32, 4, 1, "", "TARGETS"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings.RUN_TYPES": [[32, 4, 1, "", "EVALUATE"], [32, 4, 1, "", "PREDICT"], [32, 4, 1, "", "TRAIN"]], "sparknlp_jsl._tf_graph_builders_1x.generic_classifier.settings.Settings": [[32, 4, 1, "", "DATASETS_DIR"], [32, 4, 1, "", "DEFAULT_MODEL_NODE_NAMES"], [32, 4, 1, "", "LOGS_DIR"], [32, 4, 1, "", "MODELS_DIR"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders": [[33, 1, 1, "", "AssertionTFGraphBuilder"], [33, 1, 1, "", "GenericClassifierTFGraphBuilder"], [33, 1, 1, "", "NerTFGraphBuilder"], [33, 1, 1, "", "RelationExtractionTFGraphBuilder"], [33, 1, 1, "", "TFGraphBuilder"], [33, 1, 1, "", "TFGraphBuilderFactory"], [33, 5, 1, "", "WrongTFVersion"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.AssertionTFGraphBuilder": [[33, 2, 1, "", "build"], [33, 2, 1, "", "get_model_build_param_explanations"], [33, 2, 1, "", "get_model_build_params"], [33, 2, 1, "", "get_model_filename"], [33, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.GenericClassifierTFGraphBuilder": [[33, 2, 1, "", "build"], [33, 2, 1, "", "get_model_build_param_explanations"], [33, 2, 1, "", "get_model_build_params"], [33, 2, 1, "", "get_model_filename"], [33, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.NerTFGraphBuilder": [[33, 2, 1, "", "build"], [33, 2, 1, "", "get_model_build_param_explanations"], [33, 2, 1, "", "get_model_build_params"], [33, 2, 1, "", "get_model_filename"], [33, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.RelationExtractionTFGraphBuilder": [[33, 2, 1, "", "get_model_filename"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.TFGraphBuilder": [[33, 2, 1, "", "check_build_params"], [33, 2, 1, "", "get_build_param"], [33, 2, 1, "", "get_build_params"], [33, 2, 1, "", "get_build_params_with_defaults"], [33, 2, 1, "", "get_model_build_param_explanations"], [33, 2, 1, "", "get_model_build_params"], [33, 2, 1, "", "get_model_filename"], [33, 2, 1, "", "supports_auto_file_name"]], "sparknlp_jsl._tf_graph_builders_1x.graph_builders.TFGraphBuilderFactory": [[33, 2, 1, "", "build"], [33, 2, 1, "", "get_models"], [33, 2, 1, "", "print_model_params"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl": [[35, 0, 0, "-", "create_graph"], [36, 0, 0, "-", "dataset_encoder"], [38, 0, 0, "-", "ner_model"], [39, 0, 0, "-", "ner_model_saver"], [40, 0, 0, "-", "sentence_grouper"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.create_graph": [[35, 6, 1, "", "create_graph"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.dataset_encoder": [[36, 1, 1, "", "DatasetEncoder"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.dataset_encoder.DatasetEncoder": [[36, 2, 1, "", "encode"], [36, 2, 1, "", "get_char_indexes"], [36, 2, 1, "", "normalize"], [36, 2, 1, "", "shuffle"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model": [[38, 1, 1, "", "NerModel"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model.NerModel": [[38, 2, 1, "", "add_bilstm_char_repr"], [38, 2, 1, "", "add_cnn_char_repr"], [38, 2, 1, "", "add_context_repr"], [38, 2, 1, "", "add_inference_layer"], [38, 2, 1, "", "add_pretrained_word_embeddings"], [38, 2, 1, "", "add_training_op"], [38, 2, 1, "", "close"], [38, 2, 1, "", "fill"], [38, 2, 1, "", "get_char_ids"], [38, 2, 1, "", "get_from_batch"], [38, 2, 1, "", "get_sentence_lengths"], [38, 2, 1, "", "get_sentence_token_lengths"], [38, 2, 1, "", "get_softmax"], [38, 2, 1, "", "get_tag_ids"], [38, 2, 1, "", "get_word_embeddings"], [38, 2, 1, "", "get_word_lengths"], [38, 2, 1, "", "init_variables"], [38, 2, 1, "", "measure"], [38, 2, 1, "", "num_trues"], [38, 2, 1, "", "predict"], [38, 2, 1, "", "slice"], [38, 2, 1, "", "train"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model_saver": [[39, 1, 1, "", "NerModelSaver"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.ner_model_saver.NerModelSaver": [[39, 2, 1, "", "restore_tensorflow_state"], [39, 2, 1, "", "save"], [39, 2, 1, "", "save_models"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.sentence_grouper": [[40, 1, 1, "", "SentenceGrouper"]], "sparknlp_jsl._tf_graph_builders_1x.ner_dl.sentence_grouper.SentenceGrouper": [[40, 2, 1, "", "get_bucket_id"], [40, 2, 1, "", "slice"]], "sparknlp_jsl.alab": [[41, 6, 1, "", "get_assertion_data"], [41, 6, 1, "", "get_conll_data"], [41, 6, 1, "", "get_relation_extraction_data"]], "sparknlp_jsl.annotator": [[42, 0, 0, "-", "annotation_merger"], [73, 3, 1, "id0", "assertion"], [45, 0, 0, "-", "assertion"], [73, 3, 1, "id14", "chunker"], [53, 0, 0, "-", "chunker"], [73, 3, 1, "id4", "classification"], [55, 0, 0, "-", "classification"], [73, 3, 1, "id8", "context"], [60, 0, 0, "-", "context"], [73, 3, 1, "id5", "deid"], [62, 0, 0, "-", "deid"], [73, 3, 1, "id6", "disambiguation"], [64, 0, 0, "-", "disambiguation"], [73, 3, 1, "id1", "dl"], [66, 0, 0, "-", "doc2_chunk_internal"], [70, 0, 0, "-", "embeddings"], [73, 3, 1, "id11", "generic_classifier"], [72, 0, 0, "-", "generic_classifier"], [73, 3, 1, "id7", "keyword"], [73, 3, 1, "id2", "logreg"], [75, 0, 0, "-", "merge"], [76, 0, 0, "-", "ner"], [84, 0, 0, "-", "normalizer"], [85, 0, 0, "-", "qa"], [87, 0, 0, "-", "re"], [92, 0, 0, "-", "resolution"], [95, 0, 0, "-", "router"], [96, 0, 0, "-", "tf_graph_builder"]], "sparknlp_jsl.annotator.annotation_merger": [[42, 1, 1, "", "AnnotationMerger"]], "sparknlp_jsl.annotator.annotation_merger.AnnotationMerger": [[42, 4, 1, "", "inputType"], [42, 4, 1, "", "name"], [42, 2, 1, "", "setInputType"]], "sparknlp_jsl.annotator.assertion": [[43, 0, 0, "-", "assertionDL"], [44, 0, 0, "-", "assertion_dl_reg"]], "sparknlp_jsl.annotator.assertion.assertionDL": [[43, 1, 1, "", "AssertionDLApproach"], [43, 1, 1, "", "AssertionDLModel"]], "sparknlp_jsl.annotator.assertion.assertionDL.AssertionDLApproach": [[43, 4, 1, "", "batchSize"], [43, 4, 1, "", "configProtoBytes"], [43, 4, 1, "", "dropout"], [43, 4, 1, "", "enableOutputLogs"], [43, 4, 1, "", "endCol"], [43, 4, 1, "", "epochs"], [43, 4, 1, "", "evaluationLogExtended"], [43, 4, 1, "", "graphFile"], [43, 4, 1, "", "graphFolder"], [43, 4, 1, "", "includeConfidence"], [43, 4, 1, "", "label"], [43, 4, 1, "", "learningRate"], [43, 4, 1, "", "maxSentLen"], [43, 4, 1, "", "outputLogsPath"], [43, 4, 1, "", "scopeWindow"], [43, 2, 1, "", "setBatchSize"], [43, 2, 1, "", "setConfigProtoBytes"], [43, 2, 1, "", "setDropout"], [43, 2, 1, "", "setEnableOutputLogs"], [43, 2, 1, "", "setEndCol"], [43, 2, 1, "", "setEpochs"], [43, 2, 1, "", "setEvaluationLogExtended"], [43, 2, 1, "", "setGraphFile"], [43, 2, 1, "", "setGraphFolder"], [43, 2, 1, "", "setIncludeConfidence"], [43, 2, 1, "", "setLabelCol"], [43, 2, 1, "", "setLearningRate"], [43, 2, 1, "", "setMaxSentLen"], [43, 2, 1, "", "setOutputLogsPath"], [43, 2, 1, "", "setScopeWindow"], [43, 2, 1, "", "setStartCol"], [43, 2, 1, "", "setTestDataset"], [43, 2, 1, "", "setValidationSplit"], [43, 2, 1, "", "setVerbose"], [43, 4, 1, "", "startCol"], [43, 4, 1, "", "testDataset"], [43, 4, 1, "", "validationSplit"], [43, 4, 1, "", "verbose"]], "sparknlp_jsl.annotator.assertion.assertionDL.AssertionDLModel": [[43, 4, 1, "", "classes"], [43, 4, 1, "", "configProtoBytes"], [43, 4, 1, "", "includeConfidence"], [43, 4, 1, "", "maxSentLen"], [43, 4, 1, "", "name"], [43, 2, 1, "", "pretrained"], [43, 4, 1, "", "scopeWindow"], [43, 2, 1, "", "setConfigProtoBytes"], [43, 2, 1, "", "setIncludeConfidence"], [43, 2, 1, "", "setScopeWindow"], [43, 4, 1, "", "targetNerLabels"]], "sparknlp_jsl.annotator.assertion.assertion_dl_reg": [[44, 1, 1, "", "AssertionLogRegApproach"], [44, 1, 1, "", "AssertionLogRegModel"]], "sparknlp_jsl.annotator.assertion.assertion_dl_reg.AssertionLogRegApproach": [[44, 4, 1, "", "afterParam"], [44, 4, 1, "", "beforeParam"], [44, 4, 1, "", "eNetParam"], [44, 4, 1, "", "endCol"], [44, 4, 1, "", "label"], [44, 4, 1, "", "maxIter"], [44, 4, 1, "", "nerCol"], [44, 4, 1, "", "regParam"], [44, 2, 1, "", "setAfter"], [44, 2, 1, "", "setBefore"], [44, 2, 1, "", "setEndCol"], [44, 2, 1, "", "setEnet"], [44, 2, 1, "", "setLabelCol"], [44, 2, 1, "", "setMaxIter"], [44, 2, 1, "", "setNerCol"], [44, 2, 1, "", "setReg"], [44, 2, 1, "", "setStartCol"], [44, 2, 1, "", "setTargetNerLabels"], [44, 4, 1, "", "startCol"], [44, 4, 1, "", "targetNerLabels"]], "sparknlp_jsl.annotator.assertion.assertion_dl_reg.AssertionLogRegModel": [[44, 4, 1, "", "afterParam"], [44, 4, 1, "", "beforeParam"], [44, 4, 1, "", "endCol"], [44, 4, 1, "", "name"], [44, 4, 1, "", "nerCol"], [44, 2, 1, "", "pretrained"], [44, 4, 1, "", "startCol"], [44, 4, 1, "", "targetNerLabels"]], "sparknlp_jsl.annotator.chunker": [[46, 0, 0, "-", "assertion_filterer"], [47, 0, 0, "-", "chunk_converter"], [48, 0, 0, "-", "chunk_key_phrase_extraction"], [49, 0, 0, "-", "chunk_sentence_splitter"], [50, 0, 0, "-", "chunker_filterer"], [51, 0, 0, "-", "chunkmapper"], [52, 0, 0, "-", "chunkmapper_filterer"]], "sparknlp_jsl.annotator.chunker.assertion_filterer": [[46, 1, 1, "", "AssertionFilterer"]], "sparknlp_jsl.annotator.chunker.assertion_filterer.AssertionFilterer": [[46, 4, 1, "", "criteria"], [46, 4, 1, "", "entitiesConfidence"], [46, 4, 1, "", "name"], [46, 4, 1, "", "regex"], [46, 2, 1, "", "setCriteria"], [46, 2, 1, "", "setRegex"], [46, 2, 1, "", "setWhiteList"], [46, 4, 1, "", "whiteList"]], "sparknlp_jsl.annotator.chunker.chunk_converter": [[47, 1, 1, "", "ChunkConverter"]], "sparknlp_jsl.annotator.chunker.chunk_converter.ChunkConverter": [[47, 4, 1, "", "name"]], "sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction": [[48, 1, 1, "", "ChunkKeyPhraseExtraction"]], "sparknlp_jsl.annotator.chunker.chunk_key_phrase_extraction.ChunkKeyPhraseExtraction": [[48, 4, 1, "", "concatenateSentences"], [48, 4, 1, "", "divergence"], [48, 4, 1, "", "documentLevelProcessing"], [48, 4, 1, "", "dropPunctuation"], [48, 4, 1, "", "name"], [48, 2, 1, "", "pretrained"], [48, 4, 1, "", "selectMostDifferent"], [48, 2, 1, "", "setConcatenateSentences"], [48, 2, 1, "", "setDivergence"], [48, 2, 1, "", "setDocumentLevelProcessing"], [48, 2, 1, "", "setDropPunctuation"], [48, 2, 1, "", "setSelectMostDifferent"], [48, 2, 1, "", "setTopN"], [48, 4, 1, "", "topN"]], "sparknlp_jsl.annotator.chunker.chunk_sentence_splitter": [[49, 1, 1, "", "ChunkSentenceSplitter"]], "sparknlp_jsl.annotator.chunker.chunk_sentence_splitter.ChunkSentenceSplitter": [[49, 4, 1, "", "defaultEntity"], [49, 4, 1, "", "groupBySentences"], [49, 4, 1, "", "insertChunk"], [49, 4, 1, "", "name"], [49, 2, 1, "", "setDefaultEntity"], [49, 2, 1, "", "setGroupBySentences"], [49, 2, 1, "", "setInsertChunk"]], "sparknlp_jsl.annotator.chunker.chunker_filterer": [[50, 1, 1, "", "ChunkFilterer"], [50, 1, 1, "", "ChunkFiltererApproach"]], "sparknlp_jsl.annotator.chunker.chunker_filterer.ChunkFilterer": [[50, 4, 1, "", "blackList"], [50, 4, 1, "", "criteria"], [50, 4, 1, "", "filterValue"], [50, 4, 1, "", "name"], [50, 4, 1, "", "regex"], [50, 2, 1, "", "setBlackList"], [50, 2, 1, "", "setCriteria"], [50, 2, 1, "", "setFilterEntity"], [50, 2, 1, "", "setRegex"], [50, 2, 1, "", "setWhiteList"], [50, 4, 1, "", "whiteList"]], "sparknlp_jsl.annotator.chunker.chunker_filterer.ChunkFiltererApproach": [[50, 4, 1, "", "blackList"], [50, 4, 1, "", "criteria"], [50, 4, 1, "", "entitiesConfidenceResource"], [50, 4, 1, "", "filterValue"], [50, 4, 1, "", "name"], [50, 4, 1, "", "regex"], [50, 2, 1, "", "setBlackList"], [50, 2, 1, "", "setCriteria"], [50, 2, 1, "", "setEntitiesConfidenceResource"], [50, 2, 1, "", "setFilterEntity"], [50, 2, 1, "", "setRegex"], [50, 2, 1, "", "setWhiteList"], [50, 4, 1, "", "whiteList"]], "sparknlp_jsl.annotator.chunker.chunkmapper": [[51, 1, 1, "", "ChunkMapperApproach"], [51, 1, 1, "", "ChunkMapperModel"]], "sparknlp_jsl.annotator.chunker.chunkmapper.ChunkMapperApproach": [[51, 4, 1, "", "allowMultiTokenChunk"], [51, 4, 1, "", "dictionary"], [51, 4, 1, "", "lowerCase"], [51, 4, 1, "", "multivaluesRelations"], [51, 4, 1, "", "name"], [51, 4, 1, "", "rel"], [51, 4, 1, "", "rels"], [51, 2, 1, "", "setAllowMultiTokenChunk"], [51, 2, 1, "", "setDictionary"], [51, 2, 1, "", "setLowerCase"], [51, 2, 1, "", "setMultivaluesRelations"], [51, 2, 1, "", "setRel"], [51, 2, 1, "", "setRels"]], "sparknlp_jsl.annotator.chunker.chunkmapper.ChunkMapperModel": [[51, 4, 1, "", "allowMultiTokenChunk"], [51, 4, 1, "", "lowerCase"], [51, 4, 1, "", "multivaluesRelations"], [51, 4, 1, "", "name"], [51, 2, 1, "", "pretrained"], [51, 4, 1, "", "rel"], [51, 4, 1, "", "rels"], [51, 2, 1, "", "setAllowMultiTokenChunk"], [51, 2, 1, "", "setLowerCase"], [51, 2, 1, "", "setMultivaluesRelations"], [51, 2, 1, "", "setRel"], [51, 2, 1, "", "setRels"]], "sparknlp_jsl.annotator.chunker.chunkmapper_filterer": [[52, 1, 1, "", "ChunkMapperFilterer"]], "sparknlp_jsl.annotator.chunker.chunkmapper_filterer.ChunkMapperFilterer": [[52, 4, 1, "", "name"], [52, 4, 1, "", "returnCriteria"], [52, 2, 1, "", "setReturnCriteria"]], "sparknlp_jsl.annotator.classification": [[54, 0, 0, "-", "document_log_classifier"], [56, 0, 0, "-", "medical_bert_for_sequence_classification"], [57, 0, 0, "-", "medical_bert_for_token_classifier"], [58, 0, 0, "-", "medical_distilbert_for_sequence_classification"]], "sparknlp_jsl.annotator.classification.document_log_classifier": [[54, 1, 1, "", "DocumentLogRegClassifierApproach"], [54, 1, 1, "", "DocumentLogRegClassifierModel"]], "sparknlp_jsl.annotator.classification.document_log_classifier.DocumentLogRegClassifierApproach": [[54, 4, 1, "", "classificationModelPath"], [54, 4, 1, "", "fitIntercept"], [54, 4, 1, "", "labelCol"], [54, 4, 1, "", "labels"], [54, 4, 1, "", "maxIter"], [54, 2, 1, "", "setClassificationModelPath"], [54, 2, 1, "", "setFitIntercept"], [54, 2, 1, "", "setLabelColumn"], [54, 2, 1, "", "setLabels"], [54, 2, 1, "", "setMaxIter"], [54, 2, 1, "", "setTol"], [54, 2, 1, "", "setVectorizationModelPath"], [54, 4, 1, "", "tol"], [54, 4, 1, "", "vectorizationModelPath"]], "sparknlp_jsl.annotator.classification.document_log_classifier.DocumentLogRegClassifierModel": [[54, 4, 1, "", "classificationModel"], [54, 4, 1, "", "labels"], [54, 4, 1, "", "mergeChunks"], [54, 4, 1, "", "name"], [54, 2, 1, "", "pretrained"], [54, 2, 1, "", "setClassificationModel"], [54, 2, 1, "", "setLabels"], [54, 2, 1, "", "setMergeChunks"], [54, 2, 1, "", "setVectorizationModel"], [54, 4, 1, "", "vectorizationModel"]], "sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification": [[56, 1, 1, "", "MedicalBertForSequenceClassification"]], "sparknlp_jsl.annotator.classification.medical_bert_for_sequence_classification.MedicalBertForSequenceClassification": [[56, 4, 1, "", "coalesceSentences"], [56, 4, 1, "", "configProtoBytes"], [56, 2, 1, "", "getClasses"], [56, 2, 1, "", "loadSavedModel"], [56, 2, 1, "", "loadSavedModelOpenSource"], [56, 4, 1, "", "maxSentenceLength"], [56, 4, 1, "", "name"], [56, 2, 1, "", "pretrained"], [56, 2, 1, "", "setCoalesceSentences"], [56, 2, 1, "", "setConfigProtoBytes"], [56, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier": [[57, 1, 1, "", "MedicalBertForTokenClassifier"]], "sparknlp_jsl.annotator.classification.medical_bert_for_token_classifier.MedicalBertForTokenClassifier": [[57, 4, 1, "", "configProtoBytes"], [57, 2, 1, "", "getClasses"], [57, 2, 1, "", "loadSavedModel"], [57, 2, 1, "", "loadSavedModelOpenSource"], [57, 4, 1, "", "maxSentenceLength"], [57, 4, 1, "", "name"], [57, 2, 1, "", "pretrained"], [57, 2, 1, "", "setConfigProtoBytes"], [57, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification": [[58, 1, 1, "", "MedicalDistilBertForSequenceClassification"]], "sparknlp_jsl.annotator.classification.medical_distilbert_for_sequence_classification.MedicalDistilBertForSequenceClassification": [[58, 4, 1, "", "coalesceSentences"], [58, 4, 1, "", "configProtoBytes"], [58, 2, 1, "", "getClasses"], [58, 2, 1, "", "loadSavedModel"], [58, 2, 1, "", "loadSavedModelOpenSource"], [58, 4, 1, "", "maxSentenceLength"], [58, 4, 1, "", "name"], [58, 2, 1, "", "pretrained"], [58, 2, 1, "", "setCoalesceSentences"], [58, 2, 1, "", "setConfigProtoBytes"], [58, 2, 1, "", "setMaxSentenceLength"]], "sparknlp_jsl.annotator.context": [[59, 0, 0, "-", "contextual_parser"]], "sparknlp_jsl.annotator.context.contextual_parser": [[59, 1, 1, "", "ContextualParserApproach"], [59, 1, 1, "", "ContextualParserModel"]], "sparknlp_jsl.annotator.context.contextual_parser.ContextualParserApproach": [[59, 4, 1, "", "caseSensitive"], [59, 4, 1, "", "dictionary"], [59, 4, 1, "", "jsonPath"], [59, 4, 1, "", "optionalContextRules"], [59, 4, 1, "", "prefixAndSuffixMatch"], [59, 2, 1, "", "setCaseSensitive"], [59, 2, 1, "", "setDictionary"], [59, 2, 1, "", "setJsonPath"], [59, 2, 1, "", "setOptionalContextRules"], [59, 2, 1, "", "setPrefixAndSuffixMatch"], [59, 2, 1, "", "setShortestContextMatch"], [59, 4, 1, "", "shortestContextMatch"]], "sparknlp_jsl.annotator.context.contextual_parser.ContextualParserModel": [[59, 4, 1, "", "caseSensitive"], [59, 4, 1, "", "optionalContextRules"], [59, 4, 1, "", "prefixAndSuffixMatch"], [59, 2, 1, "", "setCaseSensitive"], [59, 2, 1, "", "setOptionalContextRules"], [59, 2, 1, "", "setPrefixAndSuffixMatch"], [59, 2, 1, "", "setShortestContextMatch"], [59, 4, 1, "", "shortestContextMatch"]], "sparknlp_jsl.annotator.deid": [[61, 0, 0, "-", "deIdentification"], [63, 0, 0, "-", "reIdentification"]], "sparknlp_jsl.annotator.deid.deIdentification": [[61, 1, 1, "", "DeIdentification"], [61, 1, 1, "", "DeIdentificationModel"]], "sparknlp_jsl.annotator.deid.deIdentification.DeIdentification": [[61, 4, 1, "", "blackList"], [61, 4, 1, "", "consistentObfuscation"], [61, 4, 1, "", "dateFormats"], [61, 4, 1, "", "dateTag"], [61, 4, 1, "", "dateToYear"], [61, 4, 1, "", "days"], [61, 4, 1, "", "fixedMaskLength"], [61, 2, 1, "", "getBlackList"], [61, 4, 1, "", "ignoreRegex"], [61, 4, 1, "", "isRandomDateDisplacement"], [61, 4, 1, "", "language"], [61, 4, 1, "", "mappingsColumn"], [61, 4, 1, "", "maskingPolicy"], [61, 4, 1, "", "minYear"], [61, 4, 1, "", "mode"], [61, 4, 1, "", "name"], [61, 4, 1, "", "obfuscateDate"], [61, 4, 1, "", "obfuscateRefFile"], [61, 4, 1, "", "obfuscateRefSource"], [61, 4, 1, "", "refFileFormat"], [61, 4, 1, "", "refSep"], [61, 4, 1, "", "regexOverride"], [61, 4, 1, "", "regexPatternsDictionary"], [61, 4, 1, "", "returnEntityMappings"], [61, 4, 1, "", "sameEntityThreshold"], [61, 4, 1, "", "seed"], [61, 2, 1, "", "setBlackList"], [61, 2, 1, "", "setConsistentObfuscation"], [61, 2, 1, "", "setDateFormats"], [61, 2, 1, "", "setDateTag"], [61, 2, 1, "", "setDateToYear"], [61, 2, 1, "", "setDays"], [61, 2, 1, "", "setFixedMaskLength"], [61, 2, 1, "", "setIgnoreRegex"], [61, 2, 1, "", "setIsRandomDateDisplacement"], [61, 2, 1, "", "setLanguage"], [61, 2, 1, "", "setMappingsColumn"], [61, 2, 1, "", "setMaskingPolicy"], [61, 2, 1, "", "setMinYear"], [61, 2, 1, "", "setMode"], [61, 2, 1, "", "setObfuscateDate"], [61, 2, 1, "", "setObfuscateRefFile"], [61, 2, 1, "", "setObfuscateRefSource"], [61, 2, 1, "", "setRefFileFormat"], [61, 2, 1, "", "setRefSep"], [61, 2, 1, "", "setRegexOverride"], [61, 2, 1, "", "setRegexPatternsDictionary"], [61, 2, 1, "", "setReturnEntityMappings"], [61, 2, 1, "", "setSameEntityThreshold"], [61, 2, 1, "", "setSeed"]], "sparknlp_jsl.annotator.deid.deIdentification.DeIdentificationModel": [[61, 4, 1, "", "blackList"], [61, 4, 1, "", "consistentObfuscation"], [61, 4, 1, "id0", "dateFormats"], [61, 4, 1, "", "dateTag"], [61, 4, 1, "", "dateToYear"], [61, 4, 1, "", "days"], [61, 4, 1, "", "fixedMaskLength"], [61, 2, 1, "", "getBlackList"], [61, 2, 1, "", "getRegexEntities"], [61, 4, 1, "", "ignoreRegex"], [61, 4, 1, "", "isRandomDateDisplacement"], [61, 4, 1, "", "language"], [61, 4, 1, "", "mappingsColumn"], [61, 4, 1, "", "maskingPolicy"], [61, 4, 1, "", "minYear"], [61, 4, 1, "id13", "mode"], [61, 4, 1, "", "name"], [61, 4, 1, "", "obfuscateDate"], [61, 4, 1, "", "obfuscateRefSource"], [61, 2, 1, "", "pretrained"], [61, 4, 1, "", "regexEntities"], [61, 4, 1, "", "regexOverride"], [61, 4, 1, "", "returnEntityMappings"], [61, 4, 1, "", "sameEntityThreshold"], [61, 4, 1, "", "seed"], [61, 2, 1, "", "setBlackList"], [61, 2, 1, "", "setConsistentObfuscation"], [61, 2, 1, "", "setDateFormats"], [61, 2, 1, "", "setDateTag"], [61, 2, 1, "", "setDateToYear"], [61, 2, 1, "", "setDays"], [61, 2, 1, "", "setFixedMaskLength"], [61, 2, 1, "", "setIgnoreRegex"], [61, 2, 1, "", "setIsRandomDateDisplacement"], [61, 2, 1, "", "setLanguage"], [61, 2, 1, "", "setMappingsColumn"], [61, 2, 1, "", "setMaskingPolicy"], [61, 2, 1, "", "setMinYear"], [61, 2, 1, "", "setMode"], [61, 2, 1, "", "setObfuscateDate"], [61, 2, 1, "", "setObfuscateRefSource"], [61, 2, 1, "", "setRegexOverride"], [61, 2, 1, "", "setReturnEntityMappings"], [61, 2, 1, "", "setSameEntityThreshold"], [61, 2, 1, "", "setSeed"]], "sparknlp_jsl.annotator.deid.reIdentification": [[63, 1, 1, "", "ReIdentification"]], "sparknlp_jsl.annotator.deid.reIdentification.ReIdentification": [[63, 4, 1, "", "name"]], "sparknlp_jsl.annotator.disambiguation": [[65, 0, 0, "-", "ner_disambiguator"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator": [[65, 1, 1, "", "NerDisambiguator"], [65, 1, 1, "", "NerDisambiguatorModel"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator.NerDisambiguator": [[65, 4, 1, "", "embeddingTypeParam"], [65, 4, 1, "", "levenshteinDistanceThresholdParam"], [65, 4, 1, "", "narrowWithApproximateMatching"], [65, 4, 1, "", "nearMatchingGapParam"], [65, 4, 1, "", "numFirstChars"], [65, 4, 1, "", "predictionsLimit"], [65, 4, 1, "", "s3KnowledgeBaseName"], [65, 2, 1, "", "setEmbeddingType"], [65, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [65, 2, 1, "", "setNarrowWithApproximateMatching"], [65, 2, 1, "", "setNearMatchingGapParam"], [65, 2, 1, "", "setNumFirstChars"], [65, 2, 1, "", "setPredictionLimit"], [65, 2, 1, "", "setS3KnowledgeBaseName"], [65, 2, 1, "", "setTokenSearch"], [65, 4, 1, "", "tokenSearch"]], "sparknlp_jsl.annotator.disambiguation.ner_disambiguator.NerDisambiguatorModel": [[65, 4, 1, "", "embeddingTypeParam"], [65, 4, 1, "", "levenshteinDistanceThresholdParam"], [65, 4, 1, "", "name"], [65, 4, 1, "", "narrowWithApproximateMatching"], [65, 4, 1, "", "nearMatchingGapParam"], [65, 4, 1, "", "numFirstChars"], [65, 4, 1, "", "predictionsLimit"], [65, 2, 1, "", "pretrained"], [65, 2, 1, "", "setEmbeddingType"], [65, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [65, 2, 1, "", "setNarrowWithApproximateMatching"], [65, 2, 1, "", "setNearMatchingGapParam"], [65, 2, 1, "", "setNumFirstChars"], [65, 2, 1, "", "setPredictionLimit"], [65, 2, 1, "", "setTokenSearch"], [65, 4, 1, "", "tokenSearch"]], "sparknlp_jsl.annotator.doc2_chunk_internal": [[66, 1, 1, "", "Doc2ChunkInternal"]], "sparknlp_jsl.annotator.doc2_chunk_internal.Doc2ChunkInternal": [[66, 4, 1, "", "chunkCol"], [66, 4, 1, "", "failOnMissing"], [66, 4, 1, "", "isArray"], [66, 4, 1, "", "lowerCase"], [66, 4, 1, "", "name"], [66, 2, 1, "", "setChunkCol"], [66, 2, 1, "", "setFailOnMissing"], [66, 2, 1, "", "setIsArray"], [66, 2, 1, "", "setLowerCase"], [66, 2, 1, "", "setParams"], [66, 2, 1, "", "setStartCol"], [66, 2, 1, "", "setStartColByTokenIndex"], [66, 4, 1, "", "startCol"], [66, 4, 1, "", "startColByTokenIndex"]], "sparknlp_jsl.annotator.embeddings": [[67, 0, 0, "-", "average_embeddings"], [68, 0, 0, "-", "bert_sentence_embeddings"], [69, 0, 0, "-", "entity_chunk_embeddings"]], "sparknlp_jsl.annotator.embeddings.average_embeddings": [[67, 1, 1, "", "AverageEmbeddings"]], "sparknlp_jsl.annotator.embeddings.average_embeddings.AverageEmbeddings": [[67, 4, 1, "", "name"]], "sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings": [[68, 1, 1, "", "BertSentenceChunkEmbeddings"]], "sparknlp_jsl.annotator.embeddings.bert_sentence_embeddings.BertSentenceChunkEmbeddings": [[68, 4, 1, "", "chunkWeight"], [68, 2, 1, "", "load"], [68, 4, 1, "", "name"], [68, 2, 1, "", "pretrained"], [68, 2, 1, "", "setChunkWeight"]], "sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings": [[69, 1, 1, "", "EntityChunkEmbeddings"]], "sparknlp_jsl.annotator.embeddings.entity_chunk_embeddings.EntityChunkEmbeddings": [[69, 4, 1, "", "entityWeights"], [69, 4, 1, "", "maxSyntacticDistance"], [69, 4, 1, "", "name"], [69, 2, 1, "", "pretrained"], [69, 2, 1, "", "setEntityWeights"], [69, 2, 1, "", "setMaxSyntacticDistance"], [69, 2, 1, "", "setTargetEntities"], [69, 4, 1, "", "targetEntities"]], "sparknlp_jsl.annotator.generic_classifier": [[71, 0, 0, "-", "generic_classifier"]], "sparknlp_jsl.annotator.generic_classifier.generic_classifier": [[71, 1, 1, "", "GenericClassifierApproach"], [71, 1, 1, "", "GenericClassifierModel"]], "sparknlp_jsl.annotator.generic_classifier.generic_classifier.GenericClassifierApproach": [[71, 4, 1, "", "batchSize"], [71, 4, 1, "", "dropout"], [71, 4, 1, "", "epochsN"], [71, 4, 1, "", "featureScaling"], [71, 4, 1, "", "fixImbalance"], [71, 4, 1, "", "labelColumn"], [71, 4, 1, "", "learningRate"], [71, 4, 1, "", "modelFile"], [71, 4, 1, "", "outputLogsPath"], [71, 2, 1, "", "setBatchSize"], [71, 2, 1, "", "setDropout"], [71, 2, 1, "", "setEpochsNumber"], [71, 2, 1, "", "setFeatureScaling"], [71, 2, 1, "", "setFixImbalance"], [71, 2, 1, "", "setLabelCol"], [71, 2, 1, "", "setLearningRate"], [71, 2, 1, "", "setModelFile"], [71, 2, 1, "", "setOutputLogsPath"], [71, 2, 1, "", "setValidationSplit"], [71, 4, 1, "", "validationSplit"]], "sparknlp_jsl.annotator.generic_classifier.generic_classifier.GenericClassifierModel": [[71, 4, 1, "", "classes"], [71, 4, 1, "", "name"], [71, 2, 1, "", "pretrained"]], "sparknlp_jsl.annotator.merge": [[74, 0, 0, "-", "chunker_merge"]], "sparknlp_jsl.annotator.merge.chunker_merge": [[74, 1, 1, "", "ChunkMergeApproach"], [74, 1, 1, "", "ChunkMergeModel"]], "sparknlp_jsl.annotator.merge.chunker_merge.ChunkMergeApproach": [[74, 4, 1, "", "blackList"], [74, 4, 1, "", "chunkPrecedence"], [74, 4, 1, "", "falsePositivesResource"], [74, 4, 1, "", "mergeOverlapping"], [74, 4, 1, "", "name"], [74, 4, 1, "", "replaceDictResource"], [74, 2, 1, "", "setBlackList"], [74, 2, 1, "", "setChunkPrecedence"], [74, 2, 1, "", "setFalsePositivesResource"], [74, 2, 1, "", "setMergeOverlapping"], [74, 2, 1, "", "setReplaceDictResource"]], "sparknlp_jsl.annotator.merge.chunker_merge.ChunkMergeModel": [[74, 4, 1, "", "blackList"], [74, 4, 1, "", "chunkPrecedence"], [74, 4, 1, "", "falsePositives"], [74, 4, 1, "", "mergeOverlapping"], [74, 4, 1, "", "name"], [74, 2, 1, "", "pretrained"], [74, 4, 1, "", "replaceDict"], [74, 2, 1, "", "setChunkPrecedence"], [74, 2, 1, "", "setMergeOverlapping"]], "sparknlp_jsl.annotator.ner": [[77, 0, 0, "-", "iob_tagger"], [78, 0, 0, "-", "medical_ner"], [79, 0, 0, "-", "ner_chunker"], [80, 0, 0, "-", "ner_converter_internal"], [81, 0, 0, "-", "zero_shot_ner"]], "sparknlp_jsl.annotator.ner.iob_tagger": [[77, 1, 1, "", "IOBTagger"]], "sparknlp_jsl.annotator.ner.iob_tagger.IOBTagger": [[77, 4, 1, "", "name"], [77, 4, 1, "", "scheme"], [77, 2, 1, "", "setScheme"]], "sparknlp_jsl.annotator.ner.medical_ner": [[78, 1, 1, "", "MedicalNerApproach"], [78, 1, 1, "", "MedicalNerModel"]], "sparknlp_jsl.annotator.ner.medical_ner.MedicalNerApproach": [[78, 4, 1, "", "batchSize"], [78, 4, 1, "", "configProtoBytes"], [78, 4, 1, "", "dropout"], [78, 4, 1, "", "earlyStoppingCriterion"], [78, 4, 1, "", "earlyStoppingPatience"], [78, 4, 1, "", "enableMemoryOptimizer"], [78, 4, 1, "", "enableOutputLogs"], [78, 4, 1, "", "evaluationLogExtended"], [78, 4, 1, "", "graphFile"], [78, 4, 1, "", "graphFolder"], [78, 4, 1, "", "includeAllConfidenceScores"], [78, 4, 1, "", "includeConfidence"], [78, 4, 1, "", "logPrefix"], [78, 4, 1, "", "lr"], [78, 4, 1, "", "outputLogsPath"], [78, 4, 1, "", "overrideExistingTags"], [78, 4, 1, "", "po"], [78, 4, 1, "", "pretrainedModelPath"], [78, 2, 1, "", "setBatchSize"], [78, 2, 1, "", "setConfigProtoBytes"], [78, 2, 1, "", "setDropout"], [78, 2, 1, "", "setEarlyStoppingCriterion"], [78, 2, 1, "", "setEarlyStoppingPatience"], [78, 2, 1, "", "setEnableMemoryOptimizer"], [78, 2, 1, "", "setEnableOutputLogs"], [78, 2, 1, "", "setEvaluationLogExtended"], [78, 2, 1, "", "setGraphFile"], [78, 2, 1, "", "setGraphFolder"], [78, 2, 1, "", "setIncludeAllConfidenceScores"], [78, 2, 1, "", "setIncludeConfidence"], [78, 2, 1, "", "setLogPrefix"], [78, 2, 1, "", "setLr"], [78, 2, 1, "", "setOutputLogsPath"], [78, 2, 1, "", "setOverrideExistingTags"], [78, 2, 1, "", "setPo"], [78, 2, 1, "", "setPretrainedModelPath"], [78, 2, 1, "", "setTagsMapping"], [78, 2, 1, "", "setTestDataset"], [78, 2, 1, "", "setUseBestModel"], [78, 2, 1, "", "setUseContrib"], [78, 2, 1, "", "setValidationSplit"], [78, 4, 1, "", "tagsMapping"], [78, 4, 1, "", "testDataset"], [78, 4, 1, "", "useBestModel"], [78, 4, 1, "", "useContrib"], [78, 4, 1, "", "validationSplit"]], "sparknlp_jsl.annotator.ner.medical_ner.MedicalNerModel": [[78, 4, 1, "", "classes"], [78, 4, 1, "", "configProtoBytes"], [78, 2, 1, "", "getTrainingClassDistribution"], [78, 4, 1, "", "includeAllConfidenceScores"], [78, 4, 1, "", "includeConfidence"], [78, 4, 1, "", "inferenceBatchSize"], [78, 4, 1, "", "labelCasing"], [78, 2, 1, "", "loadSavedModel"], [78, 4, 1, "", "name"], [78, 2, 1, "id1", "pretrained"], [78, 2, 1, "", "setConfigProtoBytes"], [78, 2, 1, "id0", "setIncludeConfidence"], [78, 2, 1, "", "setInferenceBatchSize"], [78, 2, 1, "", "setLabelCasing"], [78, 4, 1, "", "trainingClassDistribution"]], "sparknlp_jsl.annotator.ner.ner_chunker": [[79, 1, 1, "", "NerChunker"]], "sparknlp_jsl.annotator.ner.ner_chunker.NerChunker": [[79, 4, 1, "", "name"], [79, 4, 1, "", "regexParsers"], [79, 2, 1, "", "setRegexParsers"]], "sparknlp_jsl.annotator.ner.ner_converter_internal": [[80, 1, 1, "", "NerConverterInternal"], [80, 1, 1, "", "NerConverterInternalModel"]], "sparknlp_jsl.annotator.ner.ner_converter_internal.NerConverterInternal": [[80, 4, 1, "", "blackList"], [80, 4, 1, "", "greedyMode"], [80, 4, 1, "", "name"], [80, 4, 1, "", "preservePosition"], [80, 4, 1, "", "replaceDictResource"], [80, 4, 1, "", "replaceLabels"], [80, 2, 1, "", "setBlackList"], [80, 2, 1, "", "setGreedyMode"], [80, 2, 1, "", "setPreservePosition"], [80, 2, 1, "", "setReplaceDictResource"], [80, 2, 1, "", "setReplaceLabels"], [80, 2, 1, "", "setThreshold"], [80, 2, 1, "", "setWhiteList"], [80, 4, 1, "", "threshold"], [80, 4, 1, "", "whiteList"]], "sparknlp_jsl.annotator.ner.ner_converter_internal.NerConverterInternalModel": [[80, 4, 1, "", "blackList"], [80, 4, 1, "", "greedyMode"], [80, 4, 1, "", "name"], [80, 4, 1, "", "preservePosition"], [80, 4, 1, "", "replaceDict"], [80, 2, 1, "", "setBlackList"], [80, 2, 1, "", "setGreedyMode"], [80, 2, 1, "", "setPreservePosition"], [80, 2, 1, "", "setThreshold"], [80, 2, 1, "", "setWhiteList"], [80, 4, 1, "", "threshold"], [80, 4, 1, "", "whiteList"]], "sparknlp_jsl.annotator.ner.zero_shot_ner": [[81, 1, 1, "", "ZeroShotNerModel"]], "sparknlp_jsl.annotator.ner.zero_shot_ner.ZeroShotNerModel": [[81, 4, 1, "", "entityDefinitions"], [81, 2, 1, "", "getClasses"], [81, 2, 1, "", "getEntityDefinitions"], [81, 4, 1, "", "ignoreEntities"], [81, 2, 1, "", "load"], [81, 4, 1, "", "name"], [81, 4, 1, "", "predictionThreshold"], [81, 2, 1, "", "pretrained"], [81, 2, 1, "", "setEntityDefinitions"], [81, 2, 1, "", "setPredictionThreshold"]], "sparknlp_jsl.annotator.normalizer": [[82, 0, 0, "-", "date_normalizer"], [83, 0, 0, "-", "drug_normalizer"]], "sparknlp_jsl.annotator.normalizer.date_normalizer": [[82, 1, 1, "", "DateNormalizer"]], "sparknlp_jsl.annotator.normalizer.date_normalizer.DateNormalizer": [[82, 4, 1, "", "anchorDateDay"], [82, 4, 1, "", "anchorDateMonth"], [82, 4, 1, "", "anchorDateYear"], [82, 4, 1, "", "name"], [82, 2, 1, "", "setAnchorDateDay"], [82, 2, 1, "", "setAnchorDateMonth"], [82, 2, 1, "", "setAnchorDateYear"]], "sparknlp_jsl.annotator.normalizer.drug_normalizer": [[83, 1, 1, "", "DrugNormalizer"]], "sparknlp_jsl.annotator.normalizer.drug_normalizer.DrugNormalizer": [[83, 4, 1, "", "lowercase"], [83, 4, 1, "", "policy"], [83, 2, 1, "", "setLowercase"], [83, 2, 1, "", "setPolicy"]], "sparknlp_jsl.annotator.qa": [[86, 0, 0, "-", "qa_ner_generator"]], "sparknlp_jsl.annotator.qa.qa_ner_generator": [[86, 1, 1, "", "NerQAGenarator"]], "sparknlp_jsl.annotator.qa.qa_ner_generator.NerQAGenarator": [[86, 4, 1, "", "entities1"], [86, 4, 1, "", "entities2"], [86, 4, 1, "", "name"], [86, 4, 1, "", "questionMark"], [86, 4, 1, "", "questionPronoun"], [86, 2, 1, "", "setEntities1"], [86, 2, 1, "", "setEntities2"], [86, 2, 1, "", "setQuestionMark"], [86, 2, 1, "", "setQuestionPronoun"]], "sparknlp_jsl.annotator.re": [[88, 0, 0, "-", "relation_extraction"], [89, 0, 0, "-", "relation_extraction_dl"], [90, 0, 0, "-", "relation_ner_chunk_filter"], [91, 0, 0, "-", "zero_shot_relation_extraction"]], "sparknlp_jsl.annotator.re.relation_extraction": [[88, 1, 1, "", "PosologyREModel"], [88, 1, 1, "", "RelationExtractionApproach"], [88, 1, 1, "", "RelationExtractionModel"]], "sparknlp_jsl.annotator.re.relation_extraction.RelationExtractionApproach": [[88, 4, 1, "", "customLabels"], [88, 4, 1, "", "fromEntityBeginCol"], [88, 4, 1, "", "fromEntityEndCol"], [88, 4, 1, "", "fromEntityLabelCol"], [88, 4, 1, "", "name"], [88, 2, 1, "", "setCustomLabels"], [88, 2, 1, "", "setFromEntity"], [88, 2, 1, "", "setToEntity"], [88, 4, 1, "", "toEntityBeginCol"], [88, 4, 1, "", "toEntityEndCol"], [88, 4, 1, "", "toEntityLabelCol"]], "sparknlp_jsl.annotator.re.relation_extraction.RelationExtractionModel": [[88, 4, 1, "", "classes"], [88, 2, 1, "", "getClasses"], [88, 4, 1, "", "maxSyntacticDistance"], [88, 4, 1, "", "name"], [88, 4, 1, "", "predictionThreshold"], [88, 2, 1, "", "pretrained"], [88, 4, 1, "", "relationPairs"], [88, 4, 1, "", "relationPairsCaseSensitive"], [88, 2, 1, "", "setCustomLabels"], [88, 2, 1, "", "setMaxSyntacticDistance"], [88, 2, 1, "", "setPredictionThreshold"], [88, 2, 1, "", "setRelationPairs"], [88, 2, 1, "", "setRelationPairsCaseSensitive"]], "sparknlp_jsl.annotator.re.relation_extraction_dl": [[89, 1, 1, "", "RelationExtractionDLModel"]], "sparknlp_jsl.annotator.re.relation_extraction_dl.RelationExtractionDLModel": [[89, 4, 1, "", "batchSize"], [89, 4, 1, "", "classes"], [89, 4, 1, "", "customLabels"], [89, 2, 1, "", "getClasses"], [89, 2, 1, "", "loadSavedModel"], [89, 4, 1, "", "name"], [89, 4, 1, "", "predictionThreshold"], [89, 2, 1, "", "pretrained"], [89, 2, 1, "", "setBatchSize"], [89, 2, 1, "", "setCaseSensitive"], [89, 2, 1, "", "setCustomLabels"], [89, 2, 1, "", "setPredictionThreshold"]], "sparknlp_jsl.annotator.re.relation_ner_chunk_filter": [[90, 1, 1, "", "RENerChunksFilter"]], "sparknlp_jsl.annotator.re.relation_ner_chunk_filter.RENerChunksFilter": [[90, 4, 1, "", "docLevelRelations"], [90, 4, 1, "", "maxSyntacticDistance"], [90, 4, 1, "", "name"], [90, 4, 1, "", "relationPairs"], [90, 4, 1, "", "relationPairsCaseSensitive"], [90, 2, 1, "", "setDocLevelRelations"], [90, 2, 1, "", "setMaxSyntacticDistance"], [90, 2, 1, "", "setRelationPairs"], [90, 2, 1, "", "setRelationPairsCaseSensitive"]], "sparknlp_jsl.annotator.re.zero_shot_relation_extraction": [[91, 1, 1, "", "ZeroShotRelationExtractionModel"]], "sparknlp_jsl.annotator.re.zero_shot_relation_extraction.ZeroShotRelationExtractionModel": [[91, 2, 1, "", "loadSavedModel"], [91, 4, 1, "", "multiLabel"], [91, 4, 1, "", "predictionThreshold"], [91, 2, 1, "", "pretrained"], [91, 4, 1, "", "relationalCategories"], [91, 2, 1, "", "setRelationalCategories"]], "sparknlp_jsl.annotator.resolution": [[93, 0, 0, "-", "resolver_merger"], [94, 0, 0, "-", "sentence_entity_resolver"]], "sparknlp_jsl.annotator.resolution.resolver_merger": [[93, 1, 1, "", "ResolverMerger"]], "sparknlp_jsl.annotator.resolution.resolver_merger.ResolverMerger": [[93, 4, 1, "", "name"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver": [[94, 1, 1, "", "SentenceEntityResolverApproach"], [94, 1, 1, "", "SentenceEntityResolverModel"], [94, 1, 1, "", "SentenceResolverParams"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceEntityResolverApproach": [[94, 4, 1, "", "aux_label_col"], [94, 4, 1, "", "dropCodesList"], [94, 4, 1, "", "labelCol"], [94, 4, 1, "", "normalizedCol"], [94, 4, 1, "", "overrideExistingCodes"], [94, 4, 1, "", "pretrainedModelPath"], [94, 4, 1, "", "returnCosineDistances"], [94, 2, 1, "", "setAuxLabelCol"], [94, 2, 1, "", "setDropCodesList"], [94, 2, 1, "", "setExtractCosineDistances"], [94, 2, 1, "", "setLabelCol"], [94, 2, 1, "", "setNormalizedCol"], [94, 2, 1, "", "setOverrideExistingCodes"], [94, 2, 1, "", "setPretrainedModelPath"], [94, 2, 1, "", "setUseAuxLabel"], [94, 4, 1, "", "useAuxLabel"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceEntityResolverModel": [[94, 4, 1, "", "aux_label_col"], [94, 4, 1, "", "name"], [94, 2, 1, "", "pretrained"], [94, 4, 1, "", "returnCosineDistances"], [94, 4, 1, "", "searchTree"], [94, 2, 1, "", "setAuxLabelCol"], [94, 2, 1, "", "setSearchTree"], [94, 2, 1, "", "setUseAuxLabel"], [94, 4, 1, "", "useAuxLabel"]], "sparknlp_jsl.annotator.resolution.sentence_entity_resolver.SentenceResolverParams": [[94, 4, 1, "", "confidenceFunction"], [94, 4, 1, "", "distanceFunction"], [94, 4, 1, "", "missAsEmpty"], [94, 4, 1, "", "neighbours"], [94, 2, 1, "", "setConfidenceFunction"], [94, 2, 1, "", "setDistanceFunction"], [94, 2, 1, "", "setMissAsEmpty"], [94, 2, 1, "", "setNeighbours"], [94, 2, 1, "", "setThreshold"], [94, 4, 1, "", "threshold"]], "sparknlp_jsl.annotator.router": [[95, 1, 1, "", "Router"]], "sparknlp_jsl.annotator.router.Router": [[95, 4, 1, "", "filterFieldsElements"], [95, 4, 1, "", "inputType"], [95, 4, 1, "", "metadataField"], [95, 4, 1, "", "name"], [95, 2, 1, "", "setFilterFieldsElements"], [95, 2, 1, "", "setInputType"], [95, 2, 1, "", "setMetadataField"]], "sparknlp_jsl.annotator.tf_graph_builder": [[96, 1, 1, "", "MedicalGraphBuilderModel"], [96, 1, 1, "", "TFGraphBuilder"]], "sparknlp_jsl.annotator.tf_graph_builder.TFGraphBuilder": [[96, 4, 1, "", "batchNorm"], [96, 2, 1, "", "getBatchNorm"], [96, 2, 1, "", "getGraphFile"], [96, 2, 1, "", "getGraphFolder"], [96, 2, 1, "", "getHiddenAct"], [96, 2, 1, "", "getHiddenActL2"], [96, 2, 1, "", "getHiddenLayers"], [96, 2, 1, "", "getHiddenUnitsNumber"], [96, 2, 1, "", "getHiddenWeightsL2"], [96, 2, 1, "", "getInputCols"], [96, 2, 1, "", "getIsMedical"], [96, 2, 1, "", "getLabelColumn"], [96, 2, 1, "", "getMaxSequenceLength"], [96, 2, 1, "", "getModelName"], [96, 4, 1, "", "graphFile"], [96, 4, 1, "", "graphFolder"], [96, 4, 1, "", "hiddenAct"], [96, 4, 1, "", "hiddenActL2"], [96, 4, 1, "", "hiddenLayers"], [96, 4, 1, "", "hiddenUnitsNumber"], [96, 4, 1, "", "hiddenWeightsL2"], [96, 4, 1, "", "inputCols"], [96, 4, 1, "", "isMedical"], [96, 4, 1, "", "labelColumn"], [96, 4, 1, "", "maxSequenceLength"], [96, 4, 1, "", "modelName"], [96, 2, 1, "", "setBatchNorm"], [96, 2, 1, "", "setGraphFile"], [96, 2, 1, "", "setGraphFolder"], [96, 2, 1, "", "setHiddenAct"], [96, 2, 1, "", "setHiddenActL2"], [96, 2, 1, "", "setHiddenLayers"], [96, 2, 1, "", "setHiddenUnitsNumber"], [96, 2, 1, "", "setHiddenWeightsL2"], [96, 2, 1, "", "setInputCols"], [96, 2, 1, "", "setIsMedical"], [96, 2, 1, "", "setLabelColumn"], [96, 2, 1, "", "setMaxSequenceLength"], [96, 2, 1, "", "setModelName"]], "sparknlp_jsl.base": [[97, 1, 1, "", "FeaturesAssembler"]], "sparknlp_jsl.base.FeaturesAssembler": [[97, 4, 1, "", "inputCols"], [97, 4, 1, "", "name"], [97, 4, 1, "", "outputCol"], [97, 2, 1, "", "setInputCols"], [97, 2, 1, "", "setOutputCol"], [97, 2, 1, "", "setParams"]], "sparknlp_jsl.compatibility": [[98, 1, 1, "", "Compatibility"]], "sparknlp_jsl.compatibility.Compatibility": [[98, 2, 1, "", "findVersion"], [98, 2, 1, "", "showVersion"]], "sparknlp_jsl.custom_transformer": [[99, 1, 1, "", "CustomTransformer"]], "sparknlp_jsl.custom_transformer.CustomTransformer": [[99, 4, 1, "", "f"], [99, 2, 1, "", "setInputCol"], [99, 2, 1, "", "setOutputCol"]], "sparknlp_jsl.eval": [[100, 1, 1, "", "NerCrfEvaluation"], [100, 1, 1, "", "NerDLEvaluation"], [100, 1, 1, "", "NerDLMetrics"], [100, 1, 1, "", "NorvigSpellEvaluation"], [100, 1, 1, "", "POSEvaluation"], [100, 1, 1, "", "SymSpellEvaluation"]], "sparknlp_jsl.eval.NerCrfEvaluation": [[100, 2, 1, "", "computeAccuracyAnnotator"], [100, 2, 1, "", "computeAccuracyModel"]], "sparknlp_jsl.eval.NerDLEvaluation": [[100, 2, 1, "", "computeAccuracyAnnotator"], [100, 2, 1, "", "computeAccuracyModel"]], "sparknlp_jsl.eval.NerDLMetrics": [[100, 2, 1, "", "computeMetricsFromDF"]], "sparknlp_jsl.eval.NorvigSpellEvaluation": [[100, 2, 1, "", "computeAccuracyAnnotator"], [100, 2, 1, "", "computeAccuracyModel"]], "sparknlp_jsl.eval.POSEvaluation": [[100, 2, 1, "", "computeAccuracyAnnotator"], [100, 2, 1, "", "computeAccuracyModel"]], "sparknlp_jsl.eval.SymSpellEvaluation": [[100, 2, 1, "", "computeAccuracyAnnotator"], [100, 2, 1, "", "computeAccuracyModel"]], "sparknlp_jsl.freeze": [[101, 6, 1, "", "download_and_extract_model"], [101, 6, 1, "", "extract_model"], [101, 6, 1, "", "freeze_models"], [101, 6, 1, "", "get_bucket"], [101, 6, 1, "", "get_key"], [101, 6, 1, "", "get_milliseconds"], [101, 6, 1, "", "get_possibles_models"], [101, 6, 1, "", "read_metadata"], [101, 6, 1, "", "retrieve_spark_version"]], "sparknlp_jsl.functions": [[102, 6, 1, "", "profile"], [102, 6, 1, "", "profileV22"], [102, 6, 1, "", "profileV23"]], "sparknlp_jsl.internal": [[104, 6, 1, "", "CustomLabels"], [104, 6, 1, "", "EntityWeights"], [104, 6, 1, "", "RelationalCategories"], [104, 6, 1, "", "TargetEntities"]], "sparknlp_jsl.pretrained": [[105, 1, 1, "", "InternalResourceDownloader"], [105, 6, 1, "", "printProgress"]], "sparknlp_jsl.pretrained.InternalResourceDownloader": [[105, 2, 1, "", "downloadModel"], [105, 2, 1, "", "returnPrivateModels"], [105, 2, 1, "", "returnPrivatePipelines"], [105, 2, 1, "", "showAvailableAnnotators"], [105, 2, 1, "", "showPrivateModels"], [105, 2, 1, "", "showPrivatePipelines"], [105, 2, 1, "", "showUnCategorizedResources"]], "sparknlp_jsl.structured_deidentification": [[106, 1, 1, "", "StructuredDeidentification"]], "sparknlp_jsl.structured_deidentification.StructuredDeidentification": [[106, 2, 1, "", "obfuscateColumns"]], "sparknlp_jsl.text_to_documents_columns": [[107, 1, 1, "", "TextToDocumentsColumns"]], "sparknlp_jsl.text_to_documents_columns.TextToDocumentsColumns": [[107, 2, 1, "", "toDocumentsColumns"]], "sparknlp_jsl.training": [[108, 1, 1, "", "AnnotationToolJsonReader"], [108, 1, 1, "", "CantemistReader"], [108, 1, 1, "", "CodiEspReader"], [108, 1, 1, "", "SynonymAugmentationUMLS"], [108, 3, 1, "", "tf_graph"], [108, 3, 1, "", "tf_graph_1x"]], "sparknlp_jsl.training.AnnotationToolJsonReader": [[108, 2, 1, "", "generateAssertionTrainSet"], [108, 2, 1, "", "generateConll"], [108, 2, 1, "", "generatePlainAssertionTrainSet"], [108, 2, 1, "", "readDataset"]], "sparknlp_jsl.training.CantemistReader": [[108, 2, 1, "", "readDatasetTaskNer"]], "sparknlp_jsl.training.CodiEspReader": [[108, 2, 1, "", "readDatasetTaskX"]], "sparknlp_jsl.training.SynonymAugmentationUMLS": [[108, 2, 1, "", "augmentCsv"], [108, 2, 1, "", "augmentDataFrame"]], "sparknlp_jsl.updateModels": [[109, 1, 1, "", "UpdateModels"]], "sparknlp_jsl.updateModels.UpdateModels": [[109, 2, 1, "", "updateCacheModels"], [109, 2, 1, "", "updateModels"]], "sparknlp_jsl.util": [[110, 6, 1, "", "get_mt_samples"]], "sparknlp_jsl.utils": [[111, 0, 0, "-", "alab_utils"]], "sparknlp_jsl.utils.alab_utils": [[111, 6, 1, "", "get_ner_df"], [111, 6, 1, "", "get_ner_sentence_borders"], [111, 6, 1, "", "get_nlp_pos_pipeline"], [111, 6, 1, "", "get_nlp_regex_pos_pipeline"], [111, 6, 1, "", "get_nlp_regex_token_pipeline"], [111, 6, 1, "", "get_nlp_token_pipeline"], [111, 6, 1, "", "get_rel_df"], [111, 6, 1, "", "get_sentence_pipeline"], [111, 6, 1, "", "get_single_task_conll"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"get": 0, "start": 0, "requir": 0, "instal": 0, "spark": [0, 1], "nlp": [0, 1], "session": 0, "from": 0, "python": 0, "document": 1, "content": [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "sparknlp_jsl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "_tf_graph_build": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "assertion_dl": [2, 3, 25, 26], "assertion_model": [2, 25], "modul": [2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113], "class": [2, 4, 6, 8, 9, 10, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109], "submodul": [3, 7, 11, 14, 21, 26, 30, 34, 37, 45, 53, 55, 60, 62, 64, 70, 72, 73, 75, 76, 84, 85, 87, 92, 103, 112], "generic_classifi": [4, 5, 6, 7, 8, 9, 27, 28, 29, 30, 31, 32, 71, 72], "basetfmodel": [4, 27], "build_model": [5, 28], "generic_classifier_model": [6, 29], "progresstrack": [8, 31], "set": [9, 32], "graph_build": [10, 33], "subpackag": [11, 34, 73, 103], "ner_dl": [12, 13, 14, 15, 16, 17, 35, 36, 37, 38, 39, 40], "create_graph": [12, 35], "function": [12, 23, 35, 41, 101, 102, 103, 104, 105, 110, 111], "dataset_encod": [13, 36], "ner_model": [15, 38], "ner_model_sav": [16, 39], "sentence_group": [17, 40], "tf2contrib": [18, 19, 20, 21, 22, 23, 24], "core_rnn_cel": 18, "attribut": [18, 20, 22, 24, 103, 108], "fused_rnn_cel": 19, "gru_op": 20, "packag": [21, 73, 103], "lstm_op": 22, "rnn": 23, "rnn_cell": 24, "_tf_graph_builders_1x": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "alab": 41, "annot": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "annotation_merg": 42, "assert": [43, 44, 45], "assertiondl": 43, "assertion_dl_reg": 44, "chunker": [46, 47, 48, 49, 50, 51, 52, 53], "assertion_filter": 46, "chunk_convert": 47, "chunk_key_phrase_extract": 48, "chunk_sentence_splitt": 49, "chunker_filter": 50, "chunkmapp": 51, "chunkmapper_filter": 52, "classif": [54, 55, 56, 57, 58], "document_log_classifi": 54, "medical_bert_for_sequence_classif": 56, "medical_bert_for_token_classifi": 57, "medical_distilbert_for_sequence_classif": 58, "context": [59, 60], "contextual_pars": 59, "deid": [61, 62, 63], "deidentif": 61, "reidentif": 63, "disambigu": [64, 65], "ner_disambigu": 65, "doc2_chunk_intern": 66, "embed": [67, 68, 69, 70], "average_embed": 67, "bert_sentence_embed": 68, "entity_chunk_embed": 69, "merg": [74, 75], "chunker_merg": 74, "ner": [76, 77, 78, 79, 80, 81], "iob_tagg": 77, "medical_n": 78, "ner_chunk": 79, "ner_converter_intern": 80, "zero_shot_n": 81, "normal": [82, 83, 84], "date_norm": 82, "drug_norm": 83, "qa": [85, 86], "qa_ner_gener": 86, "re": [87, 88, 89, 90, 91], "relation_extract": 88, "relation_extraction_dl": 89, "relation_ner_chunk_filt": 90, "zero_shot_relation_extract": 91, "resolut": [92, 93, 94], "resolver_merg": 93, "sentence_entity_resolv": 94, "router": 95, "tf_graph_build": 96, "base": 97, "compat": 98, "custom_transform": 99, "eval": 100, "freez": 101, "intern": 104, "pretrain": 105, "structured_deidentif": 106, "text_to_documents_column": 107, "train": 108, "updatemodel": 109, "util": [110, 111, 112], "alab_util": 111, "api": 113, "refer": 113}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})